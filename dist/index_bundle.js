!function(Q){var n={};function B(F){if(n[F])return n[F].exports;var t=n[F]={i:F,l:!1,exports:{}};return Q[F].call(t.exports,t,t.exports,B),t.l=!0,t.exports}B.m=Q,B.c=n,B.d=function(Q,n,F){B.o(Q,n)||Object.defineProperty(Q,n,{enumerable:!0,get:F})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,n){if(1&n&&(Q=B(Q)),8&n)return Q;if(4&n&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var F=Object.create(null);if(B.r(F),Object.defineProperty(F,"default",{enumerable:!0,value:Q}),2&n&&"string"!=typeof Q)for(var t in Q)B.d(F,t,function(n){return Q[n]}.bind(null,t));return F},B.n=function(Q){var n=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(n,"a",n),n},B.o=function(Q,n){return Object.prototype.hasOwnProperty.call(Q,n)},B.p="",B(B.s=16)}([function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\nexports.BindUpdateShareUrl = BindUpdateShareUrl;\nexports.updateShareUrl = updateShareUrl;\nexports.AddShareSettingsToConfig = AddShareSettingsToConfig;\nexports.BindCopyLinkEvents = BindCopyLinkEvents;\n\nvar _map = __webpack_require__(1);\n\nvar _baselayer = __webpack_require__(14);\n\nvar _layer = __webpack_require__(5);\n\nvar _poi = __webpack_require__(8);\n\nvar _panel = __webpack_require__(2);\n\nfunction BindUpdateShareUrl(map) {\n\tmap.on("moveend", updateShareUrl);\n}\n\nfunction updateShareUrl(e) {\n\tvar map = (0, _map.GetMap)();\n\n\tvar params = [makeCenterString(map), makeZoomString(map), makeLayerString(map), makeLayerGroupsString(), makeBaseLayerString(map), makePointsOfInterestString(), makeActiveTabString(), makeActiveGraphTabString()];\n\n\tsetShareUrl(makeShareUrl(params));\n\tsetCopyLinkUrl();\n\tsetSocialUrls();\n}\n\nfunction AddShareSettingsToConfig(config) {\n\tvar share = parseShareUrl();\n\tif (!share) return;\n\tif (share.center) config.map.center = share.center;\n\tif (share.zoom) config.map.zoom = share.zoom;\n\tif (share.layers) addLayerSettingsToConfig(share.layers, config);\n\tif (share.baselayers) addBaseLayerSettingsToConfig(share.baselayers, config);\n\tif (share.pois) addPointsOfInterestToConfig(share.pois, config);\n\tif (share.tab) config.tab = share.tab;\n\tif (share.graph) config.graph = share.graph;\n\tif (share.layerGroups) config.layerGroups = addLayerGroupSettingsToConfig(share.layerGroups, config);\n}\n\nfunction makeShareUrl(params) {\n\treturn "?" + params.filter(function (p) {\n\t\treturn p !== undefined;\n\t}).join("&");\n}\n\nfunction setShareUrl(url) {\n\tif (window.history && window.history.replaceState) {\n\t\twindow.history.replaceState({}, "", url);\n\t}\n}\n\nfunction setCopyLinkUrl() {\n\tvar url = window.location.href;\n\tdocument.getElementById("shareurl-link-url").setAttribute("value", url);\n}\n\nfunction BindCopyLinkEvents() {\n\td3.select(document).on("click", handleBodyClick);\n\td3.select(".shareurl-link a").on("click", handleShareLinkButtonClick);\n\td3.select(".shareurl-link-url").on("click", handleShareLinkUrlClick);\n\td3.select(".shareurl-link-popup-remover").on("click", handleShareLinkCloseButtonClick);\n}\n\n/**\n * Should close the copy link popup if it is active and if you click on any element\n * that is not the popup or its children.\n */\nfunction handleBodyClick() {\n\tvar event = d3.event;\n\tvar nodePath = [];\n\tnodePath = getDomPath(event.target);\n\n\tvar toClosePopup = true;\n\tvar i, l;\n\n\tfor (i = 0, l = nodePath.length; i < l; i++) {\n\t\ttry {\n\t\t\tif (nodePath[i].classList.contains(\'shareurl-link-popup\') || nodePath[i].classList.contains(\'shareurl-link\')) {\n\t\t\t\ttoClosePopup = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// clicking svg throws an error in IE\n\t\t}\n\t}\n\n\tif (toClosePopup) {\n\t\tvar sharePopup = document.getElementsByClassName(\'shareurl-link-popup\').item(0);\n\t\thandleCopyLinkClose(sharePopup);\n\t}\n}\n\nfunction getDomPath(node) {\n\tvar path = [];\n\twhile (node && node.parentNode) {\n\t\tpath.push(node);\n\t\tnode = node.parentNode;\n\t}\n\treturn path;\n}\n\nfunction handleShareLinkButtonClick() {\n\tvar sharePopup = document.getElementsByClassName("shareurl-link-popup").item(0);\n\tif (d3.select(sharePopup).classed("active")) {\n\t\thandleCopyLinkClose(sharePopup);\n\t} else {\n\t\thandleCopyLinkOpen(sharePopup);\n\t}\n}\n\nfunction handleShareLinkCloseButtonClick() {\n\tvar sharePopup = document.getElementsByClassName("shareurl-link-popup").item(0);\n\thandleCopyLinkClose(sharePopup);\n}\n\nfunction handleShareLinkUrlClick() {\n\tselectCopyLinkUrl();\n}\n\nfunction handleCopyLinkOpen(sharePopup) {\n\tsharePopup.classList.toggle("active");\n\tselectCopyLinkUrl();\n\n\t//send google analytics event click on share url\n\tga(\'send\', \'event\', {\n\t\teventCategory: \'shareurl\',\n\t\teventAction: \'open\',\n\t\teventLabel: document.getElementById("shareurl-link-url").getAttribute("value"),\n\t\tnonInteraction: false\n\t});\n}\n\nfunction handleCopyLinkClose(sharePopup) {\n\n\t//send google analytics event click on share url close\n\tga(\'send\', \'event\', {\n\t\teventCategory: \'shareurl\',\n\t\teventAction: \'close\',\n\t\teventLabel: document.getElementById("shareurl-link-url").getAttribute("value"),\n\t\tnonInteraction: false\n\t});\n\n\tsharePopup.classList.remove("active");\n}\n\nfunction selectCopyLinkUrl() {\n\tvar shareInput = document.getElementById("shareurl-link-url");\n\tshareInput.focus();\n\tshareInput.setSelectionRange(0, shareInput.value.length);\n}\n\nfunction setSocialUrls() {\n\tvar url = mangleParamString(window.location.href);\n\tvar socialLinks = document.getElementsByClassName("shareurl-social");\n\tvar socialLink;\n\tvar newUrl;\n\tvar i, l;\n\n\tfor (i = 0, l = socialLinks.length; i < l; i++) {\n\t\tsocialLink = socialLinks[i];\n\n\t\tnewUrl = socialLink.getAttribute("data-baseurl") + url;\n\t\tsocialLink.setAttribute("href", newUrl);\n\n\t\t//send google analytics event for social urls\n\t\tsocialLink.addEventListener(\'click\', function () {\n\n\t\t\tga(\'send\', \'event\', {\n\t\t\t\teventCategory: \'shareurl\',\n\t\t\t\teventAction: this.getAttribute("aria-label"),\n\t\t\t\teventLabel: this.href,\n\t\t\t\tnonInteraction: false\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction makeCenterString(map) {\n\tvar center = map.getCenter();\n\treturn "center=" + center.lat.toString() + "," + center.lng.toString();\n}\n\nfunction makeZoomString(map) {\n\treturn "zoom=" + map.getZoom();\n}\n\nfunction makeLayerString(map) {\n\tvar layers = [];\n\tvar opacityVals = {};\n\tvar currentLayers = (0, _layer.GetCurrentLayers)();\n\n\tmap.eachLayer(function (layer) {\n\t\tvar options = layer.options;\n\t\tif (options && options.layers) {\n\t\t\topacityVals[options.layers] = options.hasOwnProperty("opacity") ? options.opacity : "1";\n\t\t}\n\t});\n\n\tvar currentLayer;\n\tvar i;\n\tfor (i = 0; i < currentLayers.length; i++) {\n\t\tcurrentLayer = currentLayers[i];\n\t\tlayers.push(currentLayer);\n\t\tlayers.push(opacityVals[currentLayer]);\n\t}\n\treturn "layers=" + layers.join(",");\n}\n\nfunction makeBaseLayerString(map) {\n\tvar layers = [];\n\tmap.eachLayer(function (layer) {\n\t\tif (layer.options && layer.options.type === _baselayer.BASE_LAYER_TYPE) {\n\t\t\tlayers.push(layer.options.id);\n\t\t}\n\t});\n\treturn "baselayers=" + layers.join(",");\n}\n\nfunction makeLayerGroupsString() {\n\tvar activeLayerGroups = (0, _panel.GetActiveLayerGroups)();\n\treturn "layerGroups=" + activeLayerGroups.map(function (d) {\n\t\treturn d.id;\n\t}).join(\',\');\n}\n\nfunction makePointsOfInterestString() {\n\tvar pois = (0, _poi.GetAllPointsOfInterest)();\n\tif (!pois.length) return;\n\tvar poiString = "pois=";\n\tpois.forEach(function (poi) {\n\t\tpoiString += poi.lat + \',\' + poi.lng;\n\t\tif (poi.plots && poi.plots.length) {\n\t\t\tpoiString += \',\' + poi.plots.join(\',\');\n\t\t}\n\t\tpoiString += \';\';\n\t});\n\treturn poiString;\n}\n\nfunction makeActiveTabString() {\n\treturn "tab=" + d3.select(".panel-top-btn.active").attr("data-active");\n}\n\nfunction makeActiveGraphTabString() {\n\treturn "graph=" + d3.select(".graph-type-btn.active").attr("data-type");\n}\n\nfunction parseShareUrl() {\n\tvar params = window.location.search;\n\tif (params === "") return;\n\n\tparams = getParamsArray(params);\n\tparams = makeKeyedParamsObject(params);\n\n\tformatParams(params);\n\treturn params;\n}\n\nfunction getParamsArray(params) {\n\tparams = params.substring(1);\n\tparams = unmangleParamString(params);\n\treturn params.split("&");\n}\n\nfunction mangleParamString(url) {\n\treturn url.replace(/\\:/g, "%3A").replace(/\\;/g, "%3B").replace(/\\//g, "%2F").replace(/\\,/g, "%2C").replace(/\\&/g, "%26");\n}\n\nfunction unmangleParamString(params) {\n\treturn params.replace(/\\%2[c|C]/g, ",").replace(/\\%3[b|B]/g, ";");\n}\n\nfunction makeKeyedParamsObject(paramsArr) {\n\tvar parsedParams = {};\n\tvar paramPair;\n\tvar i;\n\n\tfor (i = 0; i < paramsArr.length; i++) {\n\t\tparamPair = paramsArr[i].split("=");\n\t\tparsedParams[paramPair[0]] = paramPair[1];\n\t}\n\n\treturn parsedParams;\n}\n\nfunction formatParams(params) {\n\tif (params.center) params.center = formatCenterParam(params.center);\n\tif (params.layers) params.layers = formatLayerParam(params.layers);\n\tif (params.baselayers) params.baselayers = formatBaseLayerParam(params.baselayers);\n\tif (params.pois) params.pois = formatPointsOfInterestParam(params.pois);\n\tif (params.layerGroups) params.layerGroups = formatLayerGroupsParam(params.layerGroups);\n}\n\nfunction formatCenterParam(center) {\n\treturn center.split(",");\n}\n\nfunction formatLayerParam(layers) {\n\tvar formattedLayers = {\n\t\t"enabledLayers": [],\n\t\t"opacityVals": {}\n\t};\n\tvar layerId;\n\tvar i;\n\n\tlayers = layers.split(",");\n\tfor (i = 0; i < layers.length; i = i + 2) {\n\t\tlayerId = layers[i];\n\t\tformattedLayers.enabledLayers.push(layerId);\n\t\tformattedLayers.opacityVals[layerId] = layers[i + 1];\n\t}\n\n\treturn formattedLayers;\n}\n\nfunction formatBaseLayerParam(baselayers) {\n\treturn baselayers.split(",");\n}\n\nfunction formatPointsOfInterestParam(pois) {\n\treturn pois.split(\';\').filter(function (str) {\n\t\treturn str !== \'\';\n\t}).map(function (poi) {\n\t\tpoi = poi.split(\',\');\n\t\tif (poi.length > 2) {\n\t\t\treturn (0, _poi.createPOI)(poi[0], poi[1], poi.splice(2));\n\t\t} else {\n\t\t\treturn (0, _poi.createPOI)(poi[0], poi[1], null);\n\t\t}\n\t});\n}\n\nfunction formatLayerGroupsParam(layerGroupSettings) {\n\treturn layerGroupSettings.split(\',\');\n}\n\nfunction addLayerGroupSettingsToConfig(activeLayerGroupIds, config) {\n\tconfig.layout[\'layer-groups-order\'].forEach(function (layerGroup) {\n\t\t// set layer group to active if its id appears in the share url settings\n\t\tlayerGroup.active = activeLayerGroupIds.filter(function (id) {\n\t\t\treturn id === layerGroup.id;\n\t\t}).length > 0;\n\t});\n}\n\nfunction addLayerSettingsToConfig(shareLayerSettings, config) {\n\tvar enabledLayers = shareLayerSettings.enabledLayers;\n\tconfig["active-layers"] = enabledLayers;\n\n\tvar i, j, prop, layergroup;\n\tvar enabledLayer;\n\tvar foundLayer;\n\tvar layers = config.layers;\n\n\tfor (i = 0; i < enabledLayers.length; i++) {\n\t\tfoundLayer = false;\n\t\tenabledLayer = enabledLayers[i];\n\t\tfor (prop in layers) {\n\t\t\tif (!layers.hasOwnProperty(prop)) return;\n\t\t\tlayergroup = layers[prop];\n\t\t\tfor (j = 0; j < layergroup.length; j++) {\n\t\t\t\tif (layergroup[j].id === enabledLayer) {\n\t\t\t\t\tlayergroup[j].opacity = shareLayerSettings.opacityVals[enabledLayer];\n\t\t\t\t\tfoundLayer = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (foundLayer) break;\n\t\t}\n\t}\n}\n\nfunction addBaseLayerSettingsToConfig(shareBaseLayerSettings, config) {\n\tvar baselayers = config.baselayers;\n\tvar baselayer;\n\tvar i;\n\n\tfor (i = 0; i < baselayers.length; i++) {\n\t\tbaselayer = baselayers[i];\n\t\tbaselayer.active = shareBaseLayerSettings.indexOf(baselayer.id) !== -1 ? true : false;\n\t}\n}\n\nfunction addPointsOfInterestToConfig(pois, config) {\n\tconfig["pois"] = pois;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.clearMap = clearMap;\nexports.CreateMap = CreateMap;\nexports.GetMap = GetMap;\n\nvar _poi = __webpack_require__(8);\n\nvar _layer = __webpack_require__(5);\n\nvar _graph = __webpack_require__(9);\n\nvar _panel = __webpack_require__(2);\n\nvar _share = __webpack_require__(0);\n\nvar map;\n\nfunction clearMap() {\n\t(0, _poi.removeAllPointsOfInterest)();\n\t(0, _graph.removeAllGraphs)();\n\t(0, _layer.turnOffNonBaseLayers)();\n\t(0, _panel.resetPanelState)();\n\t(0, _panel.updatePanelDragOverlayHeight)();\n\t(0, _share.updateShareUrl)();\n}\n\nfunction CreateMap(mapConfig) {\n\tvar id = mapConfig.id || \"map\";\n\tvar options = mapConfig.options || { \"scrollWheelZoom\": false };\n\tvar initialCenter = mapConfig.center || [\"38.5\", \"-81\"];\n\tvar initialZoom = mapConfig.zoom || 6;\n\n\tmap = L.map(id, options).setView(initialCenter, initialZoom);\n\tL.control.attribution().addTo(map);\n\n\tvar leafletZoomIn = document.getElementsByClassName(\"leaflet-control-zoom-in\")[0];\n\n\tleafletZoomIn.addEventListener(\"click\", function () {\n\t\t//send google analytics for seacrch by address\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'map',\n\t\t\teventAction: 'click button',\n\t\t\teventLabel: 'zoom in',\n\t\t\tnonInteraction: false\n\t\t});\n\t});\n\n\tvar leafletZoomOut = document.getElementsByClassName(\"leaflet-control-zoom-out\")[0];\n\n\tleafletZoomOut.addEventListener(\"click\", function () {\n\t\t//send google analytics for seacrch by address\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'map',\n\t\t\teventAction: 'click button',\n\t\t\teventLabel: 'zoom out',\n\t\t\tnonInteraction: false\n\t\t});\n\t});\n\n\tmap.on(\"dragend\", function (e) {\n\t\t//send google analytics for drag (pan) end\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'map',\n\t\t\teventAction: 'drag',\n\t\t\teventLabel: JSON.stringify(map.getBounds()),\n\t\t\tnonInteraction: true\n\t\t});\n\t});\n\n\tmap.on(\"zoomend\", function (e) {\n\t\t//send google analytics for zoom end\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'map',\n\t\t\teventAction: 'zoom',\n\t\t\teventLabel: JSON.stringify(map.getBounds()),\n\t\t\tnonInteraction: true\n\t\t});\n\t});\n\treturn map;\n}\n\nfunction GetMap() {\n\treturn map;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9tYXAuanM/ZjdjNCJdLCJuYW1lcyI6WyJjbGVhck1hcCIsIkNyZWF0ZU1hcCIsIkdldE1hcCIsIm1hcCIsIm1hcENvbmZpZyIsImlkIiwib3B0aW9ucyIsImluaXRpYWxDZW50ZXIiLCJjZW50ZXIiLCJpbml0aWFsWm9vbSIsInpvb20iLCJMIiwic2V0VmlldyIsImNvbnRyb2wiLCJhdHRyaWJ1dGlvbiIsImFkZFRvIiwibGVhZmxldFpvb21JbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJnYSIsImV2ZW50Q2F0ZWdvcnkiLCJldmVudEFjdGlvbiIsImV2ZW50TGFiZWwiLCJub25JbnRlcmFjdGlvbiIsImxlYWZsZXRab29tT3V0Iiwib24iLCJlIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldEJvdW5kcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFTZ0JBLFEsR0FBQUEsUTtRQVNBQyxTLEdBQUFBLFM7UUF1REFDLE0sR0FBQUEsTTs7QUF6RWhCOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUVBLElBQUlDLEdBQUo7O0FBRU8sU0FBU0gsUUFBVCxHQUFxQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTSxTQUFTQyxTQUFULENBQW9CRyxTQUFwQixFQUErQjtBQUNyQyxLQUFJQyxLQUFLRCxVQUFVQyxFQUFWLElBQWdCLEtBQXpCO0FBQ0EsS0FBSUMsVUFBVUYsVUFBVUUsT0FBVixJQUFxQixFQUFDLG1CQUFvQixLQUFyQixFQUFuQztBQUNBLEtBQUlDLGdCQUFnQkgsVUFBVUksTUFBVixJQUFvQixDQUFDLE1BQUQsRUFBUyxLQUFULENBQXhDO0FBQ0EsS0FBSUMsY0FBY0wsVUFBVU0sSUFBVixJQUFrQixDQUFwQzs7QUFFQVAsT0FBTVEsRUFBRVIsR0FBRixDQUFNRSxFQUFOLEVBQVVDLE9BQVYsRUFBbUJNLE9BQW5CLENBQTJCTCxhQUEzQixFQUEwQ0UsV0FBMUMsQ0FBTjtBQUNBRSxHQUFFRSxPQUFGLENBQVVDLFdBQVYsR0FBd0JDLEtBQXhCLENBQThCWixHQUE5Qjs7QUFFQSxLQUFJYSxnQkFBZ0JDLFNBQVNDLHNCQUFULENBQWdDLHlCQUFoQyxFQUEyRCxDQUEzRCxDQUFwQjs7QUFFQUYsZUFBY0csZ0JBQWQsQ0FBK0IsT0FBL0IsRUFBd0MsWUFBVTtBQUNqRDtBQUNBQyxLQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ25CQyxrQkFBZSxLQURJO0FBRW5CQyxnQkFBYSxjQUZNO0FBR25CQyxlQUFZLFNBSE87QUFJbkJDLG1CQUFnQjtBQUpHLEdBQXBCO0FBTUEsRUFSRDs7QUFVQSxLQUFJQyxpQkFBaUJSLFNBQVNDLHNCQUFULENBQWdDLDBCQUFoQyxFQUE0RCxDQUE1RCxDQUFyQjs7QUFFQU8sZ0JBQWVOLGdCQUFmLENBQWdDLE9BQWhDLEVBQXlDLFlBQVU7QUFDbEQ7QUFDQUMsS0FBRyxNQUFILEVBQVcsT0FBWCxFQUFvQjtBQUNuQkMsa0JBQWUsS0FESTtBQUVuQkMsZ0JBQWEsY0FGTTtBQUduQkMsZUFBWSxVQUhPO0FBSW5CQyxtQkFBZ0I7QUFKRyxHQUFwQjtBQU1BLEVBUkQ7O0FBVUFyQixLQUFJdUIsRUFBSixDQUFPLFNBQVAsRUFBa0IsVUFBU0MsQ0FBVCxFQUFXO0FBQzVCO0FBQ0FQLEtBQUcsTUFBSCxFQUFXLE9BQVgsRUFBb0I7QUFDbkJDLGtCQUFlLEtBREk7QUFFbkJDLGdCQUFhLE1BRk07QUFHbkJDLGVBQVlLLEtBQUtDLFNBQUwsQ0FBZTFCLElBQUkyQixTQUFKLEVBQWYsQ0FITztBQUluQk4sbUJBQWdCO0FBSkcsR0FBcEI7QUFNQSxFQVJEOztBQVVBckIsS0FBSXVCLEVBQUosQ0FBTyxTQUFQLEVBQWtCLFVBQVNDLENBQVQsRUFBVztBQUM1QjtBQUNBUCxLQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ25CQyxrQkFBZSxLQURJO0FBRW5CQyxnQkFBYSxNQUZNO0FBR25CQyxlQUFZSyxLQUFLQyxTQUFMLENBQWUxQixJQUFJMkIsU0FBSixFQUFmLENBSE87QUFJbkJOLG1CQUFnQjtBQUpHLEdBQXBCO0FBTUEsRUFSRDtBQVNBLFFBQU9yQixHQUFQO0FBQ0E7O0FBRU0sU0FBU0QsTUFBVCxHQUFtQjtBQUN6QixRQUFPQyxHQUFQO0FBQ0EiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cmVtb3ZlQWxsUG9pbnRzT2ZJbnRlcmVzdH0gZnJvbSAnLi9wb2knXG5pbXBvcnQge3R1cm5PZmZOb25CYXNlTGF5ZXJzfSBmcm9tICcuL2xheWVyJ1xuaW1wb3J0IHtyZW1vdmVBbGxHcmFwaHN9IGZyb20gJy4vZ3JhcGgnXG5pbXBvcnQge3Jlc2V0UGFuZWxTdGF0ZX0gZnJvbSAnLi9wYW5lbCdcbmltcG9ydCB7dXBkYXRlUGFuZWxEcmFnT3ZlcmxheUhlaWdodH0gZnJvbSAgJy4vcGFuZWwnXG5pbXBvcnQge3VwZGF0ZVNoYXJlVXJsfSBmcm9tICcuL3NoYXJlJ1xuXG52YXIgbWFwO1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJNYXAgKCkge1xuXHRyZW1vdmVBbGxQb2ludHNPZkludGVyZXN0KClcblx0cmVtb3ZlQWxsR3JhcGhzKClcblx0dHVybk9mZk5vbkJhc2VMYXllcnMoKVxuXHRyZXNldFBhbmVsU3RhdGUoKVxuXHR1cGRhdGVQYW5lbERyYWdPdmVybGF5SGVpZ2h0KClcblx0dXBkYXRlU2hhcmVVcmwoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gQ3JlYXRlTWFwIChtYXBDb25maWcpIHtcblx0dmFyIGlkID0gbWFwQ29uZmlnLmlkIHx8IFwibWFwXCI7XG5cdHZhciBvcHRpb25zID0gbWFwQ29uZmlnLm9wdGlvbnMgfHwge1wic2Nyb2xsV2hlZWxab29tXCIgOiBmYWxzZX07XG5cdHZhciBpbml0aWFsQ2VudGVyID0gbWFwQ29uZmlnLmNlbnRlciB8fCBbXCIzOC41XCIsIFwiLTgxXCJdO1xuXHR2YXIgaW5pdGlhbFpvb20gPSBtYXBDb25maWcuem9vbSB8fCA2O1xuXG5cdG1hcCA9IEwubWFwKGlkLCBvcHRpb25zKS5zZXRWaWV3KGluaXRpYWxDZW50ZXIsIGluaXRpYWxab29tKTtcblx0TC5jb250cm9sLmF0dHJpYnV0aW9uKCkuYWRkVG8obWFwKVxuXG5cdHZhciBsZWFmbGV0Wm9vbUluID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImxlYWZsZXQtY29udHJvbC16b29tLWluXCIpWzBdO1xuXG5cdGxlYWZsZXRab29tSW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XG5cdFx0Ly9zZW5kIGdvb2dsZSBhbmFseXRpY3MgZm9yIHNlYWNyY2ggYnkgYWRkcmVzc1xuXHRcdGdhKCdzZW5kJywgJ2V2ZW50Jywge1xuXHRcdFx0ZXZlbnRDYXRlZ29yeTogJ21hcCcsXG5cdFx0XHRldmVudEFjdGlvbjogJ2NsaWNrIGJ1dHRvbicsXG5cdFx0XHRldmVudExhYmVsOiAnem9vbSBpbicsXG5cdFx0XHRub25JbnRlcmFjdGlvbjogZmFsc2Vcblx0XHR9KTtcblx0fSlcblxuXHR2YXIgbGVhZmxldFpvb21PdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibGVhZmxldC1jb250cm9sLXpvb20tb3V0XCIpWzBdO1xuXG5cdGxlYWZsZXRab29tT3V0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuXHRcdC8vc2VuZCBnb29nbGUgYW5hbHl0aWNzIGZvciBzZWFjcmNoIGJ5IGFkZHJlc3Ncblx0XHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0XHRcdGV2ZW50Q2F0ZWdvcnk6ICdtYXAnLFxuXHRcdFx0ZXZlbnRBY3Rpb246ICdjbGljayBidXR0b24nLFxuXHRcdFx0ZXZlbnRMYWJlbDogJ3pvb20gb3V0Jyxcblx0XHRcdG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHRcdH0pO1xuXHR9KVxuXG5cdG1hcC5vbihcImRyYWdlbmRcIiwgZnVuY3Rpb24oZSl7XG5cdFx0Ly9zZW5kIGdvb2dsZSBhbmFseXRpY3MgZm9yIGRyYWcgKHBhbikgZW5kXG5cdFx0Z2EoJ3NlbmQnLCAnZXZlbnQnLCB7XG5cdFx0XHRldmVudENhdGVnb3J5OiAnbWFwJyxcblx0XHRcdGV2ZW50QWN0aW9uOiAnZHJhZycsXG5cdFx0XHRldmVudExhYmVsOiBKU09OLnN0cmluZ2lmeShtYXAuZ2V0Qm91bmRzKCkpLFxuXHRcdFx0bm9uSW50ZXJhY3Rpb246IHRydWVcblx0XHR9KTtcblx0fSlcblxuXHRtYXAub24oXCJ6b29tZW5kXCIsIGZ1bmN0aW9uKGUpe1xuXHRcdC8vc2VuZCBnb29nbGUgYW5hbHl0aWNzIGZvciB6b29tIGVuZFxuXHRcdGdhKCdzZW5kJywgJ2V2ZW50Jywge1xuXHRcdFx0ZXZlbnRDYXRlZ29yeTogJ21hcCcsXG5cdFx0XHRldmVudEFjdGlvbjogJ3pvb20nLFxuXHRcdFx0ZXZlbnRMYWJlbDogSlNPTi5zdHJpbmdpZnkobWFwLmdldEJvdW5kcygpKSxcblx0XHRcdG5vbkludGVyYWN0aW9uOiB0cnVlXG5cdFx0fSk7XG5cdH0pXG5cdHJldHVybiBtYXA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRNYXAgKCkge1xuXHRyZXR1cm4gbWFwO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.GetActiveLayerGroups = GetActiveLayerGroups;\nexports.resetPanelState = resetPanelState;\nexports.getLayerGroups = getLayerGroups;\nexports.SetupPanel = SetupPanel;\nexports.updatePanelDragOverlayHeight = updatePanelDragOverlayHeight;\nexports.toggleLayerToolsUI = toggleLayerToolsUI;\n\nvar _layer = __webpack_require__(5);\n\nvar _opacitySlider = __webpack_require__(31);\n\nvar _share = __webpack_require__(0);\n\nvar layerGroupLayout = [];\nvar layerGroups;\n\nfunction GetActiveLayerGroups() {\n    return layerGroupLayout.filter(function (layerGroup) {\n        return layerGroup.active;\n    });\n}\n\nfunction resetPanelState() {}\n\nfunction getLayerGroups() {\n    return layerGroups;\n}\n\nfunction SetupPanel(layers, layout) {\n    layerGroupLayout = layout['layer-groups-order'];\n    layerGroups = makeLayerGroups(layout['layer-groups-order']);\n    makeLayerElems(layerGroups, layers);\n    makePanelDraggable();\n    setPanelScrollHandler();\n}\n\nfunction browserIsInternetExplorer() {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('MSIE') > -1 || ua.indexOf('rv:11.0') > -1;\n}\n\nfunction setPanelScrollHandler() {\n    var panel = document.getElementById('right-panel');\n    panel.onscroll = updatePanelDragOverlayHeight;\n}\n\nfunction makePanelDraggable() {\n    if (browserIsInternetExplorer()) return;\n\n    var overlay = d3.select('#right-panel-drag-overlay');\n\n    overlay.style('cursor', 'ew-resize');\n\n    overlay.call(d3.drag().on('drag', function () {\n        panelDragEventHandler.call(this);\n    }));\n}\n\nfunction panelDragEventHandler() {\n    updatePanelDragOverlayHeight();\n    updatePanelWidth();\n}\n\nfunction updatePanelDragOverlayHeight() {\n    var panel = d3.select('#right-panel');\n    var panelOffsetHeight = panel.property('offsetHeight');\n    var panelDragOverlay = document.getElementById('right-panel-drag-overlay');\n    var header = document.getElementById('right-panel-header');\n\n    var newHeight;\n\n    if (panel.classed('graphs-active')) {\n        var graphListExtraSpace = 700;\n        var graphList = document.getElementById('graph-list');\n        newHeight = header.scrollHeight + graphList.scrollHeight + graphListExtraSpace;\n    } else {\n        // panel.classed('layers-active')\n        var layerList = document.getElementById('layer-list');\n        newHeight = header.scrollHeight + layerList.scrollHeight;\n    }\n    newHeight = newHeight > panelOffsetHeight ? \"\" + newHeight + 'px' : null;\n    panelDragOverlay.style.height = newHeight;\n}\n\nfunction updatePanelWidth() {\n    var panel = d3.select('#right-panel');\n    var panelMinWidth = +panel.style('min-width').slice(0, -2);\n    var panelClientWidth = panel.property('clientWidth');\n\n    var wrapper = document.getElementById('wrapper');\n    var wrapperWidth = wrapper.clientWidth;\n\n    var mapWrapper = document.getElementById('map-wrapper');\n\n    var mouseX = d3.event.sourceEvent.x;\n    var xDelta = wrapperWidth - mouseX - panelClientWidth;\n\n    var newPanelWidth = panelClientWidth + xDelta;\n    newPanelWidth = newPanelWidth < panelMinWidth ? panelMinWidth : newPanelWidth > wrapperWidth ? wrapperWidth : newPanelWidth;\n    mapWrapper.style.paddingRight = \"\" + newPanelWidth + 'px';\n    panel.style('width', \"\" + newPanelWidth + 'px');\n}\n\nfunction makeLayerGroups(layout) {\n    return d3.select('#layer-list').selectAll('.layer-group-wrapper').data(layout).enter().append('div').attr('class', 'layer-group-wrapper').attr('id', function (layerGroup) {\n        return layerGroup.id;\n    }).classed('active', function (layerGroup) {\n        return layerGroup.active;\n    }).each(function (layerGroup) {\n        var group = d3.select(this).append('div').attr('class', 'layer-group-btn btn').on('click', function (layerGroup) {\n\n            //send google analytics toggle the layer list accordians\n            ga('send', 'event', {\n                eventCategory: 'layer list',\n                eventAction: 'toggle ' + !layerGroup.active,\n                eventLabel: layerGroup.name,\n                nonInteraction: false\n            });\n\n            layerGroup.active = !layerGroup.active;\n            d3.select(this.parentNode).classed('active', function () {\n                return layerGroup.active;\n            });\n            updatePanelDragOverlayHeight();\n            (0, _share.updateShareUrl)();\n        }).text(layerGroup.name);\n        makeDescription(layerGroup, group);\n    }).append('div').attr('class', 'layer-group');\n}\n\nfunction makeLayerElems(layerGroups, layers) {\n    layerGroups.selectAll('.layer-select').data(function (layerGroup) {\n        return layers[layerGroup.id];\n    }).enter().append('div').attr('class', 'layer-select').each(function (layer) {\n        var groupName = this.parentNode.parentNode.id;\n        var layerDiv = d3.select(this);\n        layer.layerDiv = layerDiv;\n        makeCheckbox(layer, layerDiv);\n        makeLabel(layer, layerDiv);\n        makeDescription(layer, layerDiv);\n        layerDiv.node().appendChild(makeLayerTools(layer));\n    });\n}\n\nfunction makeCheckbox(layer, layerDiv) {\n    layerDiv.append('input').attr('type', 'checkbox').attr('id', function (layer) {\n        return layer.id;\n    }).attr('checked', function (layer) {\n        return layer.active ? 'checked' : null;\n    }).on('click', function (layer) {\n        (0, _layer.toggleLayer)(layer);\n        toggleLayerToolsUI(layer);\n    });\n}\n\nfunction toggleLayerToolsUI(layer) {\n    layer.layerDiv.select('.layer-tools-wrapper').classed('active', layer.active);\n    if (layer.active) {\n        var sliderHandle = layer.layerDiv.select('.opacity-slider-handle').node();\n        (0, _opacitySlider.setOpacitySliderPosition)(layer, sliderHandle, layer.opacitiy);\n    }\n}\n\nfunction makeLabel(layer, layerDiv) {\n    layerDiv.append('div').attr('class', 'layer-label-wrapper').append('label').attr('for', function (layer) {\n        return layer.id;\n    }).attr('class', 'layer-label').html(function (layer) {\n        return layer.name;\n    });\n}\n\nfunction makeDescription(layer, layerDiv) {\n    var imgsrc = layerDiv.classed(\"layer-group-btn\") === true ? 'imgs/more-info-icon-64x64--white.png' : 'imgs/more-info-icon-64x64.png';\n\n    if (layer.info && layer.info !== '') {\n        layerDiv.append('div').attr('class', 'layer-info-btn-wrapper').on('click', function () {\n            d3.event.stopPropagation();\n            d3.select(this.parentNode).select('.layer-info-wrapper').classed('active', function () {\n\n                //send google analytics click on layer info\n                ga('send', 'event', {\n                    eventCategory: 'layer info',\n                    eventAction: 'clicked',\n                    eventLabel: layer.name + \" \" + !d3.select(this).classed('active'),\n                    nonInteraction: false\n                });\n\n                return !d3.select(this).classed('active');\n            });\n        }).append('img').attr('class', 'layer-info-icon').attr('src', imgsrc).attr(\"alt\", \"Read more about the \" + layer.name + \" layer\").attr(\"title\", \"Read more about the \" + layer.name + \" layer\");\n\n        layerDiv.append('div').attr('class', 'layer-info-wrapper').text(function (layer) {\n            return layer.info;\n        });\n    }\n}\n\nfunction makeLayerTools(layer, layerDiv) {\n    var layerToolsDiv = document.createElement('div');\n    layerToolsDiv.classList.add('layer-tools-wrapper');\n    if (layer.active) layerToolsDiv.classList.add('active');\n\n    var opacitySlider = (0, _opacitySlider.makeOpacitySlider)(layer);\n    var legend = makeLegend(layer);\n\n    layerToolsDiv.appendChild(legend);\n    layerToolsDiv.appendChild(opacitySlider);\n\n    return layerToolsDiv;\n}\n\nfunction makeLegend(layer, layerToolsWrapper) {\n    var legendWrapper = document.createElement('div');\n    var legendImg = document.createElement('img');\n    legendWrapper.classList.add('legend-wrapper');\n    legendImg.setAttribute('src', layer.legend);\n    legendWrapper.appendChild(legendImg);\n    return legendWrapper;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n/*\n * $asyncbind has multiple uses, depending on the parameter list. It is in Function.prototype, so 'this' is always a function\n *\n * 1) If called with a single argument (this), it is used when defining an async function to ensure when\n *      it is invoked, the correct 'this' is present, just like \"bind\". For legacy reasons, 'this' is given\n *      a memeber 'then' which refers to itself.\n * 2) If called with a second parameter (\"catcher\") and catcher!==true it is being used to invoke an async\n *      function where the second parameter is the error callback (for sync exceptions and to be passed to\n *      nested async calls)\n * 3) If called with the second parameter===true, it is the same use as (1), but the function is wrapped\n *      in an 'Promise' as well bound to 'this'.\n *      It is the same as calling 'new Promise(this)', where 'this' is the function being bound/wrapped\n * 4) If called with the second parameter===0, it is the same use as (1), but the function is wrapped\n *      in a 'LazyThenable', which executes lazily and can resolve synchronously.\n *      It is the same as calling 'new LazyThenable(this)' (if such a type were exposed), where 'this' is\n *      the function being bound/wrapped\n */\n\nfunction processIncludes(includes,input) {\n    var src = input.toString() ;\n    var t = \"return \"+src ;\n    var args = src.match(/.*\\(([^)]*)\\)/)[1] ;\n    var re = /['\"]!!!([^'\"]*)['\"]/g ;\n    var m = [] ;\n    while (1) {\n        var mx = re.exec(t) ;\n        if (mx)\n            m.push(mx) ;\n        else break ;\n    }\n    m.reverse().forEach(function(e){\n        t = t.slice(0,e.index)+includes[e[1]]+t.substr(e.index+e[0].length) ;\n    }) ;\n    t = t.replace(/\\/\\*[^*]*\\*\\//g,' ').replace(/\\s+/g,' ') ;\n    return new Function(args,t)() ;\n}\n\nvar $asyncbind = processIncludes({\n    zousan:__webpack_require__(20).toString(),\n    thenable:__webpack_require__(23).toString()\n},\nfunction $asyncbind(self,catcher) {\n    \"use strict\";\n    if (!Function.prototype.$asyncbind) {\n        Object.defineProperty(Function.prototype,\"$asyncbind\",{value:$asyncbind,enumerable:false,configurable:true,writable:true}) ;\n    }\n\n    if (!$asyncbind.trampoline) {\n      $asyncbind.trampoline = function trampoline(t,x,s,e,u){\n        return function b(q) {\n                while (q) {\n                    if (q.then) {\n                        q = q.then(b, e) ;\n                        return u?undefined:q;\n                    }\n                    try {\n                        if (q.pop) {\n                            if (q.length)\n                              return q.pop() ? x.call(t) : q;\n                            q = s;\n                         } else\n                            q = q.call(t)\n                    } catch (r) {\n                        return e(r);\n                    }\n                }\n            }\n        };\n    }\n    if (!$asyncbind.LazyThenable) {\n        $asyncbind.LazyThenable = '!!!thenable'();\n        $asyncbind.EagerThenable = $asyncbind.Thenable = ($asyncbind.EagerThenableFactory = '!!!zousan')();\n    }\n\n    function boundThen() {\n        return resolver.apply(self,arguments);\n    }\n\n    var resolver = this;\n    switch (catcher) {\n    case true:\n        return new ($asyncbind.Thenable)(boundThen);\n    case 0:\n        return new ($asyncbind.LazyThenable)(boundThen);\n    case undefined:\n        /* For runtime compatibility with Nodent v2.x, provide a thenable */\n        boundThen.then = boundThen ;\n        return boundThen ;\n    default:\n        return function(){\n            try {\n                return resolver.apply(self,arguments);\n            } catch(ex) {\n                return catcher(ex);\n            }\n        }\n    }\n\n}) ;\n\nfunction $asyncspawn(promiseProvider,self) {\n    if (!Function.prototype.$asyncspawn) {\n        Object.defineProperty(Function.prototype,\"$asyncspawn\",{value:$asyncspawn,enumerable:false,configurable:true,writable:true}) ;\n    }\n    if (!(this instanceof Function)) return ;\n\n    var genF = this ;\n    return new promiseProvider(function enough(resolve, reject) {\n        var gen = genF.call(self, resolve, reject);\n        function step(fn,arg) {\n            var next;\n            try {\n                next = fn.call(gen,arg);\n                if(next.done) {\n                    if (next.value !== resolve) {\n                        if (next.value && next.value===next.value.then)\n                            return next.value(resolve,reject) ;\n                        resolve && resolve(next.value);\n                        resolve = null ;\n                    }\n                    return;\n                }\n\n                if (next.value.then) {\n                    next.value.then(function(v) {\n                        step(gen.next,v);\n                    }, function(e) {\n                        step(gen.throw,e);\n                    });\n                } else {\n                    step(gen.next,next.value);\n                }\n            } catch(e) {\n                reject && reject(e);\n                reject = null ;\n                return;\n            }\n        }\n        step(gen.next);\n    });\n}\n\n// Initialize async bindings\n$asyncbind() ;\n$asyncspawn() ;\n\n// Export async bindings\nmodule.exports = {\n    $asyncbind:$asyncbind,\n    $asyncspawn:$asyncspawn\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nodentRuntime = __webpack_require__(3);\n\nvar _nodentRuntime2 = _interopRequireDefault(_nodentRuntime);\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Provider = function () {\n  function Provider() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Provider);\n\n    this.options = options;\n  }\n\n  _createClass(Provider, [{\n    key: 'getParamString',\n    value: function getParamString(params) {\n      return Object.keys(params).map(function (key) {\n        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }).join('&');\n    }\n  }, {\n    key: 'search',\n    value: function search(_ref) {\n      return new Promise(function ($return, $error) {\n        var query, protocol, url, request, json;\n        query = _ref.query;\n\n        protocol = ~location.protocol.indexOf('http') ? location.protocol : 'https:';\n        url = this.endpoint({ query: query, protocol: protocol });\n\n        return fetch(url).then(function ($await_1) {\n          request = $await_1;\n          return request.json().then(function ($await_2) {\n            json = $await_2;\n            return $return(this.parse({ data: json }));\n          }.$asyncbind(this, $error), $error);\n        }.$asyncbind(this, $error), $error);\n      }.$asyncbind(this));\n    }\n  }]);\n\n  return Provider;\n}();\n\nexports.default = Provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3Byb3ZpZGVycy9wcm92aWRlci5qcz8xYTBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVELHFCQUFxQixtQkFBTyxDQUFDLENBQWdCOztBQUU3Qzs7QUFFQSxnQ0FBZ0MsMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUUsRUFBRSx5REFBeUQscUVBQXFFLDZEQUE2RCxvQkFBb0IsR0FBRyxFQUFFOztBQUVqakIsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGLGlEQUFpRCwwQ0FBMEMsMERBQTBELEVBQUU7O0FBRXZKO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZCQUE2QixtQ0FBbUM7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGFBQWE7QUFDcEQsV0FBVztBQUNYLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX25vZGVudFJ1bnRpbWUgPSByZXF1aXJlKCdub2RlbnQtcnVudGltZScpO1xuXG52YXIgX25vZGVudFJ1bnRpbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbm9kZW50UnVudGltZSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBQcm92aWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByb3ZpZGVyKTtcblxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUHJvdmlkZXIsIFt7XG4gICAga2V5OiAnZ2V0UGFyYW1TdHJpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQYXJhbVN0cmluZyhwYXJhbXMpIHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwYXJhbXMpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChwYXJhbXNba2V5XSk7XG4gICAgICB9KS5qb2luKCcmJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2VhcmNoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2VhcmNoKF9yZWYpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoJHJldHVybiwgJGVycm9yKSB7XG4gICAgICAgIHZhciBxdWVyeSwgcHJvdG9jb2wsIHVybCwgcmVxdWVzdCwganNvbjtcbiAgICAgICAgcXVlcnkgPSBfcmVmLnF1ZXJ5O1xuXG4gICAgICAgIHByb3RvY29sID0gfmxvY2F0aW9uLnByb3RvY29sLmluZGV4T2YoJ2h0dHAnKSA/IGxvY2F0aW9uLnByb3RvY29sIDogJ2h0dHBzOic7XG4gICAgICAgIHVybCA9IHRoaXMuZW5kcG9pbnQoeyBxdWVyeTogcXVlcnksIHByb3RvY29sOiBwcm90b2NvbCB9KTtcblxuICAgICAgICByZXR1cm4gZmV0Y2godXJsKS50aGVuKGZ1bmN0aW9uICgkYXdhaXRfMSkge1xuICAgICAgICAgIHJlcXVlc3QgPSAkYXdhaXRfMTtcbiAgICAgICAgICByZXR1cm4gcmVxdWVzdC5qc29uKCkudGhlbihmdW5jdGlvbiAoJGF3YWl0XzIpIHtcbiAgICAgICAgICAgIGpzb24gPSAkYXdhaXRfMjtcbiAgICAgICAgICAgIHJldHVybiAkcmV0dXJuKHRoaXMucGFyc2UoeyBkYXRhOiBqc29uIH0pKTtcbiAgICAgICAgICB9LiRhc3luY2JpbmQodGhpcywgJGVycm9yKSwgJGVycm9yKTtcbiAgICAgICAgfS4kYXN5bmNiaW5kKHRoaXMsICRlcnJvciksICRlcnJvcik7XG4gICAgICB9LiRhc3luY2JpbmQodGhpcykpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQcm92aWRlcjtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gUHJvdmlkZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.GetCurrentLayers = GetCurrentLayers;\nexports.turnOffNonBaseLayers = turnOffNonBaseLayers;\nexports.CreateDefaultLayers = CreateDefaultLayers;\nexports.toggleLayer = toggleLayer;\nexports.enableLayer = enableLayer;\nexports.disableLayer = disableLayer;\nexports.updateLayerOpacity = updateLayerOpacity;\n\nvar _map = __webpack_require__(1);\n\nvar _share = __webpack_require__(0);\n\nvar _panel = __webpack_require__(2);\n\n/**\n * Needed for the share url since Leaflet does not have a default way to surface\n * the order of layers in the map\n */\nvar _current_layers = [];\nvar _current_layers_objects = [];\n\n/**\n * Note: layer is not the leaflet concept of a layer, but rather the internal\n *       object which tracks them. layer.mapLayer is the pointer to the\n *       leaflet layer.\n */\n\nfunction GetCurrentLayers() {\n\treturn _current_layers;\n}\n\nfunction turnOffNonBaseLayers() {\n\twhile (_current_layers_objects.length) {\n\t\tvar layer = _current_layers_objects.pop();\n\t\tlayer.active = false;\n\t\tdisableLayer(layer);\n\t\tdocument.getElementById(layer.id).checked = false;\n\t\t(0, _panel.toggleLayerToolsUI)(layer);\n\t}\n}\n\nfunction CreateDefaultLayers(layers, defaultLayers) {\n\tvar i, j, prop, layergroup;\n\tvar defaultLayer;\n\tvar foundLayer;\n\n\tif (!defaultLayers || defaultLayers.length === 0) return;\n\n\tfor (i = 0; i < defaultLayers.length; i++) {\n\t\tfoundLayer = false;\n\t\tdefaultLayer = defaultLayers[i];\n\t\tfor (prop in layers) {\n\t\t\tif (!layers.hasOwnProperty(prop)) return;\n\t\t\tlayergroup = layers[prop];\n\t\t\tfor (j = 0; j < layergroup.length; j++) {\n\t\t\t\tif (layergroup[j].id === defaultLayer) {\n\t\t\t\t\tenableLayer(layergroup[j]);\n\t\t\t\t\tfoundLayer = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (foundLayer) break;\n\t\t}\n\t}\n}\n\nfunction toggleLayer(layer) {\n\tif (!layer.active) {\n\t\tenableLayer(layer);\n\n\t\t//send google analytics toggle the layer on\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'layer',\n\t\t\teventAction: 'toggle on',\n\t\t\teventLabel: layer.name,\n\t\t\tnonInteraction: false\n\t\t});\n\t} else {\n\t\tdisableLayer(layer);\n\n\t\t//send google analytics toggle the layer off\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'layer',\n\t\t\teventAction: 'toggle off',\n\t\t\teventLabel: layer.name,\n\t\t\tnonInteraction: false\n\t\t});\n\t}\n}\n\nfunction enableLayer(layer) {\n\tvar map = (0, _map.GetMap)();\n\n\tlayer.active = true;\n\tlayer.mapLayer = layer.mapLayer || makeWmsTileLayer(layer);\n\tmap.addLayer(layer.mapLayer);\n\taddLayerToInternalTracker(layer);\n\tmoveOverlayLayersToTop();\n\t(0, _share.updateShareUrl)();\n}\n\nfunction moveOverlayLayersToTop() {\n\tvar layer;\n\tvar i, l;\n\n\tfor (i = 0, l = _current_layers_objects.length; i < l; i++) {\n\t\tlayer = _current_layers_objects[i];\n\t\tif (layer.type === \"overlay\") layer.mapLayer.bringToFront();\n\t}\n}\n\nfunction addLayerToInternalTracker(layer) {\n\t_current_layers.push(layer.id);\n\t_current_layers_objects.push(layer);\n}\n\nfunction disableLayer(layer) {\n\tvar map = (0, _map.GetMap)();\n\n\tlayer.active = false;\n\tif (layer.mapLayer && map.hasLayer(layer.mapLayer)) {\n\t\tmap.removeLayer(layer.mapLayer);\n\t}\n\tremoveLayerFromInternalTracker(layer);\n\t(0, _share.updateShareUrl)();\n}\n\nfunction removeLayerFromInternalTracker(layer) {\n\tvar loc = _current_layers.indexOf(layer.id);\n\tif (loc === -1) return;\n\t_current_layers.splice(loc, 1);\n\t_current_layers_objects.splice(loc, 1);\n}\n\nfunction updateLayerOpacity(layer, newOpacity) {\n\tlayer.opacity = newOpacity;\n\tlayer.mapLayer.setOpacity(newOpacity);\n}\n\nfunction makeWmsTileLayer(layer) {\n\treturn L.tileLayer.wms(layer.url, {\n\t\tlayers: layer.id,\n\t\ttransparent: layer.transparent || true,\n\t\tversion: layer.version || '1.3.0',\n\t\tcrs: layer.crs || L.CRS.EPSG900913,\n\t\tformat: layer.format || 'image/png',\n\t\topacity: layer.opacity || .75,\n\t\ttileSize: layer.tileSize || document.getElementById(\"map\").clientWidth\n\t});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable import/prefer-default-export */\nvar createElement = exports.createElement = function createElement(element) {\n  var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var el = document.createElement(element);\n  el.className = classNames;\n\n  if (parent) {\n    parent.appendChild(el);\n  }\n\n  return el;\n};\n\nvar createScriptElement = exports.createScriptElement = function createScriptElement(url, cb) {\n  var script = createElement('script', null, document.body);\n  script.setAttribute('type', 'text/javascript');\n\n  return new Promise(function (resolve) {\n    window[cb] = function (json) {\n      script.remove();\n      delete window[cb];\n      resolve(json);\n    };\n\n    script.setAttribute('src', url);\n  });\n};\n\nvar addClassName = exports.addClassName = function addClassName(element, className) {\n  if (element && !element.classList.contains(className)) {\n    element.classList.add(className);\n  }\n};\n\nvar removeClassName = exports.removeClassName = function removeClassName(element, className) {\n  if (element && element.classList.contains(className)) {\n    element.classList.remove(className);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL2RvbVV0aWxzLmpzPzIxZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG4vKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvcHJlZmVyLWRlZmF1bHQtZXhwb3J0ICovXG52YXIgY3JlYXRlRWxlbWVudCA9IGV4cG9ydHMuY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoZWxlbWVudCkge1xuICB2YXIgY2xhc3NOYW1lcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7XG4gIHZhciBwYXJlbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IG51bGw7XG5cbiAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbGVtZW50KTtcbiAgZWwuY2xhc3NOYW1lID0gY2xhc3NOYW1lcztcblxuICBpZiAocGFyZW50KSB7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGVsKTtcbiAgfVxuXG4gIHJldHVybiBlbDtcbn07XG5cbnZhciBjcmVhdGVTY3JpcHRFbGVtZW50ID0gZXhwb3J0cy5jcmVhdGVTY3JpcHRFbGVtZW50ID0gZnVuY3Rpb24gY3JlYXRlU2NyaXB0RWxlbWVudCh1cmwsIGNiKSB7XG4gIHZhciBzY3JpcHQgPSBjcmVhdGVFbGVtZW50KCdzY3JpcHQnLCBudWxsLCBkb2N1bWVudC5ib2R5KTtcbiAgc2NyaXB0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2phdmFzY3JpcHQnKTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICB3aW5kb3dbY2JdID0gZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgIHNjcmlwdC5yZW1vdmUoKTtcbiAgICAgIGRlbGV0ZSB3aW5kb3dbY2JdO1xuICAgICAgcmVzb2x2ZShqc29uKTtcbiAgICB9O1xuXG4gICAgc2NyaXB0LnNldEF0dHJpYnV0ZSgnc3JjJywgdXJsKTtcbiAgfSk7XG59O1xuXG52YXIgYWRkQ2xhc3NOYW1lID0gZXhwb3J0cy5hZGRDbGFzc05hbWUgPSBmdW5jdGlvbiBhZGRDbGFzc05hbWUoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIGlmIChlbGVtZW50ICYmICFlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XG4gIH1cbn07XG5cbnZhciByZW1vdmVDbGFzc05hbWUgPSBleHBvcnRzLnJlbW92ZUNsYXNzTmFtZSA9IGZ1bmN0aW9uIHJlbW92ZUNsYXNzTmFtZShlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSkge1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuICB9XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.BindGraphEvents = BindGraphEvents;\nexports.removeAllPointsOfInterest = removeAllPointsOfInterest;\nexports.GetAllPointsOfInterest = GetAllPointsOfInterest;\nexports.createPOI = createPOI;\nexports.SetupPointsOfInterest = SetupPointsOfInterest;\n\nvar _graph = __webpack_require__(9);\n\nvar _marker = __webpack_require__(30);\n\nvar _share = __webpack_require__(0);\n\nvar _map = __webpack_require__(1);\n\nvar _tabs = __webpack_require__(15);\n\nvar _panel = __webpack_require__(2);\n\nvar _points_of_interest = [];\n\nfunction BindGraphEvents(map) {\n\tmap.on(\"click\", handleMapClick);\n}\n\nfunction removeAllPointsOfInterest() {\n\tvar map = (0, _map.GetMap)();\n\t_points_of_interest.forEach(function (poi) {\n\t\tmap.removeLayer(poi.marker);\n\t});\n\t_points_of_interest = [];\n}\n\nfunction handleMapClick(e) {\n\tvar map = this;\n\tvar lat = e.latlng.lat;\n\tvar lng = e.latlng.lng;\n\n\tvar poi = createPOI(lat, lng, null);\n\tAddPointOfInterestToTracker(poi);\n\tSetupPointOfInterestUI(map, poi);\n\t(0, _share.updateShareUrl)();\n\n\t//send google analytics event click on map\n\tga('send', 'event', {\n\t\teventCategory: 'map',\n\t\teventAction: 'click',\n\t\teventLabel: JSON.stringify({ \"action\": \"add map marker\", \"lat\": lat, \"long\": lng }),\n\t\tnonInteraction: false\n\t});\n}\n\nfunction createGraphRemover(map, div, marker, poi) {\n\tvar elem = createGraphRemoverElem();\n\tdiv.getElementsByClassName(\"graph-elem-header\")[0].appendChild(elem);\n\td3.select(elem).on(\"click\", function () {\n\n\t\t//send google analytics remove graph\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'graph',\n\t\t\teventAction: 'click',\n\t\t\teventLabel: 'remove',\n\t\t\tnonInteraction: false\n\t\t});\n\n\t\tRemovePointOfInterestFromTracker(poi);\n\t\tRemovePointOfInterestUI(map, div, marker);\n\t\t(0, _panel.updatePanelDragOverlayHeight)();\n\t\t(0, _share.updateShareUrl)();\n\t});\n}\n\nfunction createGraphRemoverElem() {\n\tvar elem = document.createElement(\"button\");\n\telem.className = \"remove-graph\";\n\telem.innerText = String.fromCharCode(\"10005\");\n\telem.setAttribute(\"title\", \"Remove graph\");\n\treturn elem;\n}\n\nfunction GetAllPointsOfInterest() {\n\treturn _points_of_interest;\n}\n\nfunction createPOI(lat, lng, plots) {\n\treturn {\n\t\tlat: lat,\n\t\tlng: lng,\n\t\tplots: plots || [\"baseline\", \"2015\", \"thresholds\"]\n\t};\n}\n\nfunction AddPointOfInterestToTracker(poi) {\n\t_points_of_interest.push(poi);\n}\n\nfunction SetupPointsOfInterest(map, newPois) {\n\tAddMultiplePointsOfInterest(newPois);\n\tvar pois = GetAllPointsOfInterest();\n\tvar map = (0, _map.GetMap)();\n\tpois.forEach(function (poi) {\n\t\tSetupPointOfInterestUI(map, poi);\n\t});\n}\n\nfunction AddMultiplePointsOfInterest(pois) {\n\tArray.prototype.push.apply(_points_of_interest, pois);\n}\n\nfunction RemovePointOfInterestFromTracker(poiToRemove) {\n\t_points_of_interest = _points_of_interest.filter(function (poi) {\n\t\treturn !(poi === poiToRemove);\n\t});\n}\n\nfunction SetupPointOfInterestUI(map, poi) {\n\tvar div = (0, _graph.createGraphDiv)(poi);\n\tvar marker = (0, _marker.createMarker)(poi.lat, poi.lng);\n\tpoi.graphDiv = div;\n\tpoi.marker = marker;\n\tmarker.addTo(map);\n\tcreateGraphRemover(map, div, marker, poi);\n\n\td3.select(div).on(\"mouseenter\", function (e) {\n\t\tmarker.setIcon((0, _marker.getIcon)('hover'));\n\t});\n\td3.select(div).on(\"mouseleave\", function () {\n\t\tmarker.setIcon((0, _marker.getIcon)('graph'));\n\t});\n\tmarker.on('click dblclick', function (e) {\n\t\thandleMarkerMouseEvent(e, poi);\n\t});\n\tmarker.on('mouseover', function (e) {\n\t\tmarker.setIcon((0, _marker.getIcon)('hover'));\n\t});\n\tmarker.on('mouseout', function (e) {\n\t\tmarker.setIcon((0, _marker.getIcon)('graph'));\n\t\tpoi.graphDiv.getElementsByClassName('pan-to-marker-btn')[0].classList.remove('animate');\n\t});\n}\n\nfunction handleMarkerMouseEvent(e, poi) {\n\te.originalEvent.stopPropagation();\n\t(0, _tabs.HandleTabChange)('graphs-active');\n\tscrollToPointOfInterestGraph(poi);\n\ttriggerGraphAnimation(poi);\n}\n\nfunction triggerGraphAnimation(poi) {\n\tpoi.graphDiv.getElementsByClassName('pan-to-marker-btn')[0].classList.add('animate');\n}\n\nfunction scrollToPointOfInterestGraph(poi) {\n\tvar rightPanel = document.getElementById('right-panel');\n\trightPanel.scrollTop = poi.graphDiv.offsetTop;\n}\n\nfunction RemovePointOfInterestUI(map, div, marker) {\n\tvar list = document.getElementById('graph-list');\n\tlist.removeChild(div);\n\tmap.removeLayer(marker);\n\t(0, _share.updateShareUrl)();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.SetupGraphs = SetupGraphs;\nexports.removeAllGraphs = removeAllGraphs;\nexports.HandleGraphTabChange = HandleGraphTabChange;\nexports.createGraphDiv = createGraphDiv;\n\nvar _panel = __webpack_require__(2);\n\nvar _share = __webpack_require__(0);\n\nvar _map = __webpack_require__(1);\n\nvar _parser = __webpack_require__(10);\n\nvar tip = {};\n\nfunction SetupGraphs() {\n    d3.selectAll(".graph-type-btn").on("click", handleGraphTypeBtnClick);\n    extendDateModule();\n    tip = d3.tip().attr(\'class\', \'d3-tip\').html(function (d) {\n        return d;\n    });\n}\n\nfunction removeAllGraphs() {\n    var graphList = document.getElementById(\'graph-list\');\n    while (graphList.firstChild) {\n        graphList.removeChild(graphList.firstChild);\n    }\n}\n\nfunction extendDateModule() {\n    Date.prototype.isLeapYear = function () {\n        var year = this.getFullYear();\n        if ((year & 3) != 0) return false;\n        return year % 100 != 0 || year % 400 == 0;\n    };\n\n    // Get Day of Year\n    Date.prototype.getDOY = function () {\n        var dayCount = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        var mn = this.getMonth();\n        var dn = this.getDate();\n        var dayOfYear = dayCount[mn] + dn;\n        if (mn > 1 && this.isLeapYear()) dayOfYear++;\n        return dayOfYear;\n    };\n}\n\n////////////////////// GRAPH DATA PROCESSING ///////////////////////////////\n\nfunction handleGraphDataResponse(div, poi, response) {\n    response = response.replace(/\\[|\\]|\\\'/g, "").split(", ");\n    drawGraph(response, div, poi);\n    (0, _panel.updatePanelDragOverlayHeight)();\n}\n\nfunction getData(poi, div) {\n    var url = "https://fcav-ndvi.nemac.org/landdat_product.cgi?args=" + poi.lng + "," + poi.lat;\n    var oReq = (0, _parser.GetAjaxObject)(function (response) {\n        handleGraphDataResponse(div, poi, response);\n    });\n\n    oReq.open("GET", url);\n    oReq.send();\n}\n\nfunction splitData(data) {\n    var i;\n    for (i = 0; i < data.length; i++) {\n        data[i] = data[i].split(",");\n    }\n    return data;\n}\n\nfunction reprocessData(origdata) {\n    var expectedYearLength = 46;\n    var data = {};\n    var point;\n    var key;\n    var i, j;\n\n    data["keys"] = [];\n    for (i = 0; i < origdata.length; i++) {\n        point = origdata[i];\n        key = point[0].substring(0, 4);\n        if (!data.hasOwnProperty(key)) {\n            data[key] = [];\n            data["keys"].push(key);\n        }\n        // The last data point for a year\'s data rolls over to the next year\n        // at 1/3, so adjust the key (year) accordingly for these cases\n        if (point[0].substring(4) === "0103") {\n            key = String(parseInt(key) - 1);\n        }\n        data[key].push(point);\n    }\n\n    var keysToBeDeleted = [];\n    for (i = 0; i < data.keys.length; i++) {\n        key = data.keys[i];\n        if (data[key].length !== expectedYearLength) {\n            keysToBeDeleted.push(key);\n        }\n    }\n\n    for (i = 0; i < keysToBeDeleted.length; i++) {\n        key = keysToBeDeleted[i];\n        delete data[key];\n        data.keys.splice(data.keys.indexOf(key), 1);\n    }\n\n    // Baseline is computed from raw data array\n    var dataForBaseline;\n    var mean;\n    data["baseline"] = [];\n    for (i = 0; i < expectedYearLength; i++) {\n        dataForBaseline = [];\n        for (j = i; j < origdata.length; j += expectedYearLength) {\n            dataForBaseline.push(parseInt(origdata[j][1], 10));\n        }\n\n        mean = computeAverage(dataForBaseline);\n        data["baseline"].push(mean);\n    }\n\n    return data;\n}\n\nfunction computeAverage(arr) {\n    var sum = 0,\n        i,\n        l;\n\n    for (i = 0, l = arr.length; i < l; i++) {\n        sum += arr[i];\n    }\n\n    return (sum / l).toString();\n}\n\n////////////////////// GRAPH INTERFACE ///////////////////////////\n\nfunction handleGraphTypeBtnClick() {\n    var type = this.getAttribute(\'data-type\');\n    var activeType = document.getElementsByClassName("graph-type-btn active")[0].getAttribute(\'data-type\');\n\n    if (type === activeType) {\n        return;\n    }\n\n    //send google analytics click on graph type\n    ga(\'send\', \'event\', {\n        eventCategory: \'graph type\',\n        eventAction: \'click\',\n        eventLabel: type,\n        nonInteraction: false\n    });\n\n    HandleGraphTabChange(type, activeType);\n}\n\nfunction HandleGraphTabChange(graphType) {\n    if (!isGraphListEmpty()) {\n        var oldActiveGraphElemHeight = document.getElementsByClassName(\'graph-elem\')[0].scrollHeight;\n        var oldActiveGraphInfoHeight = document.getElementsByClassName(\'graph-type-info active\')[0].scrollHeight;\n        var rightPanelScrollTop = document.getElementById(\'right-panel\').scrollTop;\n    }\n    disableActiveGraphTab();\n    enableGraphTab(graphType);\n    if (!isGraphListEmpty()) adjustScrollPosition(oldActiveGraphInfoHeight, oldActiveGraphElemHeight, rightPanelScrollTop);\n    (0, _share.updateShareUrl)();\n}\n\nfunction isGraphListEmpty() {\n    return document.getElementsByClassName(\'graph-elem\')[0] === undefined;\n}\n\nfunction adjustScrollPosition(oldGraphInfoHeight, oldGraphElemHeight, oldRightPanelScrollTop) {\n    var newGraphInfoHeight = document.getElementsByClassName(\'graph-type-info active\')[0].scrollHeight;\n    var newGraphElemHeight = document.getElementsByClassName(\'graph-elem\')[0].scrollHeight;\n\n    var newGraphElemHeightScale = newGraphElemHeight / oldGraphElemHeight;\n    var newRightPanelScrollTop = newGraphInfoHeight + (oldRightPanelScrollTop - oldGraphInfoHeight) * newGraphElemHeightScale;\n\n    document.getElementById(\'right-panel\').scrollTop = newRightPanelScrollTop;\n}\n\nfunction disableActiveGraphTab() {\n    var activeElem = document.getElementsByClassName("graph-type-btn active")[0];\n    var activeClass = "graph-" + activeElem.getAttribute("data-type");\n\n    activeElem.classList.remove("active");\n    document.getElementById("graph-list").classList.remove(activeClass);\n}\n\nfunction enableGraphTab(graphType) {\n    d3.select(".graph-type-btn[data-type=\'" + graphType + "\']").classed("active", true);\n    document.getElementById("graph-list").classList.add("graph-" + graphType);\n    d3.selectAll(\'.graph-type-info\').classed(\'active\', function () {\n        return graphType === this.id.split(\'-\')[0];\n    });\n}\n\nfunction createGraphDiv(poi) {\n    var decimalPlaces = 3;\n    var latShort = roundFloat(poi.lat, decimalPlaces);\n    var lngShort = roundFloat(poi.lng, decimalPlaces);\n    var wrapper = document.createElement("div");\n    var header = document.createElement("div");\n    wrapper.appendChild(header);\n    var zoomToMarkerButton = makeZoomToMapMarkerButton(poi);\n    var content = document.createTextNode("Lat: " + latShort + ", Long: " + lngShort);\n    var contentDiv = document.createElement("div");\n    contentDiv.className = "graph-lat-lon";\n    contentDiv.appendChild(content);\n\n    header.appendChild(zoomToMarkerButton);\n    header.appendChild(contentDiv);\n\n    var loadingDiv = document.createElement("div");\n    loadingDiv.classList.add("graph-loading-div");\n    wrapper.appendChild(loadingDiv);\n\n    wrapper.classList.add("graph-elem");\n    wrapper.classList.add("graph-loading");\n    header.classList.add("graph-elem-header");\n\n    var list = document.getElementById("graph-list");\n    list.appendChild(wrapper);\n    getData(poi, wrapper);\n    return wrapper;\n}\n\nfunction makeZoomToMapMarkerButton(poi) {\n    var button = document.createElement("button");\n    button.classList.add(\'btn\');\n    button.classList.add(\'pan-to-marker-btn\');\n    button.textContent = "Show On Map";\n    button.onclick = function (poi, e) {\n        var map = (0, _map.GetMap)();\n        map.panTo([poi.lat, poi.lng]);\n\n        //send google analytics click on show on map\n        ga(\'send\', \'event\', {\n            eventCategory: \'graph\',\n            eventAction: \'click\',\n            eventLabel: \'{"show on map":{"lat":\' + poi.lat + \',"long":\' + poi.lng + \'}}\',\n            nonInteraction: false\n        });\n    }.bind(button, poi);\n    return button;\n}\n\nfunction drawGraph(data, div, poi) {\n    data = splitData(data);\n    var reprocessedData = reprocessData(data);\n    makeUpDownLineGraph(data, div);\n    makeUpDownOverlapingLineGraphWithCheckboxes(reprocessedData, div, poi);\n    drawUpDownPolarWithCheckboxesAndThresholds(reprocessedData, div, poi);\n    div.classList.remove("graph-loading");\n}\n\nfunction roundFloat(number, decimalPlaces) {\n    return Math.round(number * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces);\n}\n\n///////////////////// TIMESERIES LINE GRAPH ////////////////////////////////\n\nfunction makeUpDownLineGraph(data, div) {\n    // Set the dimensions of the canvas / graph\n    var margin = { top: 30, right: 20, bottom: 30, left: 29 },\n        width = 580 - margin.left - margin.right,\n        height = 270 - margin.top - margin.bottom;\n\n    // Set the ranges\n    var x = d3.scaleTime().range([0, width]).domain([parseDate(data[0][0]), parseDate(data[data.length - 1][0])]);\n    var y = d3.scaleLinear().range([height, 0]).domain([0, 100]);\n\n    // Define the axes\n    var xAxis = d3.axisBottom(x).ticks(16).tickFormat(function (d) {\n        return d.getFullYear();\n    });\n\n    var yAxis = d3.axisLeft(y).ticks(6);\n\n    // Define the line\n    var valueline = d3.line().x(function (d) {\n        return x(parseDate(d[0]));\n    }).y(function (d) {\n        return y(d[1]);\n    });\n\n    var wrapper = d3.select(div).append("div").classed("timeseries-graph", true);\n\n    // Adds the svg canvas\n    var svg = wrapper.append("svg").attr("height", height + margin.top + margin.bottom).attr(\'viewBox\', function () {\n        var w = width + margin.left + margin.right;\n        var h = height + margin.top + margin.bottom;\n        return \'0 0 \' + w + \' \' + h;\n    }).attr(\'preserveAspectRatio\', \'xMidYMid\').append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");\n\n    svg.call(tip);\n\n    // Add the valueline path.\n    drawLinearPath(data, valueline, svg);\n\n    // Add the X Axis\n    var bottomAxisElement = svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis);\n\n    bottomAxisElement.selectAll("text").attr("transform", "rotate(45)").style("text-anchor", "start");\n\n    // Add the Y Axis\n    svg.append("g").attr("class", "y axis").call(yAxis);\n    /**\n     * This block of code draws the point at each data point\n     */\n    drawLinearPoints(data, valueline, svg);\n}\n\n///////////////// OVERLAPPING TIMESERIES LINE GRAPH ////////////////\n\nfunction makeUpDownOverlapingLineGraphWithCheckboxes(data, div, poi) {\n    var charts = {};\n\n    // Set the dimensions of the canvas / graph\n    var margin = { top: 30, right: 20, bottom: 30, left: 29 },\n        width = 500 - margin.left - margin.right,\n        height = 270 - margin.top - margin.bottom;\n\n    var averages = data.baseline;\n\n    var x = d3.scaleLinear().range([0, width]).domain([0, 368]);\n    var y = d3.scaleLinear().range([height, 0]).domain([0, 100]);\n\n    // Define the axes\n    function formatMonthTick(d) {\n        return MONTH_LABELS[(d - 15) / 30];\n    }\n    var xAxis = d3.axisBottom(x).ticks(11).tickValues([15, 45, 75, 105, 135, 165, 195, 225, 255, 285, 315, 345]).tickFormat(formatMonthTick);\n\n    var yAxis = d3.axisLeft(y).ticks(6);\n\n    // Define the line\n    var valueline = d3.line().x(function (d, i) {\n        // Hack for dealing with the last data point in a year stack,\n        // which falls on the following year. In this case we set the x\n        // value to te "368th" day of the year, or the third day \n        // of the next year.\n        if (d[0].substring(4, 8) === \'0103\') {\n            return x(368);\n        } else {\n            return x(parseJulianDay(d[0]));\n        }\n        //return (Array.isArray(d) ? x(parseJulianDay(d[0])) : x((i * 8) + 3 ));\n    }).y(function (d) {\n        return Array.isArray(d) ? y(d[1]) : y(d);\n    });\n\n    var wrapper = d3.select(div).append("div").classed("overlapping-graph", true);\n\n    // Adds the svg canvas\n    var svg = wrapper.append("svg").attr(\'viewBox\', function () {\n        var w = width + margin.left + margin.right;\n        var h = height + margin.top + margin.bottom;\n        return \'0 0 \' + w + \' \' + h;\n    }).attr(\'preserveAspectRatio\', \'xMidYMid\')\n    //.attr("width", width + margin.left + margin.right)\n    //.attr("height", height + margin.top + margin.bottom)\n    .append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");\n\n    svg.call(tip);\n\n    // Add the X Axis\n    svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis);\n\n    // Add the Y Axis\n    svg.append("g").attr("class", "y axis").call(yAxis);\n\n    var plot, i, l;\n    for (i = 0, l = poi.plots.length; i < l; i++) {\n        plot = poi.plots[i];\n        if (plot === "thresholds" || plot === "thresholdsactive") continue;\n        charts[plot] = {\n            "path": drawLinearPath(data[plot], valueline, svg)\n        };\n    }\n\n    /**\n     * This block of code draws the point at each data point\n     */\n    for (i = 0, l = poi.plots.length; i < l; i++) {\n        plot = poi.plots[i];\n        if (plot === "thresholds" || plot === "thresholdsactive") continue;\n        charts[plot].points = drawLinearPoints(data[plot], valueline, svg);\n    }\n\n    var inputwrapper = wrapper.append("div").classed("input-wrapper", true);\n\n    data.keys.forEach(function (key) {\n        createCheckbox(inputwrapper, key, "overlapping", poi, charts, data, valueline, svg, averages);\n    });\n\n    createCheckbox(inputwrapper, "baseline", "overlapping", poi, charts, data, valueline, svg, averages);\n}\n\n///////////////////////// POLAR GRAPH //////////////////////////////////////\n\nfunction drawUpDownPolarWithCheckboxesAndThresholds(data, div, poi) {\n    var width = 490,\n        height = 490,\n        radius = Math.min(width, height) / 2 - 30;\n\n    var averages = data["baseline"];\n    var center = findPolarCenter(data);\n    var thresholds = findPolarThresholds(averages, center[1][0]);\n\n    /**\n     * Sets up scaling of data. We know that the ndvi values fall between\n     * 0 & 100 so we set our domain to that. The range controls where the\n     * points will lie in our graph, so we set them to be between 0 and the\n     * radius.\n     */\n    var r = d3.scaleLinear().domain([0, 100]).range([0, radius]);\n\n    /**\n     * function which will draw each point. To compute the distance from the\n     * center each point is we pass the datapoint to the function defined above.\n     * To determine the angle from the origin we need to convert the day to\n     * radians, so we convert the day to a number between 0 & 1 and then multiply\n     * it by 2 pi.\n     */\n    var line = d3.radialLine().radius(function (d) {\n        return Array.isArray(d) ? r(d[1]) : r(d);\n    }).angle(function (d, i) {\n        var day = Array.isArray(d) ? parseJulianDay(d[0]) : i * 8 + 3;\n        return (day - 1) % 365 / 365 * (2 * Math.PI);\n    });\n\n    /**\n     * Sets up the canvas where the circle will be drawn.\n     */\n    var wrapper = d3.select(div).append("div").classed("polar-graph", true);\n    var svg = wrapper.append("svg")\n    //.attr("width", width)\n    //.attr("height", height)\n    .attr(\'viewBox\', function () {\n        return \'0 0 \' + width + \' \' + height;\n    }).attr(\'preserveAspectRatio\', \'xMidYMid\').append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");\n\n    svg.call(tip);\n\n    /**\n     * This block of code draws the big circles of the graph & their labels\n     */\n    var gr = svg.append("g").attr("class", "r axis").selectAll("g").data(r.ticks(5).slice(1)).enter().append("g");\n\n    gr.append("circle").attr("r", r);\n\n    gr.append("text").attr("y", function (d) {\n        return -r(d) - 4;\n    }).attr("transform", "rotate(15)").style("text-anchor", "middle").text(function (d) {\n        return d;\n    });\n\n    /**\n     * This block of code draws the labels for each month and the lines\n     * that go out to them.\n     */\n    var ga_a = svg.append("g").attr("class", "a axis").selectAll("g").data(d3.range(0, 360, 30)).enter().append("g").attr("transform", function (d) {\n        return "rotate(" + (d - 90) + ")";\n    });\n\n    ga_a.append("line").attr("x2", radius);\n\n    ga_a.append("text").attr("x", radius + 6).attr("dy", ".35em").style("text-anchor", function (d) {\n        return d < 360 && d > 180 ? "end" : null;\n    }).attr("transform", function (d) {\n        return d < 360 && d > 180 ? "rotate(180 " + (radius + 6) + ",0)" : null;\n    }).text(function (d) {\n        return MONTH_LABELS[d / 30];\n    });\n\n    var allDataThresholds = drawAllThresholdElems(svg, thresholds, radius, poi, "thresholds", center, line, "Center (All Data)");\n\n    var activeDataThresholds = drawActiveDataThresholds(data, svg, radius, poi, line);\n\n    var charts = {};\n\n    /**\n     * This block of code draws the line that the data follows\n     */\n    var plot, i, l;\n    for (i = 0, l = poi.plots.length; i < l; i++) {\n        plot = poi.plots[i];\n        if (plot === "thresholds" || plot === "thresholdsactive") continue;\n        charts[plot] = {\n            "path": drawPolarPath(data[plot], line, svg)\n        };\n    }\n\n    /**\n     * This block of code draws the point at each data point\n     */\n    for (i = 0, l = poi.plots.length; i < l; i++) {\n        plot = poi.plots[i];\n        if (plot === "thresholds" || plot === "thresholdsactive") continue;\n        charts[plot].points = drawLinearPoints(data[plot], line, svg);\n    }\n\n    var inputwrapper = wrapper.append("div").classed("input-wrapper", true);\n\n    data.keys.forEach(function (key) {\n        createCheckbox(inputwrapper, key, "polar", poi, charts, data, line, svg, averages, radius, activeDataThresholds);\n    });\n\n    var thresholdActiveCheckbox = inputwrapper.append("div").classed("threshold-checkbox--active", true);\n\n    thresholdActiveCheckbox.append("input").attr("type", "checkbox").attr("id", "threshold-checkbox--active-" + poi.lat.toString().replace(".", "") + "-" + poi.lng.toString().replace(".", "")).attr("disabled", checkNoActiveYears(poi.plots) === true ? "disabled" : null).property("checked", poi.plots.indexOf("thresholdsactive") !== -1).on("change", function (e) {\n        var checkbox = this;\n        activeDataThresholds.forEach(function (elem) {\n            elem.style("display", checkbox.checked ? null : "none");\n        });\n\n        var offon = this.checked ? \'off\' : \'on\';\n\n        if (this.checked) {\n            addKeyToPOI(poi, "thresholdsactive");\n        } else {\n            removeKeyFromPOI(poi, "thresholdsactive");\n        }\n\n        (0, _share.updateShareUrl)();\n        //send google analytics graph threshold click off\n        dispatchGraphCheckboxClick(\'threshold polar timeseries \' + offon);\n    });\n\n    thresholdActiveCheckbox.append("label").text("Thresholds (Active Years)").attr("for", "threshold-checkbox--active-" + poi.lat.toString().replace(".", "") + "-" + poi.lng.toString().replace(".", ""));\n\n    createCheckbox(inputwrapper, "baseline", "polar", poi, charts, data, line, svg, averages, radius, activeDataThresholds);\n\n    var thresholdCheckbox = inputwrapper.append("div").classed("threshold-checkbox", true);\n\n    thresholdCheckbox.append("input").attr("type", "checkbox").attr("id", "threshold-checkbox-" + poi.lat.toString().replace(".", "") + "-" + poi.lng.toString().replace(".", "")).property("checked", poi.plots.indexOf("thresholds") !== -1).on("change", function (e) {\n        var checkbox = this;\n        allDataThresholds.forEach(function (elem) {\n            elem.style("display", checkbox.checked ? null : "none");\n        });\n\n        var offon = this.checked ? \'off\' : \'on\';\n\n        if (this.checked) {\n            addKeyToPOI(poi, "thresholds");\n        } else {\n            removeKeyFromPOI(poi, "thresholds");\n        }\n\n        (0, _share.updateShareUrl)();\n        //send google analytics graph threshold click off\n        dispatchGraphCheckboxClick(\'threshold polar timeseries \' + offon);\n    });\n\n    thresholdCheckbox.append("label").text("Thresholds (All Years)").attr("for", "threshold-checkbox-" + poi.lat.toString().replace(".", "") + "-" + poi.lng.toString().replace(".", ""));\n}\n\nfunction findActivePlots(plots) {\n    var activePlots = plots.filter(function (p) {\n        return parseInt(p, 10).toString() === p;\n    });\n    return activePlots;\n}\n\nfunction makePlotAverages(data, plots) {\n    var newData = {};\n    var i, j, l, yearLength;\n    var sum;\n\n    plots.forEach(function (plot) {\n        newData[plot] = data[plot];\n    });\n\n    newData["baseline"] = [];\n\n    for (i = 0, yearLength = 46; i < yearLength; i++) {\n        sum = 0;\n        for (j = 0, l = plots.length; j < l; j++) {\n            sum += parseInt(newData[plots[j]][i][1], 10);\n        }\n        newData["baseline"].push(sum / 46);\n    }\n\n    newData["keys"] = plots;\n\n    return newData;\n}\n\nfunction getActiveThreholdData(data, poi) {\n    var activePlots = findActivePlots(poi.plots);\n    var plotAverages = makePlotAverages(data, activePlots);\n    return plotAverages;\n}\n\nfunction drawThresholdElem(svg, data, radius, poi, key) {\n    var inset = key === "thresholds" ? 30 : 70;\n\n    var thresholdElem = svg.append("g").selectAll("g").data(data).enter().append("g").attr("transform", function (d) {\n        return "rotate(" + (d.data[1][0] - 90) + ")";\n    });\n\n    thresholdElem.append("line").attr("class", "line line--" + key).attr("x2", radius);\n\n    thresholdElem.append("text").attr("x", function (d) {\n        var day = d.data[1][0];return day < 360 && day > 180 ? radius + inset : radius - inset;\n    }).attr("y", function (d) {\n        return d.data[1][0] % 365 / 365 * (2 * Math.PI) + 6;\n    }).attr("dy", ".35em").style("text-anchor", function (d) {\n        var day = d.data[1][0];return day < 360 && day > 180 ? "middle" : null;\n    }).attr("transform", function (d) {\n        var day = d.data[1][0];return day < 360 && day > 180 ? "rotate(180 " + (radius + 6) + ",0)" : null;\n    }).text(function (d) {\n        return d.label;\n    });\n\n    thresholdElem.style("display", poi.plots.indexOf(key) !== -1 ? null : "none");\n\n    return thresholdElem;\n}\n\nfunction drawAllThresholdElems(svg, thresholds, radius, poi, key, center, line, label) {\n    /**\n     * Draws the threshold lines\n     */\n    var thresholdElem = drawThresholdElem(svg, thresholds, radius, poi, key);\n\n    /**\n     * Draws the line to the center of the data\n     */\n    var centerDay = center[1][0];\n    var centerDayOpposite = (centerDay + 365 / 2) % 365;\n    var centerDayData = [centerDay, 100];\n    var centerDayOppositeData = [centerDayOpposite, 100];\n    var growingSeasonData = [centerDayData, centerDayOppositeData];\n\n    var growingLine = drawPolarPath(growingSeasonData, line, svg).classed("growing-season-line", "true").classed("line--" + key, "true").style("display", poi.plots.indexOf(key) !== -1 ? null : "none");\n\n    var centerLine = drawPolarPath(center, line, svg).classed("center-line", "true").classed("line--" + key, "true").style("display", poi.plots.indexOf(key) !== -1 ? null : "none");\n\n    var centerPoint = svg.selectAll("point").data([center[1]]).enter().append("circle").attr("class", "center center--" + key).attr("r", 4).attr("transform", function (d) {\n        var coors = line([d]).slice(1).slice(0, -1);\n        return "translate(" + coors + ")";\n    }).attr("stroke", "#000").attr("fill", "#ea0c48").style("display", poi.plots.indexOf(key) !== -1 ? null : "none").on("mouseover", function (d) {\n        tip.show(label + ": " + String(d[1]).substring(0, 7));\n        this.setAttribute("r", 5);\n    }).on("mouseout", function (d) {\n        tip.hide();\n        this.setAttribute("r", 4);\n    });\n\n    return [thresholdElem, growingLine, centerLine, centerPoint];\n}\n\nfunction drawActiveDataThresholds(data, svg, radius, poi, line) {\n    if (checkNoActiveYears(poi.plots) === true) {\n        return [];\n    }\n    var activeThresholdData = getActiveThreholdData(data, poi);\n    var activeThresholdCenter = findPolarCenter(activeThresholdData);\n    // This line was causing active thresholds to be different from all-years\n    // thresholds even when every year was activated. I\'m not sure why it was\n    // put here in the first place. Leaving commented out for now.\n    // It probably has something to do with the fact that the data points start\n    // on the 8th of January. It\'s possible that both center points\n    // (active & all-years) need to be shifted!\n    //activeThresholdCenter[1][0] = activeThresholdCenter[1][0] - 8;\n    var activeThresholds = findPolarThresholds(activeThresholdData["baseline"], activeThresholdCenter[1][0]);\n    return drawAllThresholdElems(svg, activeThresholds, radius, poi, "thresholdsactive", activeThresholdCenter, line, "Center (Active Data)");\n}\n\nfunction checkNoActiveYears(plots) {\n    var noYearFlag = true;\n    var i, l;\n    for (i = 0, l = plots.length; i < l; i++) {\n        if (parseInt(plots[i], 10).toString() === plots[i]) {\n            noYearFlag = false;\n            break;\n        }\n    }\n\n    return noYearFlag;\n}\n\nfunction handleActiveThresholdCheckbox(lat, lng, plots) {\n    var activeThresholdCheckbox = d3.select("#threshold-checkbox--active-" + lat.toString().replace(".", "") + "-" + lng.toString().replace(".", ""));\n    activeThresholdCheckbox.attr("disabled", checkNoActiveYears(plots) === true ? "disabled" : null);\n}\n\n/* POLAR GRAPH HELPERS */\n\nfunction findPolarCenter(data) {\n    var i, j, length, arr;\n    var totalSum = 0;\n    var incompleteYears = 0;\n    var sum;\n    length = 46;\n\n    for (i = 0; i < data.keys.length; i++) {\n        arr = data[data.keys[i]];\n        if (arr.length !== length) {\n            incompleteYears++;\n            continue;\n        }\n        sum = 0;\n        for (j = 0; j < length / 2; j++) {\n            sum += arr[j][1] - arr[j + 23][1];\n        }\n        sum = sum / 23;\n        totalSum += sum;\n    }\n    totalSum = Math.abs(totalSum) / (data.keys.length - incompleteYears);\n\n    var areaDiff = 1000000;\n    var checkDiff;\n    var areaIndex = 0;\n    var leftArea, rightArea;\n    var avgs = data.baseline;\n    var k, counter;\n\n    for (i = 0; i < length / 2; i++) {\n        leftArea = 0;\n        rightArea = 0;\n        for (counter = 0; counter < length / 2; counter++) {\n            j = (i + counter) % 46;\n            k = (j + 23) % 46;\n\n            leftArea += parseInt(avgs[j], 10);\n            rightArea += parseInt(avgs[k], 10);\n        }\n        checkDiff = Math.abs(leftArea - rightArea);\n        if (checkDiff < areaDiff) {\n            areaDiff = checkDiff;\n            areaIndex = i;\n        }\n    }\n\n    var firstRadius = parseInt(avgs[areaIndex], 10);\n    var secondRadius = parseInt(-avgs[areaIndex + 23], 10);\n\n    var midpoint = (firstRadius + secondRadius) / 2;\n    var firstDiff = Math.abs(totalSum - midpoint);\n    var secondDiff = Math.abs(-totalSum - midpoint);\n    if (secondDiff < firstDiff) {\n        areaIndex = areaIndex + 23;\n    }\n\n    var circlecenter = [0, 0];\n    var datacenter = [areaIndex * 8 + 3, totalSum];\n\n    return [circlecenter, datacenter];\n}\n\n/**\n * startDay is actually the seasonality index, it should be flipped\n */\nfunction findPolarThresholds(data, startDay) {\n    var startIndex = Math.floor((startDay - 3) / 8);\n    startIndex += startIndex > 22 ? -23 : 23;\n    var i, j, length, arr;\n    var totalSum = 0;\n    var sum;\n    length = 46;\n\n    for (i = 0; i < length; i++) {\n        j = (startIndex + i) % length;\n        totalSum += parseInt(data[j], 10);\n    }\n\n    var fifteenThreshold = totalSum * .15;\n    var eightyThreshold = totalSum * .80;\n    var fifteenIndexFound = false,\n        eightyIndexFound = false;\n    var fifteenIndex, eightyIndex;\n\n    totalSum = 0;\n    for (i = 0; i < length; i++) {\n        j = (startIndex + i) % length;\n        totalSum += parseInt(data[j], 10);\n        if (!fifteenIndexFound && totalSum > fifteenThreshold) {\n            fifteenIndex = j;\n            fifteenIndexFound = true;\n            continue;\n        }\n        if (!eightyIndexFound && totalSum > eightyThreshold) {\n            eightyIndex = j;\n            eightyIndexFound = true;\n            continue;\n        }\n    }\n\n    var circleCenter = [0, 0];\n\n    var fifteenEnd = [fifteenIndex * 8 + 3, 100];\n    var eightyEnd = [eightyIndex * 8 + 3, 100];\n\n    return [{\n        "label": "15%",\n        "data": [circleCenter, fifteenEnd]\n    }, {\n        "label": "80%",\n        "data": [circleCenter, eightyEnd]\n    }];\n}\n\n//////////////////////// GRAPH HELPERS ///////////////////////////////////\n\nfunction drawLinearPath(data, line, svg) {\n    return svg.append("path").attr("class", "line").attr("d", line(data));\n}\n\nfunction drawPolarPath(data, line, svg) {\n    return svg.append("path").datum(data).attr("class", "line").attr("d", line);\n}\n\nfunction drawLinearPoints(data, line, svg) {\n    return svg.selectAll("point").data(data).enter().append("circle").attr("r", 2).attr("class", "point").attr("transform", function (d, i) {\n        var point = Array.isArray(d) ? d : [i * 8 + 3, d];\n        var coors = line([point]).slice(1).slice(0, -1);\n        return "translate(" + coors + ")";\n    })\n    //.attr("r", 3)\n    .attr("stroke", "#000").attr("fill", function (d, i) {\n        var val = Array.isArray(d) ? d[0].substring(0, 4) : 0;\n        return pullDistinctColor(val);\n    }).on("mouseover", handlePointMouseover).on("mouseout", handlePointMouseout);\n}\n\nfunction handlePointMouseover(d) {\n    var tipString = Array.isArray(d) ? formatDate(d[0]) + ": " + d[1] : "Average: " + d;\n    tip.show(tipString);\n    this.setAttribute("r", "4");\n}\n\nfunction handlePointMouseout(d) {\n    tip.hide();\n    this.setAttribute("r", "2");\n\n    var activeType = document.getElementsByClassName("graph-type-btn active")[0].getAttribute(\'data-type\');\n\n    //send google analytics tool tip on graph do this on the mouseout so mouseover dose not do a lot of events....\n    // we miss a few but that is better than over counting.\n    ga(\'send\', \'event\', {\n        eventCategory: \'graph\',\n        eventAction: \'hover\',\n        eventLabel: activeType + \' tool tip\',\n        nonInteraction: false\n    });\n}\n\nfunction createCheckbox(wrapper, key, type, poi, charts, data, line, svg, averages, radius, activeDataThresholds) {\n    var checkboxWrapper = wrapper.append("div");\n    var lat = poi.lat;\n    var lng = poi.lng;\n\n    checkboxWrapper.append("input").attr("type", "checkbox").attr("id", type + "-" + key + lat.toString().replace(".", "") + "-" + lng.toString().replace(".", "")).attr("data-link", key + lat.toString().replace(".", "") + "-" + lng.toString().replace(".", "")).attr("value", key).property("checked", poi.plots.indexOf(key) !== -1 ? true : false).on("change", function (e) {\n        var newYear = this.value;\n        if (!this.checked) {\n            handleCheckboxDisable(charts, newYear, data);\n            removeKeyFromPOI(poi, key);\n            //send google analytics graph year click off\n            dispatchGraphCheckboxClick(newYear + \' \' + type + \' timeseries off\');\n        } else {\n            handleCheckboxEnable(charts, newYear, data, line, svg, averages);\n            addKeyToPOI(poi, key);\n            //send google analytics graph year click on\n            dispatchGraphCheckboxClick(newYear + \' \' + type + \' timeseries on\');\n        }\n\n        if (activeDataThresholds) {\n            activeDataThresholds.forEach(function (elem) {\n                elem.remove();\n            });\n            var i, l;\n            for (i = 0, l = activeDataThresholds.length; i < l; i++) {\n                activeDataThresholds.pop();\n            }\n            var newThresholdElems = drawActiveDataThresholds(data, svg, radius, poi, line);\n            for (i = 0, l = newThresholdElems.length; i < l; i++) {\n                activeDataThresholds.push(newThresholdElems[i]);\n            }\n            handleActiveThresholdCheckbox(lat, lng, poi.plots);\n        }\n\n        handleCheckboxSync(key + lat.toString().replace(".", "") + "-" + lng.toString().replace(".", ""), this.checked);\n        (0, _share.updateShareUrl)();\n    });\n\n    checkboxWrapper.append("label").text(key !== "baseline" ? key : "Baseline (All Years)").attr("for", type + "-" + key + lat.toString().replace(".", "") + "-" + lng.toString().replace(".", ""));\n\n    checkboxWrapper.append("div").style("background", pullDistinctColor(key !== "baseline" ? key : 0)).classed("graph-pip-example", true);\n}\n\nfunction handleCheckboxDisable(charts, newYear, data) {\n    charts[newYear].path.remove();\n    charts[newYear].points.remove();\n}\n\nfunction handleCheckboxEnable(charts, newYear, data, line, svg) {\n    if (!charts.hasOwnProperty(newYear)) {\n        charts[newYear] = {};\n    }\n    charts[newYear].path = drawLinearPath(data[newYear], line, svg);\n    charts[newYear].points = drawLinearPoints(data[newYear], line, svg);\n}\n\nfunction handleCheckboxSync(key, checkedStatus, wrapper) {\n    d3.selectAll("input[data-link=\'" + key + "\']").each(function (p, j) {\n        var elem = d3.select(this);\n        if (elem.property("checked") !== checkedStatus) {\n            elem.property("checked", checkedStatus);\n            elem.dispatch("change");\n        }\n    });\n}\n\nfunction removeKeyFromPOI(poi, key) {\n    var index = poi.plots.indexOf(key);\n    if (index === -1) return;\n    poi.plots.splice(index, 1);\n}\n\nfunction addKeyToPOI(poi, key) {\n    if (poi.plots.indexOf(key) !== -1) return;\n    poi.plots.push(key);\n}\n\nfunction dispatchGraphCheckboxClick(label) {\n    ga(\'send\', \'event\', {\n        eventCategory: \'graph\',\n        eventAction: \'click\',\n        eventLabel: label,\n        nonInteraction: false\n    });\n}\n\nfunction pullDistinctColor(year) {\n    var colorRamp = ["#116c91", "#1a708f", "#23758e", "#2c798d", "#357e8c", "#3e838b", "#47878a", "#518c89", "#5a9088", "#639587", "#6c9a86", "#759e85", "#7ea384", "#88a883", "#91ac82", "#9ab181", "#a3b580", "#acba7f", "#b5bf7e", "#bec37d", "#c8c87c", "#d1cc7b", "#dad17a", "#e3d679", "#ecda78", "#f5df77", "#ffe476"];\n\n    return year === 0 ? "#fff" : colorRamp[parseInt(year, 10) % colorRamp.length];\n}\n\n///////////////////////// DATE HELPERS /////////////////////////////////\n\nfunction parseDate(date) {\n    date = date.toString();\n    var year = date.substring(0, 4);\n    var month = parseInt(date.substring(4, 6), 10) - 1;\n    var day = date.substring(6, 8);\n    return new Date(year, month, day);\n}\n\nfunction parseJulianDay(date) {\n    if (typeof date === "string") {\n        date = parseDate(date);\n        return date.getDOY();\n    } else {\n        return date;\n    }\n}\n\nfunction formatDate(date) {\n    if (date === "Average") {\n        return date;\n    }\n\n    date = parseDate(date);\n    return formatMonth(date.getMonth()) + " " + ordinal_suffix_of(date.getDate()) + ", " + date.getFullYear();\n}\n\nfunction formatMonth(month) {\n    return FORMATTED_MONTH_LABELS[month];\n}\n\nfunction ordinal_suffix_of(day) {\n    var j = day % 10,\n        k = day % 100;\n    if (j === 1 && k !== 11) {\n        return day + "st";\n    }\n    if (j === 2 && k !== 12) {\n        return day + "nd";\n    }\n    if (j === 3 && k !== 13) {\n        return day + "rd";\n    }\n    return day + "th";\n}\n\nvar MONTH_LABELS = {\n    0: "Jan",\n    1: "Feb",\n    2: "Mar",\n    3: "Apr",\n    4: "May",\n    5: "Jun",\n    6: "Jul",\n    7: "Aug",\n    8: "Sep",\n    9: "Oct",\n    10: "Nov",\n    11: "Dec"\n};\n\nvar FORMATTED_MONTH_LABELS = {\n    0: "Jan.",\n    1: "Feb.",\n    2: "Mar.",\n    3: "Apr.",\n    4: "May",\n    5: "Jun.",\n    6: "Jul.",\n    7: "Aug.",\n    8: "Sep.",\n    9: "Oct.",\n    10: "Nov.",\n    11: "Dec."\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.ParseConfig = ParseConfig;\nexports.GetAjaxObject = GetAjaxObject;\n/**\n * Parses a config file. Since the process to get external files\n * uses AJAX you need to pass a callback to handle the next steps\n * of using the config file, since we do not know how long it\n * will take to grab the file.\n */\nfunction ParseConfig(configFile, callback) {\n    GetConfig(configFile, callback);\n}\n\nfunction GetAjaxObject(responseHandler) {\n    var xmlhttp;\n    if (!window.XMLHttpRequest && window.ActiveXObject) {\n        xmlhttp = new window.ActiveXObject("MSXML2.XMLHTTP.3.0");\n    } else {\n        xmlhttp = new XMLHttpRequest();\n    }\n    xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState === 4) {\n            responseHandler(xmlhttp.response);\n        }\n    };\n    return xmlhttp;\n}\n\nfunction GetConfig(configFile, callback) {\n    var xmlhttp = GetAjaxObject(function (response) {\n        var data = responseHandler(response);\n        callback(data);\n    });\n    xmlhttp.open("GET", configFile, true);\n    xmlhttp.send();\n}\n\nfunction responseHandler(response) {\n    response = JSON.parse(response);\n    formatMap(response);\n    formatLayers(response);\n    return response;\n}\n\nfunction formatMap(data) {\n    if (!data.map) data.map = {};\n}\n\nfunction formatLayers(data) {\n    var layers = data.layers;\n    var defaultMapserverUrl = data.mapserverUrl;\n    var defaultEnabledLayers = data["active-layers"];\n    var layergroup;\n    var i;\n\n    for (var prop in layers) {\n        if (!layers.hasOwnProperty(prop)) return;\n        layergroup = layers[prop];\n        for (i = 0; i < layergroup.length; i++) {\n            setMapserverUrl(layergroup[i], defaultMapserverUrl);\n            setDefaultLayerOpacity(layergroup[i], data.defaultLayerOpacity);\n        }\n    }\n}\n\nfunction setDefaultLayerOpacity(layer, opacity) {\n    layer.opacity = layer.opacity || opacity;\n}\n\nfunction setMapserverUrl(layer, url) {\n    layer.url = layer.url || url;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9wYXJzZXIuanM/MTI5MSJdLCJuYW1lcyI6WyJQYXJzZUNvbmZpZyIsIkdldEFqYXhPYmplY3QiLCJjb25maWdGaWxlIiwiY2FsbGJhY2siLCJHZXRDb25maWciLCJyZXNwb25zZUhhbmRsZXIiLCJ4bWxodHRwIiwid2luZG93IiwiWE1MSHR0cFJlcXVlc3QiLCJBY3RpdmVYT2JqZWN0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlIiwiZGF0YSIsIm9wZW4iLCJzZW5kIiwiSlNPTiIsInBhcnNlIiwiZm9ybWF0TWFwIiwiZm9ybWF0TGF5ZXJzIiwibWFwIiwibGF5ZXJzIiwiZGVmYXVsdE1hcHNlcnZlclVybCIsIm1hcHNlcnZlclVybCIsImRlZmF1bHRFbmFibGVkTGF5ZXJzIiwibGF5ZXJncm91cCIsImkiLCJwcm9wIiwiaGFzT3duUHJvcGVydHkiLCJsZW5ndGgiLCJzZXRNYXBzZXJ2ZXJVcmwiLCJzZXREZWZhdWx0TGF5ZXJPcGFjaXR5IiwiZGVmYXVsdExheWVyT3BhY2l0eSIsImxheWVyIiwib3BhY2l0eSIsInVybCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFNZ0JBLFcsR0FBQUEsVztRQUlBQyxhLEdBQUFBLGE7QUFWaEI7Ozs7OztBQU1PLFNBQVNELFdBQVQsQ0FBc0JFLFVBQXRCLEVBQWtDQyxRQUFsQyxFQUE0QztBQUMvQ0MsY0FBVUYsVUFBVixFQUFzQkMsUUFBdEI7QUFDSDs7QUFFTSxTQUFTRixhQUFULENBQXVCSSxlQUF2QixFQUF3QztBQUMzQyxRQUFJQyxPQUFKO0FBQ0EsUUFBSSxDQUFDQyxPQUFPQyxjQUFSLElBQTBCRCxPQUFPRSxhQUFyQyxFQUFvRDtBQUNoREgsa0JBQVUsSUFBSUMsT0FBT0UsYUFBWCxDQUF5QixvQkFBekIsQ0FBVjtBQUNILEtBRkQsTUFFTztBQUNISCxrQkFBVSxJQUFJRSxjQUFKLEVBQVY7QUFDSDtBQUNERixZQUFRSSxrQkFBUixHQUE2QixZQUFZO0FBQ3JDLFlBQUlKLFFBQVFLLFVBQVIsS0FBdUIsQ0FBM0IsRUFBOEI7QUFDMUJOLDRCQUFnQkMsUUFBUU0sUUFBeEI7QUFDSDtBQUNKLEtBSkQ7QUFLQSxXQUFPTixPQUFQO0FBQ0g7O0FBRUQsU0FBU0YsU0FBVCxDQUFvQkYsVUFBcEIsRUFBZ0NDLFFBQWhDLEVBQTBDO0FBQ3RDLFFBQUlHLFVBQVVMLGNBQWMsVUFBVVcsUUFBVixFQUFvQjtBQUM1QyxZQUFJQyxPQUFPUixnQkFBZ0JPLFFBQWhCLENBQVg7QUFDQVQsaUJBQVNVLElBQVQ7QUFDSCxLQUhhLENBQWQ7QUFJQVAsWUFBUVEsSUFBUixDQUFhLEtBQWIsRUFBb0JaLFVBQXBCLEVBQWdDLElBQWhDO0FBQ0FJLFlBQVFTLElBQVI7QUFDSDs7QUFFRCxTQUFTVixlQUFULENBQTBCTyxRQUExQixFQUFvQztBQUNoQ0EsZUFBV0ksS0FBS0MsS0FBTCxDQUFXTCxRQUFYLENBQVg7QUFDQU0sY0FBVU4sUUFBVjtBQUNBTyxpQkFBYVAsUUFBYjtBQUNBLFdBQU9BLFFBQVA7QUFDSDs7QUFFRCxTQUFTTSxTQUFULENBQW9CTCxJQUFwQixFQUEwQjtBQUN0QixRQUFJLENBQUNBLEtBQUtPLEdBQVYsRUFBZVAsS0FBS08sR0FBTCxHQUFXLEVBQVg7QUFDbEI7O0FBRUQsU0FBU0QsWUFBVCxDQUF1Qk4sSUFBdkIsRUFBNkI7QUFDekIsUUFBSVEsU0FBU1IsS0FBS1EsTUFBbEI7QUFDQSxRQUFJQyxzQkFBc0JULEtBQUtVLFlBQS9CO0FBQ0EsUUFBSUMsdUJBQXVCWCxLQUFLLGVBQUwsQ0FBM0I7QUFDQSxRQUFJWSxVQUFKO0FBQ0EsUUFBSUMsQ0FBSjs7QUFFQSxTQUFLLElBQUlDLElBQVQsSUFBaUJOLE1BQWpCLEVBQXlCO0FBQ3JCLFlBQUksQ0FBQ0EsT0FBT08sY0FBUCxDQUFzQkQsSUFBdEIsQ0FBTCxFQUFrQztBQUNsQ0YscUJBQWFKLE9BQU9NLElBQVAsQ0FBYjtBQUNBLGFBQUtELElBQUksQ0FBVCxFQUFZQSxJQUFJRCxXQUFXSSxNQUEzQixFQUFtQ0gsR0FBbkMsRUFBd0M7QUFDcENJLDRCQUFnQkwsV0FBV0MsQ0FBWCxDQUFoQixFQUErQkosbUJBQS9CO0FBQ0FTLG1DQUF1Qk4sV0FBV0MsQ0FBWCxDQUF2QixFQUFzQ2IsS0FBS21CLG1CQUEzQztBQUNIO0FBQ0o7QUFDSjs7QUFFRCxTQUFTRCxzQkFBVCxDQUFpQ0UsS0FBakMsRUFBd0NDLE9BQXhDLEVBQWlEO0FBQzdDRCxVQUFNQyxPQUFOLEdBQWdCRCxNQUFNQyxPQUFOLElBQWlCQSxPQUFqQztBQUNIOztBQUVELFNBQVNKLGVBQVQsQ0FBMEJHLEtBQTFCLEVBQWlDRSxHQUFqQyxFQUFzQztBQUNsQ0YsVUFBTUUsR0FBTixHQUFZRixNQUFNRSxHQUFOLElBQWFBLEdBQXpCO0FBQ0giLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhcnNlcyBhIGNvbmZpZyBmaWxlLiBTaW5jZSB0aGUgcHJvY2VzcyB0byBnZXQgZXh0ZXJuYWwgZmlsZXNcbiAqIHVzZXMgQUpBWCB5b3UgbmVlZCB0byBwYXNzIGEgY2FsbGJhY2sgdG8gaGFuZGxlIHRoZSBuZXh0IHN0ZXBzXG4gKiBvZiB1c2luZyB0aGUgY29uZmlnIGZpbGUsIHNpbmNlIHdlIGRvIG5vdCBrbm93IGhvdyBsb25nIGl0XG4gKiB3aWxsIHRha2UgdG8gZ3JhYiB0aGUgZmlsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIFBhcnNlQ29uZmlnIChjb25maWdGaWxlLCBjYWxsYmFjaykge1xuICAgIEdldENvbmZpZyhjb25maWdGaWxlLCBjYWxsYmFjayk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRBamF4T2JqZWN0KHJlc3BvbnNlSGFuZGxlcikge1xuICAgIHZhciB4bWxodHRwXG4gICAgaWYgKCF3aW5kb3cuWE1MSHR0cFJlcXVlc3QgJiYgd2luZG93LkFjdGl2ZVhPYmplY3QpIHtcbiAgICAgICAgeG1saHR0cCA9IG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdChcIk1TWE1MMi5YTUxIVFRQLjMuMFwiKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKVxuICAgIH1cbiAgICB4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHhtbGh0dHAucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgICAgcmVzcG9uc2VIYW5kbGVyKHhtbGh0dHAucmVzcG9uc2UpXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHhtbGh0dHBcbn1cblxuZnVuY3Rpb24gR2V0Q29uZmlnIChjb25maWdGaWxlLCBjYWxsYmFjaykge1xuICAgIHZhciB4bWxodHRwID0gR2V0QWpheE9iamVjdChmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZUhhbmRsZXIocmVzcG9uc2UpXG4gICAgICAgIGNhbGxiYWNrKGRhdGEpXG4gICAgfSlcbiAgICB4bWxodHRwLm9wZW4oXCJHRVRcIiwgY29uZmlnRmlsZSwgdHJ1ZSk7XG4gICAgeG1saHR0cC5zZW5kKCk7XG59XG5cbmZ1bmN0aW9uIHJlc3BvbnNlSGFuZGxlciAocmVzcG9uc2UpIHtcbiAgICByZXNwb25zZSA9IEpTT04ucGFyc2UocmVzcG9uc2UpXG4gICAgZm9ybWF0TWFwKHJlc3BvbnNlKTtcbiAgICBmb3JtYXRMYXllcnMocmVzcG9uc2UpO1xuICAgIHJldHVybiByZXNwb25zZVxufVxuXG5mdW5jdGlvbiBmb3JtYXRNYXAgKGRhdGEpIHtcbiAgICBpZiAoIWRhdGEubWFwKSBkYXRhLm1hcCA9IHt9O1xufVxuXG5mdW5jdGlvbiBmb3JtYXRMYXllcnMgKGRhdGEpIHtcbiAgICB2YXIgbGF5ZXJzID0gZGF0YS5sYXllcnM7XG4gICAgdmFyIGRlZmF1bHRNYXBzZXJ2ZXJVcmwgPSBkYXRhLm1hcHNlcnZlclVybDtcbiAgICB2YXIgZGVmYXVsdEVuYWJsZWRMYXllcnMgPSBkYXRhW1wiYWN0aXZlLWxheWVyc1wiXTtcbiAgICB2YXIgbGF5ZXJncm91cDtcbiAgICB2YXIgaTtcblxuICAgIGZvciAodmFyIHByb3AgaW4gbGF5ZXJzKSB7XG4gICAgICAgIGlmICghbGF5ZXJzLmhhc093blByb3BlcnR5KHByb3ApKSByZXR1cm47XG4gICAgICAgIGxheWVyZ3JvdXAgPSBsYXllcnNbcHJvcF07XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBsYXllcmdyb3VwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBzZXRNYXBzZXJ2ZXJVcmwobGF5ZXJncm91cFtpXSwgZGVmYXVsdE1hcHNlcnZlclVybCk7XG4gICAgICAgICAgICBzZXREZWZhdWx0TGF5ZXJPcGFjaXR5KGxheWVyZ3JvdXBbaV0sIGRhdGEuZGVmYXVsdExheWVyT3BhY2l0eSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc2V0RGVmYXVsdExheWVyT3BhY2l0eSAobGF5ZXIsIG9wYWNpdHkpIHtcbiAgICBsYXllci5vcGFjaXR5ID0gbGF5ZXIub3BhY2l0eSB8fCBvcGFjaXR5XG59XG5cbmZ1bmN0aW9uIHNldE1hcHNlcnZlclVybCAobGF5ZXIsIHVybCkge1xuICAgIGxheWVyLnVybCA9IGxheWVyLnVybCB8fCB1cmw7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nodentRuntime = __webpack_require__(3);\n\nvar _nodentRuntime2 = _interopRequireDefault(_nodentRuntime);\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domUtils = __webpack_require__(6);\n\nvar _constants = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SearchElement = function () {\n  function SearchElement() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$handleSubmit = _ref.handleSubmit,\n        handleSubmit = _ref$handleSubmit === undefined ? function () {} : _ref$handleSubmit,\n        _ref$searchLabel = _ref.searchLabel,\n        searchLabel = _ref$searchLabel === undefined ? 'search' : _ref$searchLabel,\n        _ref$classNames = _ref.classNames,\n        classNames = _ref$classNames === undefined ? {} : _ref$classNames;\n\n    _classCallCheck(this, SearchElement);\n\n    var container = (0, _domUtils.createElement)('div', ['geosearch', classNames.container].join(' '));\n    var form = (0, _domUtils.createElement)('form', ['', classNames.form].join(' '), container);\n    var input = (0, _domUtils.createElement)('input', ['glass', classNames.input].join(' '), form);\n\n    input.type = 'text';\n    input.placeholder = searchLabel;\n\n    input.addEventListener('input', function (e) {\n      _this.onInput(e);\n    }, false);\n    input.addEventListener('keyup', function (e) {\n      _this.onKeyUp(e);\n    }, false);\n    input.addEventListener('keypress', function (e) {\n      _this.onKeyPress(e);\n    }, false);\n    input.addEventListener('focus', function (e) {\n      _this.onFocus(e);\n    }, false);\n    input.addEventListener('blur', function (e) {\n      _this.onBlur(e);\n    }, false);\n\n    this.elements = { container: container, form: form, input: input };\n    this.handleSubmit = handleSubmit;\n  }\n\n  _createClass(SearchElement, [{\n    key: 'onFocus',\n    value: function onFocus() {\n      (0, _domUtils.addClassName)(this.elements.form, 'active');\n    }\n  }, {\n    key: 'onBlur',\n    value: function onBlur() {\n      (0, _domUtils.removeClassName)(this.elements.form, 'active');\n    }\n  }, {\n    key: 'onSubmit',\n    value: function onSubmit(event) {\n      return new Promise(function ($return, $error) {\n        var _elements, input, container;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        _elements = this.elements, input = _elements.input, container = _elements.container;\n\n        (0, _domUtils.removeClassName)(container, 'error');\n        (0, _domUtils.addClassName)(container, 'pending');\n\n        return this.handleSubmit({ query: input.value }).then(function ($await_1) {\n          (0, _domUtils.removeClassName)(container, 'pending');\n          return $return();\n        }.$asyncbind(this, $error), $error);\n      }.$asyncbind(this));\n    }\n  }, {\n    key: 'onInput',\n    value: function onInput() {\n      var container = this.elements.container;\n\n\n      if (this.hasError) {\n        (0, _domUtils.removeClassName)(container, 'error');\n        this.hasError = false;\n      }\n    }\n  }, {\n    key: 'onKeyUp',\n    value: function onKeyUp(event) {\n      var _elements2 = this.elements,\n          container = _elements2.container,\n          input = _elements2.input;\n\n\n      if (event.keyCode === _constants.ESCAPE_KEY) {\n        (0, _domUtils.removeClassName)(container, 'pending');\n        (0, _domUtils.removeClassName)(container, 'active');\n\n        input.value = '';\n\n        document.body.focus();\n        document.body.blur();\n      }\n    }\n  }, {\n    key: 'onKeyPress',\n    value: function onKeyPress(event) {\n      if (event.keyCode === _constants.ENTER_KEY) {\n        this.onSubmit(event);\n      }\n    }\n  }, {\n    key: 'setQuery',\n    value: function setQuery(query) {\n      var input = this.elements.input;\n\n      input.value = query;\n    }\n  }]);\n\n  return SearchElement;\n}();\n\nexports.default = SearchElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3NlYXJjaEVsZW1lbnQuanM/N2M0OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxxQkFBcUIsbUJBQU8sQ0FBQyxDQUFnQjs7QUFFN0M7O0FBRUEsZ0NBQWdDLDJDQUEyQyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVELDJEQUEyRCxFQUFFLEVBQUUseURBQXlELHFFQUFxRSw2REFBNkQsb0JBQW9CLEdBQUcsRUFBRTs7QUFFampCLGdCQUFnQixtQkFBTyxDQUFDLENBQVk7O0FBRXBDLGlCQUFpQixtQkFBTyxDQUFDLEVBQWE7O0FBRXRDLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SjtBQUNBO0FBQ0E7O0FBRUEscUZBQXFGO0FBQ3JGO0FBQ0EsdUVBQXVFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDs7QUFFdkQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTCxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSxrQ0FBa0MscUJBQXFCO0FBQ3ZEO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfbm9kZW50UnVudGltZSA9IHJlcXVpcmUoJ25vZGVudC1ydW50aW1lJyk7XG5cbnZhciBfbm9kZW50UnVudGltZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ub2RlbnRSdW50aW1lKTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9kb21VdGlscyA9IHJlcXVpcmUoJy4vZG9tVXRpbHMnKTtcblxudmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cycpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgU2VhcmNoRWxlbWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2VhcmNoRWxlbWVudCgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgICBfcmVmJGhhbmRsZVN1Ym1pdCA9IF9yZWYuaGFuZGxlU3VibWl0LFxuICAgICAgICBoYW5kbGVTdWJtaXQgPSBfcmVmJGhhbmRsZVN1Ym1pdCA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKCkge30gOiBfcmVmJGhhbmRsZVN1Ym1pdCxcbiAgICAgICAgX3JlZiRzZWFyY2hMYWJlbCA9IF9yZWYuc2VhcmNoTGFiZWwsXG4gICAgICAgIHNlYXJjaExhYmVsID0gX3JlZiRzZWFyY2hMYWJlbCA9PT0gdW5kZWZpbmVkID8gJ3NlYXJjaCcgOiBfcmVmJHNlYXJjaExhYmVsLFxuICAgICAgICBfcmVmJGNsYXNzTmFtZXMgPSBfcmVmLmNsYXNzTmFtZXMsXG4gICAgICAgIGNsYXNzTmFtZXMgPSBfcmVmJGNsYXNzTmFtZXMgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiRjbGFzc05hbWVzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlYXJjaEVsZW1lbnQpO1xuXG4gICAgdmFyIGNvbnRhaW5lciA9ICgwLCBfZG9tVXRpbHMuY3JlYXRlRWxlbWVudCkoJ2RpdicsIFsnZ2Vvc2VhcmNoJywgY2xhc3NOYW1lcy5jb250YWluZXJdLmpvaW4oJyAnKSk7XG4gICAgdmFyIGZvcm0gPSAoMCwgX2RvbVV0aWxzLmNyZWF0ZUVsZW1lbnQpKCdmb3JtJywgWycnLCBjbGFzc05hbWVzLmZvcm1dLmpvaW4oJyAnKSwgY29udGFpbmVyKTtcbiAgICB2YXIgaW5wdXQgPSAoMCwgX2RvbVV0aWxzLmNyZWF0ZUVsZW1lbnQpKCdpbnB1dCcsIFsnZ2xhc3MnLCBjbGFzc05hbWVzLmlucHV0XS5qb2luKCcgJyksIGZvcm0pO1xuXG4gICAgaW5wdXQudHlwZSA9ICd0ZXh0JztcbiAgICBpbnB1dC5wbGFjZWhvbGRlciA9IHNlYXJjaExhYmVsO1xuXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgX3RoaXMub25JbnB1dChlKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgX3RoaXMub25LZXlVcChlKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgX3RoaXMub25LZXlQcmVzcyhlKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgX3RoaXMub25Gb2N1cyhlKTtcbiAgICB9LCBmYWxzZSk7XG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICBfdGhpcy5vbkJsdXIoZSk7XG4gICAgfSwgZmFsc2UpO1xuXG4gICAgdGhpcy5lbGVtZW50cyA9IHsgY29udGFpbmVyOiBjb250YWluZXIsIGZvcm06IGZvcm0sIGlucHV0OiBpbnB1dCB9O1xuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gaGFuZGxlU3VibWl0O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNlYXJjaEVsZW1lbnQsIFt7XG4gICAga2V5OiAnb25Gb2N1cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uRm9jdXMoKSB7XG4gICAgICAoMCwgX2RvbVV0aWxzLmFkZENsYXNzTmFtZSkodGhpcy5lbGVtZW50cy5mb3JtLCAnYWN0aXZlJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb25CbHVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25CbHVyKCkge1xuICAgICAgKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKHRoaXMuZWxlbWVudHMuZm9ybSwgJ2FjdGl2ZScpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ29uU3VibWl0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25TdWJtaXQoZXZlbnQpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoJHJldHVybiwgJGVycm9yKSB7XG4gICAgICAgIHZhciBfZWxlbWVudHMsIGlucHV0LCBjb250YWluZXI7XG5cbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICAgX2VsZW1lbnRzID0gdGhpcy5lbGVtZW50cywgaW5wdXQgPSBfZWxlbWVudHMuaW5wdXQsIGNvbnRhaW5lciA9IF9lbGVtZW50cy5jb250YWluZXI7XG5cbiAgICAgICAgKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKGNvbnRhaW5lciwgJ2Vycm9yJyk7XG4gICAgICAgICgwLCBfZG9tVXRpbHMuYWRkQ2xhc3NOYW1lKShjb250YWluZXIsICdwZW5kaW5nJyk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlU3VibWl0KHsgcXVlcnk6IGlucHV0LnZhbHVlIH0pLnRoZW4oZnVuY3Rpb24gKCRhd2FpdF8xKSB7XG4gICAgICAgICAgKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKGNvbnRhaW5lciwgJ3BlbmRpbmcnKTtcbiAgICAgICAgICByZXR1cm4gJHJldHVybigpO1xuICAgICAgICB9LiRhc3luY2JpbmQodGhpcywgJGVycm9yKSwgJGVycm9yKTtcbiAgICAgIH0uJGFzeW5jYmluZCh0aGlzKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb25JbnB1dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uSW5wdXQoKSB7XG4gICAgICB2YXIgY29udGFpbmVyID0gdGhpcy5lbGVtZW50cy5jb250YWluZXI7XG5cblxuICAgICAgaWYgKHRoaXMuaGFzRXJyb3IpIHtcbiAgICAgICAgKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKGNvbnRhaW5lciwgJ2Vycm9yJyk7XG4gICAgICAgIHRoaXMuaGFzRXJyb3IgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvbktleVVwJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25LZXlVcChldmVudCkge1xuICAgICAgdmFyIF9lbGVtZW50czIgPSB0aGlzLmVsZW1lbnRzLFxuICAgICAgICAgIGNvbnRhaW5lciA9IF9lbGVtZW50czIuY29udGFpbmVyLFxuICAgICAgICAgIGlucHV0ID0gX2VsZW1lbnRzMi5pbnB1dDtcblxuXG4gICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gX2NvbnN0YW50cy5FU0NBUEVfS0VZKSB7XG4gICAgICAgICgwLCBfZG9tVXRpbHMucmVtb3ZlQ2xhc3NOYW1lKShjb250YWluZXIsICdwZW5kaW5nJyk7XG4gICAgICAgICgwLCBfZG9tVXRpbHMucmVtb3ZlQ2xhc3NOYW1lKShjb250YWluZXIsICdhY3RpdmUnKTtcblxuICAgICAgICBpbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuZm9jdXMoKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5ibHVyKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb25LZXlQcmVzcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uS2V5UHJlc3MoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBfY29uc3RhbnRzLkVOVEVSX0tFWSkge1xuICAgICAgICB0aGlzLm9uU3VibWl0KGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZXRRdWVyeScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFF1ZXJ5KHF1ZXJ5KSB7XG4gICAgICB2YXIgaW5wdXQgPSB0aGlzLmVsZW1lbnRzLmlucHV0O1xuXG4gICAgICBpbnB1dC52YWx1ZSA9IHF1ZXJ5O1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTZWFyY2hFbGVtZW50O1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBTZWFyY2hFbGVtZW50OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar ENTER_KEY = exports.ENTER_KEY = 13;\nvar ESCAPE_KEY = exports.ESCAPE_KEY = 27;\nvar ARROW_DOWN_KEY = exports.ARROW_DOWN_KEY = 40;\nvar ARROW_UP_KEY = exports.ARROW_UP_KEY = 38;\nvar ARROW_LEFT_KEY = exports.ARROW_LEFT_KEY = 37;\nvar ARROW_RIGHT_KEY = exports.ARROW_RIGHT_KEY = 39;\n\nvar SPECIAL_KEYS = exports.SPECIAL_KEYS = [ENTER_KEY, ESCAPE_KEY, ARROW_DOWN_KEY, ARROW_UP_KEY, ARROW_LEFT_KEY, ARROW_RIGHT_KEY];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL2NvbnN0YW50cy5qcz9lNDY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgRU5URVJfS0VZID0gZXhwb3J0cy5FTlRFUl9LRVkgPSAxMztcbnZhciBFU0NBUEVfS0VZID0gZXhwb3J0cy5FU0NBUEVfS0VZID0gMjc7XG52YXIgQVJST1dfRE9XTl9LRVkgPSBleHBvcnRzLkFSUk9XX0RPV05fS0VZID0gNDA7XG52YXIgQVJST1dfVVBfS0VZID0gZXhwb3J0cy5BUlJPV19VUF9LRVkgPSAzODtcbnZhciBBUlJPV19MRUZUX0tFWSA9IGV4cG9ydHMuQVJST1dfTEVGVF9LRVkgPSAzNztcbnZhciBBUlJPV19SSUdIVF9LRVkgPSBleHBvcnRzLkFSUk9XX1JJR0hUX0tFWSA9IDM5O1xuXG52YXIgU1BFQ0lBTF9LRVlTID0gZXhwb3J0cy5TUEVDSUFMX0tFWVMgPSBbRU5URVJfS0VZLCBFU0NBUEVfS0VZLCBBUlJPV19ET1dOX0tFWSwgQVJST1dfVVBfS0VZLCBBUlJPV19MRUZUX0tFWSwgQVJST1dfUklHSFRfS0VZXTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\nexports.BASE_LAYER_TYPE = undefined;\nexports.CreateBaseLayers = CreateBaseLayers;\n\nvar _map = __webpack_require__(1);\n\nvar _share = __webpack_require__(0);\n\nvar BASE_LAYER_TYPE = exports.BASE_LAYER_TYPE = "baselayer";\n\nvar _baselayers;\n\nfunction CreateBaseLayers(map, layerConfig) {\n\tlayerConfig = layerConfig || [{\n\t\t"id": "carto-light-default",\n\t\t"url": "http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",\n\t\t"attribution": \'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/attributions">CARTO</a>\'\n\t}];\n\n\t_baselayers = layerConfig;\n\tvar i;\n\tvar baseLayer;\n\tvar config;\n\n\tfor (i = 0; i < layerConfig.length; i++) {\n\t\tconfig = layerConfig[i];\n\n\t\tif (!config.active) continue;\n\t\tbaseLayer = createBaseLayer(config);\n\t\tconfig.layer = baseLayer;\n\t\tbaseLayer.addTo(map);\n\t}\n\n\tcreateBaseLayerUI(layerConfig);\n}\n\nfunction createBaseLayerUI(config) {\n\tvar baseUI = document.createElement("div");\n\tbaseUI.className = "baselayer-ui";\n\tvar baseWrapper;\n\tvar baseImg;\n\tvar baseLabel;\n\n\tvar layer;\n\tfor (var i = 0, l = config.length; i < l; i++) {\n\t\tlayer = config[i];\n\t\tif (!layer.hasOwnProperty("image")) continue;\n\n\t\tbaseWrapper = document.createElement("div");\n\t\tbaseWrapper.setAttribute("data-layer", layer.id);\n\t\tbaseImg = document.createElement("img");\n\t\tbaseImg.setAttribute("src", layer.image);\n\t\tbaseImg.setAttribute("alt", layer.label);\n\t\tbaseImg.setAttribute("title", layer.label);\n\t\tbaseLabel = document.createElement("div");\n\t\tbaseLabel.textContent = layer.label;\n\t\tbaseWrapper.appendChild(baseImg);\n\t\tbaseWrapper.appendChild(baseLabel);\n\t\tbaseWrapper.addEventListener("click", handleBaseClick);\n\n\t\td3.select(baseWrapper).classed("base-selector", true).classed("active", layer.active);\n\n\t\tbaseUI.appendChild(baseWrapper);\n\t}\n\n\tdocument.getElementsByClassName("leaflet-bottom leaflet-left")[0].appendChild(baseUI);\n}\n\nfunction handleBaseClick(e) {\n\te.stopPropagation();\n\tvar layerid = this.getAttribute("data-layer");\n\ttoggleActiveBaseUI(this);\n\tremoveCurrentBaseLayer();\n\taddNewBaseLayerToMap(layerid);\n\n\t//send google analytics for changeing base layer\n\tga(\'send\', \'event\', {\n\t\teventCategory: \'map\',\n\t\teventAction: \'change base layer\',\n\t\teventLabel: layerid,\n\t\tnonInteraction: false\n\t});\n\n\t(0, _share.updateShareUrl)();\n}\n\nfunction toggleActiveBaseUI(baseUIElem) {\n\td3.select(".base-selector.active").classed("active", false);\n\td3.select(baseUIElem).classed("active", true);\n}\n\nfunction removeCurrentBaseLayer() {\n\tvar map = (0, _map.GetMap)();\n\n\tmap.eachLayer(function (layer) {\n\t\tif (layer.options.type !== BASE_LAYER_TYPE) return;\n\t\tmap.removeLayer(layer);\n\t});\n}\n\nfunction addNewBaseLayerToMap(layerid) {\n\tvar map = (0, _map.GetMap)();\n\n\tvar layer;\n\tfor (var i = 0, l = _baselayers.length; i < l; i++) {\n\t\tlayer = _baselayers[i];\n\t\tif (layer.id !== layerid) continue;\n\t\tif (!layer.layer) layer.layer = createBaseLayer(layer);\n\t\tlayer.layer.addTo(map);\n\t\tlayer.layer.bringToBack();\n\t\tbreak;\n\t}\n}\n\nfunction createBaseLayer(layerConfig) {\n\treturn L.tileLayer(layerConfig.url, makeBaseLayerOptions(layerConfig));\n}\n\nfunction makeBaseLayerOptions(config) {\n\tvar options = {};\n\tif (config.id) options.id = config.id;\n\tif (config.attribution) options.attribution = config.attribution;\n\tif (config.subdomains) options.subdomains = config.subdomains;\n\toptions.type = BASE_LAYER_TYPE;\n\n\treturn options;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\nexports.BindTabEvents = BindTabEvents;\nexports.GetActiveTab = GetActiveTab;\nexports.HandleTabChange = HandleTabChange;\n\nvar _panel = __webpack_require__(2);\n\nvar _share = __webpack_require__(0);\n\nfunction BindTabEvents() {\n\td3.selectAll(".panel-top-btn").on("click", handleTabHeaderBtnClick);\n}\n\nfunction GetActiveTab() {\n\treturn document.getElementsByClassName("panel-top-btn active")[0].getAttribute("data-active");\n}\n\nfunction handleTabHeaderBtnClick() {\n\t// If the section is already active, do nothing\n\tif (this.classList.contains("active")) return;\n\n\t//send google analytics click on graph type\n\tga(\'send\', \'event\', {\n\t\teventCategory: \'tab\',\n\t\teventAction: \'click\',\n\t\teventLabel: this.getAttribute("data-active"),\n\t\tnonInteraction: false\n\t});\n\n\tHandleTabChange(this.getAttribute("data-active"));\n}\n\nfunction HandleTabChange(newClass) {\n\tdisableActiveTab();\n\tenableTab(newClass);\n\t(0, _share.updateShareUrl)();\n}\n\nfunction enableTab(newClass) {\n\td3.select(".panel-top-btn[data-active=\'" + newClass + "\']").classed("active", true);\n\n\tdocument.getElementById("map-wrapper").classList.add(newClass);\n\tdocument.getElementById("right-panel").classList.add(newClass);\n\n\td3.select(".panel-section-wrapper[data-active=\'" + newClass + "\']").classed("active", true);\n\n\ttoggleMapPadding();\n\tresetPanelWidth();\n\t(0, _panel.updatePanelDragOverlayHeight)();\n}\n\nfunction disableActiveTab() {\n\tvar activeClass = d3.select(".panel-top-btn.active").attr("data-active");\n\n\td3.selectAll(\'#map-wrapper, #right-panel\').classed(activeClass, false);\n\n\td3.selectAll(\'.panel-top-btn.active, .panel-section-wrapper.active\').classed(\'active\', false);\n}\n\nfunction toggleMapPadding() {\n\tvar paddingRight = document.getElementById("right-panel").offsetWidth;\n\tdocument.getElementById("map-wrapper").style.paddingRight = paddingRight + "px";\n}\n\n/**\n * Since the panel has child elements with position fixed and width inherit\n * we need to clear the inline width property if and only if the inline\n * width is less than the min width\n */\nfunction resetPanelWidth() {\n\tvar panel = document.getElementById("right-panel");\n\tvar width = panel.style.width;\n\tif (!width) return;\n\n\tvar panelMinWidth = d3.select(panel).style(\'min-width\').slice(0, -2);\n\tif (parseInt(width.slice(0, -2), 10) > parseInt(panelMinWidth, 10)) return;\n\n\tpanel.style.width = "";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy90YWJzLmpzPzEyNWUiXSwibmFtZXMiOlsiQmluZFRhYkV2ZW50cyIsIkdldEFjdGl2ZVRhYiIsIkhhbmRsZVRhYkNoYW5nZSIsImQzIiwic2VsZWN0QWxsIiwib24iLCJoYW5kbGVUYWJIZWFkZXJCdG5DbGljayIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImdldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiZ2EiLCJldmVudENhdGVnb3J5IiwiZXZlbnRBY3Rpb24iLCJldmVudExhYmVsIiwibm9uSW50ZXJhY3Rpb24iLCJuZXdDbGFzcyIsImRpc2FibGVBY3RpdmVUYWIiLCJlbmFibGVUYWIiLCJzZWxlY3QiLCJjbGFzc2VkIiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGQiLCJ0b2dnbGVNYXBQYWRkaW5nIiwicmVzZXRQYW5lbFdpZHRoIiwiYWN0aXZlQ2xhc3MiLCJhdHRyIiwicGFkZGluZ1JpZ2h0Iiwib2Zmc2V0V2lkdGgiLCJzdHlsZSIsInBhbmVsIiwid2lkdGgiLCJwYW5lbE1pbldpZHRoIiwic2xpY2UiLCJwYXJzZUludCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFHZ0JBLGEsR0FBQUEsYTtRQUlBQyxZLEdBQUFBLFk7UUFtQkFDLGUsR0FBQUEsZTs7QUExQmhCOztBQUNBOztBQUVPLFNBQVNGLGFBQVQsR0FBMEI7QUFDaENHLElBQUdDLFNBQUgsQ0FBYSxnQkFBYixFQUErQkMsRUFBL0IsQ0FBa0MsT0FBbEMsRUFBMkNDLHVCQUEzQztBQUNBOztBQUVNLFNBQVNMLFlBQVQsR0FBeUI7QUFDL0IsUUFBT00sU0FBU0Msc0JBQVQsQ0FBZ0Msc0JBQWhDLEVBQXdELENBQXhELEVBQTJEQyxZQUEzRCxDQUF3RSxhQUF4RSxDQUFQO0FBQ0E7O0FBRUQsU0FBU0gsdUJBQVQsR0FBb0M7QUFDbkM7QUFDQSxLQUFJLEtBQUtJLFNBQUwsQ0FBZUMsUUFBZixDQUF3QixRQUF4QixDQUFKLEVBQXVDOztBQUV2QztBQUNBQyxJQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ2xCQyxpQkFBZSxLQURHO0FBRWxCQyxlQUFhLE9BRks7QUFHbEJDLGNBQVksS0FBS04sWUFBTCxDQUFrQixhQUFsQixDQUhNO0FBSWxCTyxrQkFBZ0I7QUFKRSxFQUFwQjs7QUFPQWQsaUJBQWdCLEtBQUtPLFlBQUwsQ0FBa0IsYUFBbEIsQ0FBaEI7QUFDQTs7QUFFTSxTQUFTUCxlQUFULENBQTBCZSxRQUExQixFQUFvQztBQUMxQ0M7QUFDQUMsV0FBVUYsUUFBVjtBQUNBO0FBQ0E7O0FBRUQsU0FBU0UsU0FBVCxDQUFvQkYsUUFBcEIsRUFBOEI7QUFDN0JkLElBQUdpQixNQUFILENBQVUsaUNBQWlDSCxRQUFqQyxHQUE0QyxJQUF0RCxFQUE0REksT0FBNUQsQ0FBb0UsUUFBcEUsRUFBOEUsSUFBOUU7O0FBRUFkLFVBQVNlLGNBQVQsQ0FBd0IsYUFBeEIsRUFBdUNaLFNBQXZDLENBQWlEYSxHQUFqRCxDQUFxRE4sUUFBckQ7QUFDQVYsVUFBU2UsY0FBVCxDQUF3QixhQUF4QixFQUF1Q1osU0FBdkMsQ0FBaURhLEdBQWpELENBQXFETixRQUFyRDs7QUFFQWQsSUFBR2lCLE1BQUgsQ0FBVSx5Q0FBeUNILFFBQXpDLEdBQW9ELElBQTlELEVBQW9FSSxPQUFwRSxDQUE0RSxRQUE1RSxFQUFzRixJQUF0Rjs7QUFFQUc7QUFDQUM7QUFDQTtBQUNBOztBQUVELFNBQVNQLGdCQUFULEdBQTZCO0FBQzVCLEtBQUlRLGNBQWN2QixHQUFHaUIsTUFBSCxDQUFVLHVCQUFWLEVBQW1DTyxJQUFuQyxDQUF3QyxhQUF4QyxDQUFsQjs7QUFFQXhCLElBQUdDLFNBQUgsQ0FBYSw0QkFBYixFQUNFaUIsT0FERixDQUNVSyxXQURWLEVBQ3VCLEtBRHZCOztBQUdBdkIsSUFBR0MsU0FBSCxDQUFhLHNEQUFiLEVBQ0VpQixPQURGLENBQ1UsUUFEVixFQUNvQixLQURwQjtBQUVBOztBQUVELFNBQVNHLGdCQUFULEdBQTZCO0FBQzVCLEtBQUlJLGVBQWVyQixTQUFTZSxjQUFULENBQXdCLGFBQXhCLEVBQXVDTyxXQUExRDtBQUNBdEIsVUFBU2UsY0FBVCxDQUF3QixhQUF4QixFQUF1Q1EsS0FBdkMsQ0FBNkNGLFlBQTdDLEdBQTREQSxlQUFlLElBQTNFO0FBQ0E7O0FBRUQ7Ozs7O0FBS0EsU0FBU0gsZUFBVCxHQUE0QjtBQUMzQixLQUFJTSxRQUFReEIsU0FBU2UsY0FBVCxDQUF3QixhQUF4QixDQUFaO0FBQ0EsS0FBSVUsUUFBUUQsTUFBTUQsS0FBTixDQUFZRSxLQUF4QjtBQUNBLEtBQUksQ0FBQ0EsS0FBTCxFQUFZOztBQUVaLEtBQUlDLGdCQUFnQjlCLEdBQUdpQixNQUFILENBQVVXLEtBQVYsRUFBaUJELEtBQWpCLENBQXVCLFdBQXZCLEVBQW9DSSxLQUFwQyxDQUEwQyxDQUExQyxFQUE2QyxDQUFDLENBQTlDLENBQXBCO0FBQ0EsS0FBSUMsU0FBU0gsTUFBTUUsS0FBTixDQUFZLENBQVosRUFBZSxDQUFDLENBQWhCLENBQVQsRUFBNkIsRUFBN0IsSUFBbUNDLFNBQVNGLGFBQVQsRUFBd0IsRUFBeEIsQ0FBdkMsRUFBb0U7O0FBRXBFRixPQUFNRCxLQUFOLENBQVlFLEtBQVosR0FBb0IsRUFBcEI7QUFDQSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXBkYXRlUGFuZWxEcmFnT3ZlcmxheUhlaWdodH0gZnJvbSBcIi4vcGFuZWxcIjtcbmltcG9ydCB7dXBkYXRlU2hhcmVVcmx9IGZyb20gXCIuL3NoYXJlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBCaW5kVGFiRXZlbnRzICgpIHtcblx0ZDMuc2VsZWN0QWxsKFwiLnBhbmVsLXRvcC1idG5cIikub24oXCJjbGlja1wiLCBoYW5kbGVUYWJIZWFkZXJCdG5DbGljayk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRBY3RpdmVUYWIgKCkge1xuXHRyZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInBhbmVsLXRvcC1idG4gYWN0aXZlXCIpWzBdLmdldEF0dHJpYnV0ZShcImRhdGEtYWN0aXZlXCIpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVUYWJIZWFkZXJCdG5DbGljayAoKSB7XG5cdC8vIElmIHRoZSBzZWN0aW9uIGlzIGFscmVhZHkgYWN0aXZlLCBkbyBub3RoaW5nXG5cdGlmICh0aGlzLmNsYXNzTGlzdC5jb250YWlucyhcImFjdGl2ZVwiKSkgcmV0dXJuO1xuXHRcblx0Ly9zZW5kIGdvb2dsZSBhbmFseXRpY3MgY2xpY2sgb24gZ3JhcGggdHlwZVxuXHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0ICBldmVudENhdGVnb3J5OiAndGFiJyxcblx0ICBldmVudEFjdGlvbjogJ2NsaWNrJyxcblx0ICBldmVudExhYmVsOiB0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtYWN0aXZlXCIpLFxuXHQgIG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHR9KTtcblxuXHRIYW5kbGVUYWJDaGFuZ2UodGhpcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLWFjdGl2ZVwiKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIYW5kbGVUYWJDaGFuZ2UgKG5ld0NsYXNzKSB7XG5cdGRpc2FibGVBY3RpdmVUYWIoKTtcblx0ZW5hYmxlVGFiKG5ld0NsYXNzKTtcblx0dXBkYXRlU2hhcmVVcmwoKTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlVGFiIChuZXdDbGFzcykge1xuXHRkMy5zZWxlY3QoXCIucGFuZWwtdG9wLWJ0bltkYXRhLWFjdGl2ZT0nXCIgKyBuZXdDbGFzcyArIFwiJ11cIikuY2xhc3NlZChcImFjdGl2ZVwiLCB0cnVlKTtcblxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcC13cmFwcGVyXCIpLmNsYXNzTGlzdC5hZGQobmV3Q2xhc3MpXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmlnaHQtcGFuZWxcIikuY2xhc3NMaXN0LmFkZChuZXdDbGFzcylcblxuXHRkMy5zZWxlY3QoXCIucGFuZWwtc2VjdGlvbi13cmFwcGVyW2RhdGEtYWN0aXZlPSdcIiArIG5ld0NsYXNzICsgXCInXVwiKS5jbGFzc2VkKFwiYWN0aXZlXCIsIHRydWUpO1xuXG5cdHRvZ2dsZU1hcFBhZGRpbmcoKTtcblx0cmVzZXRQYW5lbFdpZHRoKCk7XG5cdHVwZGF0ZVBhbmVsRHJhZ092ZXJsYXlIZWlnaHQoKTtcbn1cblxuZnVuY3Rpb24gZGlzYWJsZUFjdGl2ZVRhYiAoKSB7XG5cdHZhciBhY3RpdmVDbGFzcyA9IGQzLnNlbGVjdChcIi5wYW5lbC10b3AtYnRuLmFjdGl2ZVwiKS5hdHRyKFwiZGF0YS1hY3RpdmVcIik7XG5cblx0ZDMuc2VsZWN0QWxsKCcjbWFwLXdyYXBwZXIsICNyaWdodC1wYW5lbCcpXG5cdFx0LmNsYXNzZWQoYWN0aXZlQ2xhc3MsIGZhbHNlKTtcblxuXHRkMy5zZWxlY3RBbGwoJy5wYW5lbC10b3AtYnRuLmFjdGl2ZSwgLnBhbmVsLXNlY3Rpb24td3JhcHBlci5hY3RpdmUnKVxuXHRcdC5jbGFzc2VkKCdhY3RpdmUnLCBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZU1hcFBhZGRpbmcgKCkge1xuXHR2YXIgcGFkZGluZ1JpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyaWdodC1wYW5lbFwiKS5vZmZzZXRXaWR0aDtcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXAtd3JhcHBlclwiKS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBwYWRkaW5nUmlnaHQgKyBcInB4XCI7XG59XG5cbi8qKlxuICogU2luY2UgdGhlIHBhbmVsIGhhcyBjaGlsZCBlbGVtZW50cyB3aXRoIHBvc2l0aW9uIGZpeGVkIGFuZCB3aWR0aCBpbmhlcml0XG4gKiB3ZSBuZWVkIHRvIGNsZWFyIHRoZSBpbmxpbmUgd2lkdGggcHJvcGVydHkgaWYgYW5kIG9ubHkgaWYgdGhlIGlubGluZVxuICogd2lkdGggaXMgbGVzcyB0aGFuIHRoZSBtaW4gd2lkdGhcbiAqL1xuZnVuY3Rpb24gcmVzZXRQYW5lbFdpZHRoICgpIHtcblx0dmFyIHBhbmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyaWdodC1wYW5lbFwiKTtcblx0dmFyIHdpZHRoID0gcGFuZWwuc3R5bGUud2lkdGg7XG5cdGlmICghd2lkdGgpIHJldHVybjtcblxuXHR2YXIgcGFuZWxNaW5XaWR0aCA9IGQzLnNlbGVjdChwYW5lbCkuc3R5bGUoJ21pbi13aWR0aCcpLnNsaWNlKDAsIC0yKTtcblx0aWYgKHBhcnNlSW50KHdpZHRoLnNsaWNlKDAsIC0yKSwgMTApID4gcGFyc2VJbnQocGFuZWxNaW5XaWR0aCwgMTApKSByZXR1cm47XG5cblx0cGFuZWwuc3R5bGUud2lkdGggPSBcIlwiO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\n\nvar _parser = __webpack_require__(10);\n\nvar _search = __webpack_require__(17);\n\nvar _search2 = _interopRequireDefault(_search);\n\nvar _panel = __webpack_require__(2);\n\nvar _baselayer = __webpack_require__(14);\n\nvar _graph = __webpack_require__(9);\n\nvar _poi = __webpack_require__(8);\n\nvar _tabs = __webpack_require__(15);\n\nvar _map = __webpack_require__(1);\n\nvar _share = __webpack_require__(0);\n\nvar _layer = __webpack_require__(5);\n\nvar _logo = __webpack_require__(32);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _mobile = __webpack_require__(33);\n\nvar _mobile2 = _interopRequireDefault(_mobile);\n\nvar _panelToggle = __webpack_require__(34);\n\nvar _panelToggle2 = _interopRequireDefault(_panelToggle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar css = __webpack_require__(35);\n\n// Does not rely on map object or config file\nvar Base = function Base(config) {\n\t(0, _parser.ParseConfig)(config, callback);\n\t(0, _graph.SetupGraphs)();\n\t(0, _tabs.BindTabEvents)();\n\t(0, _share.BindCopyLinkEvents)();\n\t(0, _mobile2.default)();\n\t(0, _panelToggle2.default)();\n};\n\n// Does rely on map object or config file\nvar callback = function callback(data) {\n\t(0, _share.AddShareSettingsToConfig)(data);\n\tvar map = (0, _map.CreateMap)(data.map);\n\t(0, _baselayer.CreateBaseLayers)(map, data.baselayers);\n\t(0, _layer.CreateDefaultLayers)(data.layers, data["active-layers"]);\n\t(0, _panel.SetupPanel)(data.layers, data.layout);\n\t(0, _search2.default)(map);\n\t(0, _logo2.default)(data.logo);\n\tif (data.tab) (0, _tabs.HandleTabChange)(data.tab);\n\tif (data.graph) (0, _graph.HandleGraphTabChange)(data.graph);\n\t(0, _poi.BindGraphEvents)(map);\n\t(0, _share.BindUpdateShareUrl)(map);\n\t(0, _poi.SetupPointsOfInterest)(map, data.pois);\n\t(0, _share.updateShareUrl)();\n};\n\nwindow.Base = Base;\n\nexports.default = { Base: Base };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9iYXNlLmpzPzYyYTEiXSwibmFtZXMiOlsiY3NzIiwicmVxdWlyZSIsIkJhc2UiLCJjb25maWciLCJjYWxsYmFjayIsImRhdGEiLCJtYXAiLCJiYXNlbGF5ZXJzIiwibGF5ZXJzIiwibGF5b3V0IiwibG9nbyIsInRhYiIsImdyYXBoIiwicG9pcyIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQUlBLE1BQU1DLG1CQUFPQSxDQUFDLEVBQVIsQ0FBVjs7QUFFQTtBQUNBLElBQUlDLE9BQU8sU0FBUEEsSUFBTyxDQUFVQyxNQUFWLEVBQWtCO0FBQzVCLDBCQUFZQSxNQUFaLEVBQW9CQyxRQUFwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQVBEOztBQVNBO0FBQ0EsSUFBSUEsV0FBVyxTQUFYQSxRQUFXLENBQVVDLElBQVYsRUFBZ0I7QUFDOUIsc0NBQXlCQSxJQUF6QjtBQUNBLEtBQUlDLE1BQU0sb0JBQVVELEtBQUtDLEdBQWYsQ0FBVjtBQUNBLGtDQUFpQkEsR0FBakIsRUFBc0JELEtBQUtFLFVBQTNCO0FBQ0EsaUNBQW9CRixLQUFLRyxNQUF6QixFQUFpQ0gsS0FBSyxlQUFMLENBQWpDO0FBQ0Esd0JBQVdBLEtBQUtHLE1BQWhCLEVBQXdCSCxLQUFLSSxNQUE3QjtBQUNBLHVCQUFhSCxHQUFiO0FBQ0EscUJBQVdELEtBQUtLLElBQWhCO0FBQ0EsS0FBSUwsS0FBS00sR0FBVCxFQUFjLDJCQUFnQk4sS0FBS00sR0FBckI7QUFDZCxLQUFJTixLQUFLTyxLQUFULEVBQWdCLGlDQUFxQlAsS0FBS08sS0FBMUI7QUFDaEIsMkJBQWdCTixHQUFoQjtBQUNBLGdDQUFtQkEsR0FBbkI7QUFDQSxpQ0FBc0JBLEdBQXRCLEVBQTJCRCxLQUFLUSxJQUFoQztBQUNBO0FBQ0EsQ0FkRDs7QUFnQkFDLE9BQU9aLElBQVAsR0FBY0EsSUFBZDs7a0JBRWUsRUFBQ0EsVUFBRCxFIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQYXJzZUNvbmZpZ30gZnJvbSAnLi9wYXJzZXInO1xuaW1wb3J0IENyZWF0ZVNlYXJjaCBmcm9tICcuL3NlYXJjaCc7XG5pbXBvcnQge1NldHVwUGFuZWx9IGZyb20gJy4vcGFuZWwnO1xuaW1wb3J0IHtDcmVhdGVCYXNlTGF5ZXJzfSBmcm9tICcuL2Jhc2VsYXllcic7XG5pbXBvcnQge1NldHVwR3JhcGhzLCBIYW5kbGVHcmFwaFRhYkNoYW5nZX0gZnJvbSAnLi9ncmFwaCdcbmltcG9ydCB7QmluZEdyYXBoRXZlbnRzfSBmcm9tICcuL3BvaSc7XG5pbXBvcnQge0JpbmRUYWJFdmVudHMsIEhhbmRsZVRhYkNoYW5nZX0gZnJvbSAnLi90YWJzJ1xuaW1wb3J0IHtDcmVhdGVNYXB9IGZyb20gJy4vbWFwJ1xuaW1wb3J0IHtCaW5kVXBkYXRlU2hhcmVVcmwsIEFkZFNoYXJlU2V0dGluZ3NUb0NvbmZpZywgQmluZENvcHlMaW5rRXZlbnRzfSBmcm9tICcuL3NoYXJlJ1xuaW1wb3J0IHtDcmVhdGVEZWZhdWx0TGF5ZXJzfSBmcm9tICcuL2xheWVyJ1xuaW1wb3J0IENyZWF0ZUxvZ28gZnJvbSAnLi9sb2dvJztcbmltcG9ydCB7U2V0dXBQb2ludHNPZkludGVyZXN0fSBmcm9tICcuL3BvaSc7XG5pbXBvcnQge3VwZGF0ZVNoYXJlVXJsfSBmcm9tICcuL3NoYXJlJztcbmltcG9ydCBCaW5kTW9iaWxlTWVudUV2ZW50cyBmcm9tICcuL21vYmlsZSc7XG5pbXBvcnQgQmluZERlc2t0b3BNZW51RXZlbnRzIGZyb20gJy4vcGFuZWxUb2dnbGUnO1xuXG52YXIgY3NzID0gcmVxdWlyZSgnLi4vY3NzL3Nhc3MvbGFuZGF0LnNjc3MnKVxuXG4vLyBEb2VzIG5vdCByZWx5IG9uIG1hcCBvYmplY3Qgb3IgY29uZmlnIGZpbGVcbnZhciBCYXNlID0gZnVuY3Rpb24gKGNvbmZpZykge1xuXHRQYXJzZUNvbmZpZyhjb25maWcsIGNhbGxiYWNrKTtcblx0U2V0dXBHcmFwaHMoKTtcblx0QmluZFRhYkV2ZW50cygpO1xuXHRCaW5kQ29weUxpbmtFdmVudHMoKTtcblx0QmluZE1vYmlsZU1lbnVFdmVudHMoKTtcblx0QmluZERlc2t0b3BNZW51RXZlbnRzKCk7XG59XG5cbi8vIERvZXMgcmVseSBvbiBtYXAgb2JqZWN0IG9yIGNvbmZpZyBmaWxlXG52YXIgY2FsbGJhY2sgPSBmdW5jdGlvbiAoZGF0YSkge1xuXHRBZGRTaGFyZVNldHRpbmdzVG9Db25maWcoZGF0YSlcblx0dmFyIG1hcCA9IENyZWF0ZU1hcChkYXRhLm1hcCk7XG5cdENyZWF0ZUJhc2VMYXllcnMobWFwLCBkYXRhLmJhc2VsYXllcnMpO1xuXHRDcmVhdGVEZWZhdWx0TGF5ZXJzKGRhdGEubGF5ZXJzLCBkYXRhW1wiYWN0aXZlLWxheWVyc1wiXSk7XG5cdFNldHVwUGFuZWwoZGF0YS5sYXllcnMsIGRhdGEubGF5b3V0KTtcblx0Q3JlYXRlU2VhcmNoKG1hcCk7XG5cdENyZWF0ZUxvZ28oZGF0YS5sb2dvKTtcblx0aWYgKGRhdGEudGFiKSBIYW5kbGVUYWJDaGFuZ2UoZGF0YS50YWIpO1xuXHRpZiAoZGF0YS5ncmFwaCkgSGFuZGxlR3JhcGhUYWJDaGFuZ2UoZGF0YS5ncmFwaCk7XG5cdEJpbmRHcmFwaEV2ZW50cyhtYXApO1xuXHRCaW5kVXBkYXRlU2hhcmVVcmwobWFwKTtcblx0U2V0dXBQb2ludHNPZkludGVyZXN0KG1hcCwgZGF0YS5wb2lzKVxuXHR1cGRhdGVTaGFyZVVybCgpXG59XG5cbndpbmRvdy5CYXNlID0gQmFzZTtcblxuZXhwb3J0IGRlZmF1bHQge0Jhc2V9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = CreateSearch;\n\nvar _leafletGeosearch = __webpack_require__(18);\n\nfunction CreateSearch(map) {\n\tvar provider = new _leafletGeosearch.OpenStreetMapProvider();\n\n\tvar searchControl = new _leafletGeosearch.GeoSearchControl({\n\t\tprovider: provider,\n\t\tshowMarker: false,\n\t\tautoComplete: true,\n\t\tshowPopup: false\n\t});\n\n\tmap.addControl(searchControl);\n\n\tvar searchElements = searchControl.searchElement.elements;\n\n\tL.DomEvent.on(searchElements.container, \"click\", function (ev) {\n\t\tL.DomEvent.stopPropagation(ev);\n\n\t\tvar searchEntries = searchElements.form.getElementsByClassName('results')[0].children;\n\n\t\tfor (var i = 0; i < searchEntries.length; i++) {\n\t\t\tif (ev.target === searchEntries[i]) {\n\t\t\t\tsearchElements.container.classList.remove('active');\n\t\t\t}\n\t\t}\n\n\t\t//send google analytics for search by address\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'map',\n\t\t\teventAction: 'search',\n\t\t\teventLabel: 'click',\n\t\t\tnonInteraction: false\n\t\t});\n\t});\n\n\tL.DomEvent.on(searchElements.container, \"keydown\", function (ev) {\n\t\tL.DomEvent.stopPropagation(ev);\n\n\t\tif (ev.which == 13 || ev.keyCode == 13) {\n\t\t\tsearchElements.container.classList.remove('active');\n\n\t\t\t//send google analytics for seacrch by address\n\t\t\tga('send', 'event', {\n\t\t\t\teventCategory: 'map',\n\t\t\t\teventAction: 'search address',\n\t\t\t\teventLabel: ev.target.value,\n\t\t\t\tnonInteraction: false\n\t\t\t});\n\t\t}\n\t});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9zZWFyY2guanM/ODAxYiJdLCJuYW1lcyI6WyJDcmVhdGVTZWFyY2giLCJtYXAiLCJwcm92aWRlciIsIk9wZW5TdHJlZXRNYXBQcm92aWRlciIsInNlYXJjaENvbnRyb2wiLCJHZW9TZWFyY2hDb250cm9sIiwic2hvd01hcmtlciIsImF1dG9Db21wbGV0ZSIsInNob3dQb3B1cCIsImFkZENvbnRyb2wiLCJzZWFyY2hFbGVtZW50cyIsInNlYXJjaEVsZW1lbnQiLCJlbGVtZW50cyIsIkwiLCJEb21FdmVudCIsIm9uIiwiY29udGFpbmVyIiwiZXYiLCJzdG9wUHJvcGFnYXRpb24iLCJzZWFyY2hFbnRyaWVzIiwiZm9ybSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJjaGlsZHJlbiIsImkiLCJsZW5ndGgiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJnYSIsImV2ZW50Q2F0ZWdvcnkiLCJldmVudEFjdGlvbiIsImV2ZW50TGFiZWwiLCJub25JbnRlcmFjdGlvbiIsIndoaWNoIiwia2V5Q29kZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFFd0JBLFk7O0FBRnhCOztBQUVlLFNBQVNBLFlBQVQsQ0FBdUJDLEdBQXZCLEVBQTRCO0FBQzFDLEtBQU1DLFdBQVcsSUFBSUMsdUNBQUosRUFBakI7O0FBRUEsS0FBTUMsZ0JBQWdCLElBQUlDLGtDQUFKLENBQXFCO0FBQzFDSCxZQUFVQSxRQURnQztBQUUxQ0ksY0FBWSxLQUY4QjtBQUcxQ0MsZ0JBQWMsSUFINEI7QUFJMUNDLGFBQVc7QUFKK0IsRUFBckIsQ0FBdEI7O0FBT0FQLEtBQUlRLFVBQUosQ0FBZUwsYUFBZjs7QUFFQSxLQUFJTSxpQkFBaUJOLGNBQWNPLGFBQWQsQ0FBNEJDLFFBQWpEOztBQUVBQyxHQUFFQyxRQUFGLENBQVdDLEVBQVgsQ0FBY0wsZUFBZU0sU0FBN0IsRUFBd0MsT0FBeEMsRUFBaUQsVUFBVUMsRUFBVixFQUFjO0FBQzlESixJQUFFQyxRQUFGLENBQVdJLGVBQVgsQ0FBMkJELEVBQTNCOztBQUVBLE1BQUlFLGdCQUFnQlQsZUFBZVUsSUFBZixDQUNsQkMsc0JBRGtCLENBQ0ssU0FETCxFQUNnQixDQURoQixFQUNtQkMsUUFEdkM7O0FBR0EsT0FBSyxJQUFJQyxJQUFFLENBQVgsRUFBY0EsSUFBRUosY0FBY0ssTUFBOUIsRUFBc0NELEdBQXRDLEVBQTJDO0FBQzFDLE9BQUlOLEdBQUdRLE1BQUgsS0FBY04sY0FBY0ksQ0FBZCxDQUFsQixFQUFvQztBQUNuQ2IsbUJBQWVNLFNBQWYsQ0FBeUJVLFNBQXpCLENBQW1DQyxNQUFuQyxDQUEwQyxRQUExQztBQUNBO0FBQ0Q7O0FBRUQ7QUFDQUMsS0FBRyxNQUFILEVBQVcsT0FBWCxFQUFvQjtBQUNuQkMsa0JBQWUsS0FESTtBQUVuQkMsZ0JBQWEsUUFGTTtBQUduQkMsZUFBWSxPQUhPO0FBSW5CQyxtQkFBZ0I7QUFKRyxHQUFwQjtBQU9BLEVBcEJEOztBQXNCQW5CLEdBQUVDLFFBQUYsQ0FBV0MsRUFBWCxDQUFjTCxlQUFlTSxTQUE3QixFQUF3QyxTQUF4QyxFQUFtRCxVQUFVQyxFQUFWLEVBQWM7QUFDaEVKLElBQUVDLFFBQUYsQ0FBV0ksZUFBWCxDQUEyQkQsRUFBM0I7O0FBRUEsTUFBSUEsR0FBR2dCLEtBQUgsSUFBWSxFQUFaLElBQWtCaEIsR0FBR2lCLE9BQUgsSUFBYyxFQUFwQyxFQUF3QztBQUN2Q3hCLGtCQUFlTSxTQUFmLENBQXlCVSxTQUF6QixDQUFtQ0MsTUFBbkMsQ0FBMEMsUUFBMUM7O0FBRUE7QUFDQUMsTUFBRyxNQUFILEVBQVcsT0FBWCxFQUFvQjtBQUNuQkMsbUJBQWUsS0FESTtBQUVuQkMsaUJBQWEsZ0JBRk07QUFHbkJDLGdCQUFZZCxHQUFHUSxNQUFILENBQVVVLEtBSEg7QUFJbkJILG9CQUFnQjtBQUpHLElBQXBCO0FBTUE7QUFDRCxFQWREO0FBZ0JBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2VvU2VhcmNoQ29udHJvbCwgT3BlblN0cmVldE1hcFByb3ZpZGVyIH0gZnJvbSAnbGVhZmxldC1nZW9zZWFyY2gnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDcmVhdGVTZWFyY2ggKG1hcCkge1xuXHRjb25zdCBwcm92aWRlciA9IG5ldyBPcGVuU3RyZWV0TWFwUHJvdmlkZXIoKTtcblxuXHRjb25zdCBzZWFyY2hDb250cm9sID0gbmV3IEdlb1NlYXJjaENvbnRyb2woe1xuXHRcdHByb3ZpZGVyOiBwcm92aWRlcixcblx0XHRzaG93TWFya2VyOiBmYWxzZSxcblx0XHRhdXRvQ29tcGxldGU6IHRydWUsXG5cdFx0c2hvd1BvcHVwOiBmYWxzZSxcblx0fSk7XG5cblx0bWFwLmFkZENvbnRyb2woc2VhcmNoQ29udHJvbCk7XG5cblx0dmFyIHNlYXJjaEVsZW1lbnRzID0gc2VhcmNoQ29udHJvbC5zZWFyY2hFbGVtZW50LmVsZW1lbnRzXG5cblx0TC5Eb21FdmVudC5vbihzZWFyY2hFbGVtZW50cy5jb250YWluZXIsIFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2KSB7XG5cdFx0TC5Eb21FdmVudC5zdG9wUHJvcGFnYXRpb24oZXYpO1xuXG5cdFx0dmFyIHNlYXJjaEVudHJpZXMgPSBzZWFyY2hFbGVtZW50cy5mb3JtXG5cdFx0XHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmVzdWx0cycpWzBdLmNoaWxkcmVuXG5cblx0XHRmb3IgKHZhciBpPTA7IGk8c2VhcmNoRW50cmllcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGV2LnRhcmdldCA9PT0gc2VhcmNoRW50cmllc1tpXSkge1xuXHRcdFx0XHRzZWFyY2hFbGVtZW50cy5jb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvL3NlbmQgZ29vZ2xlIGFuYWx5dGljcyBmb3Igc2VhcmNoIGJ5IGFkZHJlc3Ncblx0XHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0XHRcdGV2ZW50Q2F0ZWdvcnk6ICdtYXAnLFxuXHRcdFx0ZXZlbnRBY3Rpb246ICdzZWFyY2gnLFxuXHRcdFx0ZXZlbnRMYWJlbDogJ2NsaWNrJyxcblx0XHRcdG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHRcdH0pO1xuXG5cdH0pO1xuXG5cdEwuRG9tRXZlbnQub24oc2VhcmNoRWxlbWVudHMuY29udGFpbmVyLCBcImtleWRvd25cIiwgZnVuY3Rpb24gKGV2KSB7XG5cdFx0TC5Eb21FdmVudC5zdG9wUHJvcGFnYXRpb24oZXYpO1xuXG5cdFx0aWYgKGV2LndoaWNoID09IDEzIHx8IGV2LmtleUNvZGUgPT0gMTMpIHtcblx0XHRcdHNlYXJjaEVsZW1lbnRzLmNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuXG5cdFx0XHQvL3NlbmQgZ29vZ2xlIGFuYWx5dGljcyBmb3Igc2VhY3JjaCBieSBhZGRyZXNzXG5cdFx0XHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0XHRcdFx0ZXZlbnRDYXRlZ29yeTogJ21hcCcsXG5cdFx0XHRcdGV2ZW50QWN0aW9uOiAnc2VhcmNoIGFkZHJlc3MnLFxuXHRcdFx0XHRldmVudExhYmVsOiBldi50YXJnZXQudmFsdWUsXG5cdFx0XHRcdG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9KTtcblxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _leafletControl = __webpack_require__(19);\n\nObject.defineProperty(exports, 'GeoSearchControl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_leafletControl).default;\n  }\n});\n\nvar _searchElement = __webpack_require__(12);\n\nObject.defineProperty(exports, 'SearchElement', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_searchElement).default;\n  }\n});\n\nvar _bingProvider = __webpack_require__(26);\n\nObject.defineProperty(exports, 'BingProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_bingProvider).default;\n  }\n});\n\nvar _esriProvider = __webpack_require__(27);\n\nObject.defineProperty(exports, 'EsriProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_esriProvider).default;\n  }\n});\n\nvar _googleProvider = __webpack_require__(28);\n\nObject.defineProperty(exports, 'GoogleProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_googleProvider).default;\n  }\n});\n\nvar _openStreetMapProvider = __webpack_require__(29);\n\nObject.defineProperty(exports, 'OpenStreetMapProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_openStreetMapProvider).default;\n  }\n});\n\nvar _provider = __webpack_require__(4);\n\nObject.defineProperty(exports, 'Provider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_provider).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL2luZGV4LmpzP2M2ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7O0FBRUQsc0JBQXNCLG1CQUFPLENBQUMsRUFBa0I7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELHFCQUFxQixtQkFBTyxDQUFDLEVBQWlCOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxvQkFBb0IsbUJBQU8sQ0FBQyxFQUEwQjs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsb0JBQW9CLG1CQUFPLENBQUMsRUFBMEI7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELHNCQUFzQixtQkFBTyxDQUFDLEVBQTRCOztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCw2QkFBNkIsbUJBQU8sQ0FBQyxFQUFtQzs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsZ0JBQWdCLG1CQUFPLENBQUMsQ0FBc0I7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELHNDQUFzQyx1Q0FBdUMsZ0JBQWdCIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2xlYWZsZXRDb250cm9sID0gcmVxdWlyZSgnLi9sZWFmbGV0Q29udHJvbCcpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ0dlb1NlYXJjaENvbnRyb2wnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sZWFmbGV0Q29udHJvbCkuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfc2VhcmNoRWxlbWVudCA9IHJlcXVpcmUoJy4vc2VhcmNoRWxlbWVudCcpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ1NlYXJjaEVsZW1lbnQnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZWFyY2hFbGVtZW50KS5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF9iaW5nUHJvdmlkZXIgPSByZXF1aXJlKCcuL3Byb3ZpZGVycy9iaW5nUHJvdmlkZXInKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdCaW5nUHJvdmlkZXInLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9iaW5nUHJvdmlkZXIpLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG52YXIgX2VzcmlQcm92aWRlciA9IHJlcXVpcmUoJy4vcHJvdmlkZXJzL2VzcmlQcm92aWRlcicpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ0VzcmlQcm92aWRlcicsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VzcmlQcm92aWRlcikuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfZ29vZ2xlUHJvdmlkZXIgPSByZXF1aXJlKCcuL3Byb3ZpZGVycy9nb29nbGVQcm92aWRlcicpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ0dvb2dsZVByb3ZpZGVyJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ29vZ2xlUHJvdmlkZXIpLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG52YXIgX29wZW5TdHJlZXRNYXBQcm92aWRlciA9IHJlcXVpcmUoJy4vcHJvdmlkZXJzL29wZW5TdHJlZXRNYXBQcm92aWRlcicpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ09wZW5TdHJlZXRNYXBQcm92aWRlcicsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX29wZW5TdHJlZXRNYXBQcm92aWRlcikuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfcHJvdmlkZXIgPSByZXF1aXJlKCcuL3Byb3ZpZGVycy9wcm92aWRlcicpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ1Byb3ZpZGVyJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvdmlkZXIpLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///18\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nodentRuntime = __webpack_require__(3);\n\nvar _nodentRuntime2 = _interopRequireDefault(_nodentRuntime);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = LeafletControl;\n\nvar _lodash = __webpack_require__(24);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _searchElement = __webpack_require__(12);\n\nvar _searchElement2 = _interopRequireDefault(_searchElement);\n\nvar _resultList = __webpack_require__(25);\n\nvar _resultList2 = _interopRequireDefault(_resultList);\n\nvar _domUtils = __webpack_require__(6);\n\nvar _constants = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = function defaultOptions() {\n  return {\n    position: 'topleft',\n    style: 'button',\n    showMarker: true,\n    showPopup: false,\n    popupFormat: function popupFormat(_ref) {\n      var result = _ref.result;\n      return '' + result.label;\n    },\n    marker: {\n      icon: new L.Icon.Default(),\n      draggable: false\n    },\n    maxMarkers: 1,\n    retainZoomLevel: false,\n    animateZoom: true,\n    searchLabel: 'Enter address',\n    notFoundMessage: 'Sorry, that address could not be found.',\n    messageHideDelay: 3000,\n    zoomLevel: 18,\n    classNames: {\n      container: 'leaflet-bar leaflet-control leaflet-control-geosearch',\n      button: 'leaflet-bar-part leaflet-bar-part-single',\n      resetButton: 'reset',\n      msgbox: 'leaflet-bar message',\n      form: '',\n      input: ''\n    },\n    autoComplete: true,\n    autoCompleteDelay: 250,\n    autoClose: false,\n    keepResult: false\n  };\n};\n\nvar wasHandlerEnabled = {};\nvar mapHandlers = ['dragging', 'touchZoom', 'doubleClickZoom', 'scrollWheelZoom', 'boxZoom', 'keyboard'];\n\nvar Control = {\n  initialize: function initialize(options) {\n    var _this = this;\n\n    this.markers = new L.FeatureGroup();\n    this.handlersDisabled = false;\n\n    this.options = _extends({}, defaultOptions(), options);\n\n    var _options = this.options,\n        style = _options.style,\n        classNames = _options.classNames,\n        searchLabel = _options.searchLabel,\n        autoComplete = _options.autoComplete,\n        autoCompleteDelay = _options.autoCompleteDelay;\n\n    if (style !== 'button') {\n      this.options.classNames.container += ' ' + options.style;\n    }\n\n    this.searchElement = new _searchElement2.default(_extends({}, this.options, {\n      handleSubmit: function handleSubmit(query) {\n        return _this.onSubmit(query);\n      }\n    }));\n\n    var _searchElement$elemen = this.searchElement.elements,\n        container = _searchElement$elemen.container,\n        form = _searchElement$elemen.form,\n        input = _searchElement$elemen.input;\n\n\n    var button = (0, _domUtils.createElement)('a', classNames.button, container);\n    button.title = searchLabel;\n    button.href = '#';\n\n    button.addEventListener('click', function (e) {\n      _this.onClick(e);\n    }, false);\n\n    var resetButton = (0, _domUtils.createElement)('a', classNames.resetButton, form);\n    resetButton.innerHTML = 'X';\n    button.href = '#';\n    resetButton.addEventListener('click', function () {\n      _this.clearResults(null, true);\n    }, false);\n\n    if (autoComplete) {\n      this.resultList = new _resultList2.default({\n        handleClick: function handleClick(_ref2) {\n          var result = _ref2.result;\n\n          input.value = result.label;\n          _this.onSubmit({ query: result.label, data: result });\n        }\n      });\n\n      form.appendChild(this.resultList.elements.container);\n\n      input.addEventListener('keyup', (0, _lodash2.default)(function (e) {\n        return _this.autoSearch(e);\n      }, autoCompleteDelay), true);\n      input.addEventListener('keydown', function (e) {\n        return _this.selectResult(e);\n      }, true);\n      input.addEventListener('keydown', function (e) {\n        return _this.clearResults(e, true);\n      }, true);\n    }\n\n    form.addEventListener('mouseenter', function (e) {\n      return _this.disableHandlers(e);\n    }, true);\n    form.addEventListener('mouseleave', function (e) {\n      return _this.restoreHandlers(e);\n    }, true);\n\n    this.elements = { button: button, resetButton: resetButton };\n  },\n  onAdd: function onAdd(map) {\n    var _options2 = this.options,\n        showMarker = _options2.showMarker,\n        style = _options2.style;\n\n\n    this.map = map;\n    if (showMarker) {\n      this.markers.addTo(map);\n    }\n\n    if (style === 'bar') {\n      var form = this.searchElement.elements.form;\n\n      var root = map.getContainer().querySelector('.leaflet-control-container');\n\n      var container = (0, _domUtils.createElement)('div', 'leaflet-control-geosearch bar');\n      container.appendChild(form);\n      root.appendChild(container);\n      this.elements.container = container;\n    }\n\n    return this.searchElement.elements.container;\n  },\n  onRemove: function onRemove() {\n    var container = this.elements.container;\n\n    if (container) {\n      container.remove();\n    }\n\n    return this;\n  },\n  onClick: function onClick(event) {\n    event.preventDefault();\n\n    var _searchElement$elemen2 = this.searchElement.elements,\n        container = _searchElement$elemen2.container,\n        input = _searchElement$elemen2.input;\n\n\n    if (container.classList.contains('active')) {\n      (0, _domUtils.removeClassName)(container, 'active');\n      this.clearResults();\n    } else {\n      (0, _domUtils.addClassName)(container, 'active');\n      input.focus();\n    }\n  },\n  disableHandlers: function disableHandlers(e) {\n    var _this2 = this;\n\n    var form = this.searchElement.elements.form;\n\n\n    if (this.handlersDisabled || e && e.target !== form) {\n      return;\n    }\n\n    this.handlersDisabled = true;\n    mapHandlers.forEach(function (handler) {\n      if (_this2.map[handler]) {\n        wasHandlerEnabled[handler] = _this2.map[handler].enabled();\n        _this2.map[handler].disable();\n      }\n    });\n  },\n  restoreHandlers: function restoreHandlers(e) {\n    var _this3 = this;\n\n    var form = this.searchElement.elements.form;\n\n\n    if (!this.handlersDisabled || e && e.target !== form) {\n      return;\n    }\n\n    this.handlersDisabled = false;\n    mapHandlers.forEach(function (handler) {\n      if (wasHandlerEnabled[handler]) {\n        _this3.map[handler].enable();\n      }\n    });\n  },\n  selectResult: function selectResult(event) {\n    if (![_constants.ENTER_KEY, _constants.ARROW_DOWN_KEY, _constants.ARROW_UP_KEY].includes(event.keyCode)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    var input = this.searchElement.elements.input;\n\n\n    var list = this.resultList;\n\n    if (event.keyCode === _constants.ENTER_KEY) {\n      var _item = list.select(list.selected);\n      this.onSubmit({ query: input.value, data: _item });\n      return;\n    }\n\n    var max = list.count() - 1;\n    if (max < 0) {\n      return;\n    }\n\n    // eslint-disable-next-line no-bitwise\n    var next = event.code === 'ArrowDown' ? ~~list.selected + 1 : ~~list.selected - 1;\n    // eslint-disable-next-line no-nested-ternary\n    var idx = next < 0 ? max : next > max ? 0 : next;\n\n    var item = list.select(idx);\n    input.value = item.label;\n  },\n  clearResults: function clearResults(event) {\n    var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (event && event.keyCode !== _constants.ESCAPE_KEY) {\n      return;\n    }\n\n    var input = this.searchElement.elements.input;\n    var _options3 = this.options,\n        keepResult = _options3.keepResult,\n        autoComplete = _options3.autoComplete;\n\n\n    if (force || !keepResult) {\n      input.value = '';\n      this.markers.clearLayers();\n    }\n\n    if (autoComplete) {\n      this.resultList.clear();\n    }\n  },\n  autoSearch: function autoSearch(event) {\n    return new Promise(function ($return, $error) {\n      var query, provider, results;\n\n      if (_constants.SPECIAL_KEYS.includes(event.keyCode)) {\n        return $return();\n      }\n\n      query = event.target.value;\n      provider = this.options.provider;\n\n\n      if (query.length) {\n        return provider.search({ query: query }).then(function ($await_2) {\n          results = $await_2;\n          this.resultList.render(results);\n          return $If_1.call(this);\n        }.$asyncbind(this, $error), $error);\n      } else {\n        this.resultList.clear();\n        return $If_1.call(this);\n      }\n\n      function $If_1() {\n        return $return();\n      }\n    }.$asyncbind(this));\n  },\n  onSubmit: function onSubmit(query) {\n    return new Promise(function ($return, $error) {\n      var provider, results;\n      provider = this.options.provider;\n      return provider.search(query).then(function ($await_3) {\n\n        results = $await_3;\n\n        if (results && results.length > 0) {\n          this.showResult(results[0], query);\n        }\n        return $return();\n      }.$asyncbind(this, $error), $error);\n    }.$asyncbind(this));\n  },\n  showResult: function showResult(result, _ref3) {\n    var query = _ref3.query;\n    var autoClose = this.options.autoClose;\n\n\n    var markers = Object.keys(this.markers._layers);\n    if (markers.length >= this.options.maxMarkers) {\n      this.markers.removeLayer(markers[0]);\n    }\n\n    var marker = this.addMarker(result, query);\n    this.centerMap(result);\n\n    this.map.fireEvent('geosearch/showlocation', {\n      location: result,\n      marker: marker\n    });\n\n    if (autoClose) {\n      this.closeResults();\n    }\n  },\n  closeResults: function closeResults() {\n    var container = this.searchElement.elements.container;\n\n\n    if (container.classList.contains('active')) {\n      (0, _domUtils.removeClassName)(container, 'active');\n    }\n\n    this.restoreHandlers();\n    this.clearResults();\n  },\n  addMarker: function addMarker(result, query) {\n    var _this4 = this;\n\n    var _options4 = this.options,\n        options = _options4.marker,\n        showPopup = _options4.showPopup,\n        popupFormat = _options4.popupFormat;\n\n    var marker = new L.Marker([result.y, result.x], options);\n    var popupLabel = result.label;\n\n    if (typeof popupFormat === 'function') {\n      popupLabel = popupFormat({ query: query, result: result });\n    }\n\n    marker.bindPopup(popupLabel);\n\n    this.markers.addLayer(marker);\n\n    if (showPopup) {\n      marker.openPopup();\n    }\n\n    if (options.draggable) {\n      marker.on('dragend', function (args) {\n        _this4.map.fireEvent('geosearch/marker/dragend', {\n          location: marker.getLatLng(),\n          event: args\n        });\n      });\n    }\n\n    return marker;\n  },\n  centerMap: function centerMap(result) {\n    var _options5 = this.options,\n        retainZoomLevel = _options5.retainZoomLevel,\n        animateZoom = _options5.animateZoom;\n\n\n    var resultBounds = new L.LatLngBounds(result.bounds);\n    var bounds = resultBounds.isValid() ? resultBounds : this.markers.getBounds();\n\n    if (!retainZoomLevel && resultBounds.isValid()) {\n      this.map.fitBounds(bounds, { animate: animateZoom });\n    } else {\n      this.map.setView(bounds.getCenter(), this.getZoom(), { animate: animateZoom });\n    }\n  },\n  getZoom: function getZoom() {\n    var _options6 = this.options,\n        retainZoomLevel = _options6.retainZoomLevel,\n        zoomLevel = _options6.zoomLevel;\n\n    return retainZoomLevel ? this.map.getZoom() : zoomLevel;\n  }\n};\n\nfunction LeafletControl() {\n  if (!L || !L.Control || !L.Control.extend) {\n    throw new Error('Leaflet must be loaded before instantiating the GeoSearch control');\n  }\n\n  var LControl = L.Control.extend(Control);\n\n  for (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {\n    options[_key] = arguments[_key];\n  }\n\n  return new (Function.prototype.bind.apply(LControl, [null].concat(options)))();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n")},function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process, setImmediate) {/* This code is based on:\nzousan - A Lightning Fast, Yet Very Small Promise A+ Compliant Implementation\nhttps://github.com/bluejava/zousan\nAuthor: Glenn Crownover <glenn@bluejava.com> (http://www.bluejava.com)\nVersion 2.3.3\nLicense: MIT */\n\nmodule.exports = function(tick){\n    tick = tick || (typeof process==="object" && process.nextTick) || (typeof setImmediate==="function" && setImmediate) || function(f){setTimeout(f,0)};\n    var soon = (function () {\n        var fq = [], fqStart = 0, bufferSize = 1024;\n        function callQueue() {\n            while (fq.length - fqStart) {\n                try { fq[fqStart]() } catch(ex) { /* console.error(ex) */ }\n                fq[fqStart++] = undefined;\n                if (fqStart === bufferSize) {\n                    fq.splice(0, bufferSize);\n                    fqStart = 0;\n                }\n            }\n        }\n\n        return function (fn) {\n            fq.push(fn);\n            if (fq.length - fqStart === 1)\n                tick(callQueue);\n        };\n    })();\n\n    function Zousan(func) {\n        if (func) {\n            var me = this;\n            func(function (arg) {\n                me.resolve(arg);\n            }, function (arg) {\n                me.reject(arg);\n            });\n        }\n    }\n\n    Zousan.prototype = {\n        resolve: function (value) {\n            if (this.state !== undefined)\n                return;\n            if (value === this)\n                return this.reject(new TypeError("Attempt to resolve promise with self"));\n            var me = this;\n            if (value && (typeof value === "function" || typeof value === "object")) {\n                try {\n                    var first = 0;\n                    var then = value.then;\n                    if (typeof then === "function") {\n                        then.call(value, function (ra) {\n                            if (!first++) {\n                                me.resolve(ra);\n                            }\n                        }, function (rr) {\n                            if (!first++) {\n                                me.reject(rr);\n                            }\n                        });\n                        return;\n                    }\n                } catch (e) {\n                    if (!first)\n                        this.reject(e);\n                    return;\n                }\n            }\n            this.state = STATE_FULFILLED;\n            this.v = value;\n            if (me.c)\n                soon(function () {\n                    for (var n = 0, l = me.c.length;n < l; n++)\n                        STATE_FULFILLED(me.c[n], value);\n                });\n        },\n        reject: function (reason) {\n            if (this.state !== undefined)\n                return;\n            this.state = STATE_REJECTED;\n            this.v = reason;\n            var clients = this.c;\n            if (clients)\n                soon(function () {\n                    for (var n = 0, l = clients.length;n < l; n++)\n                        STATE_REJECTED(clients[n], reason);\n                });\n        },\n        then: function (onF, onR) {\n            var p = new Zousan();\n            var client = {\n                y: onF,\n                n: onR,\n                p: p\n            };\n            if (this.state === undefined) {\n                if (this.c)\n                    this.c.push(client);\n                else\n                    this.c = [client];\n            } else {\n                var s = this.state, a = this.v;\n                soon(function () {\n                    s(client, a);\n                });\n            }\n            return p;\n        }\n    };\n\n    function STATE_FULFILLED(c, arg) {\n        if (typeof c.y === "function") {\n            try {\n                var yret = c.y.call(undefined, arg);\n                c.p.resolve(yret);\n            } catch (err) {\n                c.p.reject(err);\n            }\n        } else\n            c.p.resolve(arg);\n    }\n\n    function STATE_REJECTED(c, reason) {\n        if (typeof c.n === "function") {\n            try {\n                var yret = c.n.call(undefined, reason);\n                c.p.resolve(yret);\n            } catch (err) {\n                c.p.reject(err);\n            }\n        } else\n            c.p.reject(reason);\n    }\n\n    Zousan.resolve = function (val) {\n        if (val && (val instanceof Zousan))\n            return val ;\n        var z = new Zousan();\n        z.resolve(val);\n        return z;\n    };\n    Zousan.reject = function (err) {\n        if (err && (err instanceof Zousan))\n            return err ;\n        var z = new Zousan();\n        z.reject(err);\n        return z;\n    };\n\n    Zousan.version = "2.3.3-nodent" ;\n    return Zousan ;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11), __webpack_require__(21).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZW50LXJ1bnRpbWUvem91c2FuLmpzP2JkNzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBLHdJQUF3STtBQUN4STtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixnQkFBZ0IsWUFBWTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELE1BQU07QUFDMUQ7QUFDQSxpQkFBaUI7QUFDakIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsTUFBTTtBQUM3RDtBQUNBLGlCQUFpQjtBQUNqQixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgY29kZSBpcyBiYXNlZCBvbjpcbnpvdXNhbiAtIEEgTGlnaHRuaW5nIEZhc3QsIFlldCBWZXJ5IFNtYWxsIFByb21pc2UgQSsgQ29tcGxpYW50IEltcGxlbWVudGF0aW9uXG5odHRwczovL2dpdGh1Yi5jb20vYmx1ZWphdmEvem91c2FuXG5BdXRob3I6IEdsZW5uIENyb3dub3ZlciA8Z2xlbm5AYmx1ZWphdmEuY29tPiAoaHR0cDovL3d3dy5ibHVlamF2YS5jb20pXG5WZXJzaW9uIDIuMy4zXG5MaWNlbnNlOiBNSVQgKi9cblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0aWNrKXtcbiAgICB0aWNrID0gdGljayB8fCAodHlwZW9mIHByb2Nlc3M9PT1cIm9iamVjdFwiICYmIHByb2Nlc3MubmV4dFRpY2spIHx8ICh0eXBlb2Ygc2V0SW1tZWRpYXRlPT09XCJmdW5jdGlvblwiICYmIHNldEltbWVkaWF0ZSkgfHwgZnVuY3Rpb24oZil7c2V0VGltZW91dChmLDApfTtcbiAgICB2YXIgc29vbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBmcSA9IFtdLCBmcVN0YXJ0ID0gMCwgYnVmZmVyU2l6ZSA9IDEwMjQ7XG4gICAgICAgIGZ1bmN0aW9uIGNhbGxRdWV1ZSgpIHtcbiAgICAgICAgICAgIHdoaWxlIChmcS5sZW5ndGggLSBmcVN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgdHJ5IHsgZnFbZnFTdGFydF0oKSB9IGNhdGNoKGV4KSB7IC8qIGNvbnNvbGUuZXJyb3IoZXgpICovIH1cbiAgICAgICAgICAgICAgICBmcVtmcVN0YXJ0KytdID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGlmIChmcVN0YXJ0ID09PSBidWZmZXJTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIGZxLnNwbGljZSgwLCBidWZmZXJTaXplKTtcbiAgICAgICAgICAgICAgICAgICAgZnFTdGFydCA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChmbikge1xuICAgICAgICAgICAgZnEucHVzaChmbik7XG4gICAgICAgICAgICBpZiAoZnEubGVuZ3RoIC0gZnFTdGFydCA9PT0gMSlcbiAgICAgICAgICAgICAgICB0aWNrKGNhbGxRdWV1ZSk7XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIGZ1bmN0aW9uIFpvdXNhbihmdW5jKSB7XG4gICAgICAgIGlmIChmdW5jKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgZnVuYyhmdW5jdGlvbiAoYXJnKSB7XG4gICAgICAgICAgICAgICAgbWUucmVzb2x2ZShhcmcpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGFyZykge1xuICAgICAgICAgICAgICAgIG1lLnJlamVjdChhcmcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBab3VzYW4ucHJvdG90eXBlID0ge1xuICAgICAgICByZXNvbHZlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnN0YXRlICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB0aGlzKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlamVjdChuZXcgVHlwZUVycm9yKFwiQXR0ZW1wdCB0byByZXNvbHZlIHByb21pc2Ugd2l0aCBzZWxmXCIpKTtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICBpZiAodmFsdWUgJiYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIikpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSAwO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGhlbiA9IHZhbHVlLnRoZW47XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGZ1bmN0aW9uIChyYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZmlyc3QrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5yZXNvbHZlKHJhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAocnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWZpcnN0KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUucmVqZWN0KHJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaXJzdClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVqZWN0KGUpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFNUQVRFX0ZVTEZJTExFRDtcbiAgICAgICAgICAgIHRoaXMudiA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKG1lLmMpXG4gICAgICAgICAgICAgICAgc29vbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG4gPSAwLCBsID0gbWUuYy5sZW5ndGg7biA8IGw7IG4rKylcbiAgICAgICAgICAgICAgICAgICAgICAgIFNUQVRFX0ZVTEZJTExFRChtZS5jW25dLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlamVjdDogZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gU1RBVEVfUkVKRUNURUQ7XG4gICAgICAgICAgICB0aGlzLnYgPSByZWFzb247XG4gICAgICAgICAgICB2YXIgY2xpZW50cyA9IHRoaXMuYztcbiAgICAgICAgICAgIGlmIChjbGllbnRzKVxuICAgICAgICAgICAgICAgIHNvb24oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBuID0gMCwgbCA9IGNsaWVudHMubGVuZ3RoO24gPCBsOyBuKyspXG4gICAgICAgICAgICAgICAgICAgICAgICBTVEFURV9SRUpFQ1RFRChjbGllbnRzW25dLCByZWFzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICB0aGVuOiBmdW5jdGlvbiAob25GLCBvblIpIHtcbiAgICAgICAgICAgIHZhciBwID0gbmV3IFpvdXNhbigpO1xuICAgICAgICAgICAgdmFyIGNsaWVudCA9IHtcbiAgICAgICAgICAgICAgICB5OiBvbkYsXG4gICAgICAgICAgICAgICAgbjogb25SLFxuICAgICAgICAgICAgICAgIHA6IHBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAodGhpcy5zdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYylcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jLnB1c2goY2xpZW50KTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYyA9IFtjbGllbnRdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcyA9IHRoaXMuc3RhdGUsIGEgPSB0aGlzLnY7XG4gICAgICAgICAgICAgICAgc29vbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHMoY2xpZW50LCBhKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIFNUQVRFX0ZVTEZJTExFRChjLCBhcmcpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjLnkgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB2YXIgeXJldCA9IGMueS5jYWxsKHVuZGVmaW5lZCwgYXJnKTtcbiAgICAgICAgICAgICAgICBjLnAucmVzb2x2ZSh5cmV0KTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGMucC5yZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBjLnAucmVzb2x2ZShhcmcpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIFNUQVRFX1JFSkVDVEVEKGMsIHJlYXNvbikge1xuICAgICAgICBpZiAodHlwZW9mIGMubiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciB5cmV0ID0gYy5uLmNhbGwodW5kZWZpbmVkLCByZWFzb24pO1xuICAgICAgICAgICAgICAgIGMucC5yZXNvbHZlKHlyZXQpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgYy5wLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgIGMucC5yZWplY3QocmVhc29uKTtcbiAgICB9XG5cbiAgICBab3VzYW4ucmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgaWYgKHZhbCAmJiAodmFsIGluc3RhbmNlb2YgWm91c2FuKSlcbiAgICAgICAgICAgIHJldHVybiB2YWwgO1xuICAgICAgICB2YXIgeiA9IG5ldyBab3VzYW4oKTtcbiAgICAgICAgei5yZXNvbHZlKHZhbCk7XG4gICAgICAgIHJldHVybiB6O1xuICAgIH07XG4gICAgWm91c2FuLnJlamVjdCA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgaWYgKGVyciAmJiAoZXJyIGluc3RhbmNlb2YgWm91c2FuKSlcbiAgICAgICAgICAgIHJldHVybiBlcnIgO1xuICAgICAgICB2YXIgeiA9IG5ldyBab3VzYW4oKTtcbiAgICAgICAgei5yZWplY3QoZXJyKTtcbiAgICAgICAgcmV0dXJuIHo7XG4gICAgfTtcblxuICAgIFpvdXNhbi52ZXJzaW9uID0gXCIyLjMuMy1ub2RlbnRcIiA7XG4gICAgcmV0dXJuIFpvdXNhbiA7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||\n            (typeof self !== "undefined" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(22);\n// On some exotic environments, it\'s not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||\n                       (typeof global !== "undefined" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||\n                         (typeof global !== "undefined" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(7)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcz81MTE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxtQkFBTyxDQUFDLEVBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHNjb3BlID0gKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsKSB8fFxuICAgICAgICAgICAgKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYpIHx8XG4gICAgICAgICAgICB3aW5kb3c7XG52YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCBzY29wZSwgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbChzY29wZSwgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG4vLyBPbiBzb21lIGV4b3RpYyBlbnZpcm9ubWVudHMsIGl0J3Mgbm90IGNsZWFyIHdoaWNoIG9iamVjdCBgc2V0aW1tZWRpYXRlYCB3YXNcbi8vIGFibGUgdG8gaW5zdGFsbCBvbnRvLiAgU2VhcmNoIGVhY2ggcG9zc2liaWxpdHkgaW4gdGhlIHNhbWUgb3JkZXIgYXMgdGhlXG4vLyBgc2V0aW1tZWRpYXRlYCBsaWJyYXJ5LlxuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5zZXRJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuc2V0SW1tZWRpYXRlKTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgJiYgc2VsZi5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5jbGVhckltbWVkaWF0ZSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(7), __webpack_require__(11)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n')},function(module,exports){eval('module.exports = function() {\n    function isThenable(obj) {\n        return obj && (obj instanceof Object) && typeof obj.then==="function";\n    }\n\n    function resolution(p,r,how) {\n        try {\n            /* 2.2.7.1 */\n            var x = how ? how(r):r ;\n\n            if (p===x) /* 2.3.1 */\n                return p.reject(new TypeError("Promise resolution loop")) ;\n\n            if (isThenable(x)) {\n                /* 2.3.3 */\n                x.then(function(y){\n                    resolution(p,y);\n                },function(e){\n                    p.reject(e)\n                }) ;\n            } else {\n                p.resolve(x) ;\n            }\n        } catch (ex) {\n            /* 2.2.7.2 */\n            p.reject(ex) ;\n        }\n    }\n\n    function _unchained(v){}\n    function thenChain(res,rej){\n        this.resolve = res;\n        this.reject = rej;\n    }\n\n    function Chained() {};\n    Chained.prototype = {\n        resolve:_unchained,\n        reject:_unchained,\n        then:thenChain\n    };\n    \n    function then(res,rej){\n        var chain = new Chained() ;\n        try {\n            this._resolver(function(value) {\n                return isThenable(value) ? value.then(res,rej) : resolution(chain,value,res);\n            },function(ex) {\n                resolution(chain,ex,rej) ;\n            }) ;\n        } catch (ex) {\n            resolution(chain,ex,rej);\n        }\n        return chain ;\n    }\n\n    function Thenable(resolver) {\n        this._resolver = resolver ;\n        this.then = then ;\n    };\n\n    Thenable.resolve = function(v){\n        return Thenable.isThenable(v) ? v : {then:function(resolve){return resolve(v)}};\n    };\n\n    Thenable.isThenable = isThenable ;\n\n    return Thenable ;\n} ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZW50LXJ1bnRpbWUvdGhlbmFibGVGYWN0b3J5LmpzPzBhYjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2Qyx1QkFBdUI7QUFDcEU7O0FBRUE7O0FBRUE7QUFDQSxDQUFDIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgICBmdW5jdGlvbiBpc1RoZW5hYmxlKG9iaikge1xuICAgICAgICByZXR1cm4gb2JqICYmIChvYmogaW5zdGFuY2VvZiBPYmplY3QpICYmIHR5cGVvZiBvYmoudGhlbj09PVwiZnVuY3Rpb25cIjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZXNvbHV0aW9uKHAscixob3cpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8qIDIuMi43LjEgKi9cbiAgICAgICAgICAgIHZhciB4ID0gaG93ID8gaG93KHIpOnIgO1xuXG4gICAgICAgICAgICBpZiAocD09PXgpIC8qIDIuMy4xICovXG4gICAgICAgICAgICAgICAgcmV0dXJuIHAucmVqZWN0KG5ldyBUeXBlRXJyb3IoXCJQcm9taXNlIHJlc29sdXRpb24gbG9vcFwiKSkgO1xuXG4gICAgICAgICAgICBpZiAoaXNUaGVuYWJsZSh4KSkge1xuICAgICAgICAgICAgICAgIC8qIDIuMy4zICovXG4gICAgICAgICAgICAgICAgeC50aGVuKGZ1bmN0aW9uKHkpe1xuICAgICAgICAgICAgICAgICAgICByZXNvbHV0aW9uKHAseSk7XG4gICAgICAgICAgICAgICAgfSxmdW5jdGlvbihlKXtcbiAgICAgICAgICAgICAgICAgICAgcC5yZWplY3QoZSlcbiAgICAgICAgICAgICAgICB9KSA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHAucmVzb2x2ZSh4KSA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAvKiAyLjIuNy4yICovXG4gICAgICAgICAgICBwLnJlamVjdChleCkgO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX3VuY2hhaW5lZCh2KXt9XG4gICAgZnVuY3Rpb24gdGhlbkNoYWluKHJlcyxyZWope1xuICAgICAgICB0aGlzLnJlc29sdmUgPSByZXM7XG4gICAgICAgIHRoaXMucmVqZWN0ID0gcmVqO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIENoYWluZWQoKSB7fTtcbiAgICBDaGFpbmVkLnByb3RvdHlwZSA9IHtcbiAgICAgICAgcmVzb2x2ZTpfdW5jaGFpbmVkLFxuICAgICAgICByZWplY3Q6X3VuY2hhaW5lZCxcbiAgICAgICAgdGhlbjp0aGVuQ2hhaW5cbiAgICB9O1xuICAgIFxuICAgIGZ1bmN0aW9uIHRoZW4ocmVzLHJlail7XG4gICAgICAgIHZhciBjaGFpbiA9IG5ldyBDaGFpbmVkKCkgO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5fcmVzb2x2ZXIoZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNUaGVuYWJsZSh2YWx1ZSkgPyB2YWx1ZS50aGVuKHJlcyxyZWopIDogcmVzb2x1dGlvbihjaGFpbix2YWx1ZSxyZXMpO1xuICAgICAgICAgICAgfSxmdW5jdGlvbihleCkge1xuICAgICAgICAgICAgICAgIHJlc29sdXRpb24oY2hhaW4sZXgscmVqKSA7XG4gICAgICAgICAgICB9KSA7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICByZXNvbHV0aW9uKGNoYWluLGV4LHJlaik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoYWluIDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBUaGVuYWJsZShyZXNvbHZlcikge1xuICAgICAgICB0aGlzLl9yZXNvbHZlciA9IHJlc29sdmVyIDtcbiAgICAgICAgdGhpcy50aGVuID0gdGhlbiA7XG4gICAgfTtcblxuICAgIFRoZW5hYmxlLnJlc29sdmUgPSBmdW5jdGlvbih2KXtcbiAgICAgICAgcmV0dXJuIFRoZW5hYmxlLmlzVGhlbmFibGUodikgPyB2IDoge3RoZW46ZnVuY3Rpb24ocmVzb2x2ZSl7cmV0dXJuIHJlc29sdmUodil9fTtcbiAgICB9O1xuXG4gICAgVGhlbmFibGUuaXNUaGVuYWJsZSA9IGlzVGhlbmFibGUgO1xuXG4gICAgcmV0dXJuIFRoZW5hYmxlIDtcbn0gO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(7)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _domUtils = __webpack_require__(6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cx = function cx() {\n  for (var _len = arguments.length, classnames = Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.join(' ').trim();\n};\n\nvar ResultList = function () {\n  function ResultList() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$handleClick = _ref.handleClick,\n        handleClick = _ref$handleClick === undefined ? function () {} : _ref$handleClick,\n        _ref$classNames = _ref.classNames,\n        classNames = _ref$classNames === undefined ? {} : _ref$classNames;\n\n    _classCallCheck(this, ResultList);\n\n    _initialiseProps.call(this);\n\n    this.props = { handleClick: handleClick, classNames: classNames };\n    this.selected = -1;\n\n    var container = (0, _domUtils.createElement)('div', cx('results', classNames.container));\n    var resultItem = (0, _domUtils.createElement)('div', cx(classNames.item));\n\n    container.addEventListener('click', this.onClick, true);\n    this.elements = { container: container, resultItem: resultItem };\n  }\n\n  _createClass(ResultList, [{\n    key: 'render',\n    value: function render() {\n      var results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _elements = this.elements,\n          container = _elements.container,\n          resultItem = _elements.resultItem;\n\n      this.clear();\n\n      results.forEach(function (result, idx) {\n        var child = resultItem.cloneNode(true);\n        child.setAttribute('data-key', idx);\n        child.innerHTML = result.label;\n        container.appendChild(child);\n      });\n\n      if (results.length > 0) {\n        (0, _domUtils.addClassName)(container, 'active');\n      }\n\n      this.results = results;\n    }\n  }, {\n    key: 'select',\n    value: function select(index) {\n      var container = this.elements.container;\n\n      // eslint-disable-next-line no-confusing-arrow\n\n      Array.from(container.children).forEach(function (child, idx) {\n        return idx === index ? (0, _domUtils.addClassName)(child, 'active') : (0, _domUtils.removeClassName)(child, 'active');\n      });\n\n      this.selected = index;\n      return this.results[index];\n    }\n  }, {\n    key: 'count',\n    value: function count() {\n      return this.results ? this.results.length : 0;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      var container = this.elements.container;\n\n      this.selected = -1;\n\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n\n      (0, _domUtils.removeClassName)(container, 'active');\n    }\n  }]);\n\n  return ResultList;\n}();\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.onClick = function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        target = _ref2.target;\n\n    var handleClick = _this.props.handleClick;\n    var container = _this.elements.container;\n\n\n    if (target.parentNode !== container || !target.hasAttribute('data-key')) {\n      return;\n    }\n\n    var idx = target.getAttribute('data-key');\n    var result = _this.results[idx];\n    handleClick({ result: result });\n  };\n};\n\nexports.default = ResultList;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3Jlc3VsdExpc3QuanM/YjUxOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxnQ0FBZ0MsMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUUsRUFBRSx5REFBeUQscUVBQXFFLDZEQUE2RCxvQkFBb0IsR0FBRyxFQUFFOztBQUVqakIsZ0JBQWdCLG1CQUFPLENBQUMsQ0FBWTs7QUFFcEMsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdko7QUFDQSx1RUFBdUUsYUFBYTtBQUNwRjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFGQUFxRjtBQUNyRjtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBLHVEQUF1RDs7QUFFdkQ7O0FBRUE7O0FBRUEsa0JBQWtCO0FBQ2xCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0Esc0ZBQXNGO0FBQ3RGOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBOztBQUVBIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2RvbVV0aWxzID0gcmVxdWlyZSgnLi9kb21VdGlscycpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgY3ggPSBmdW5jdGlvbiBjeCgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuam9pbignICcpLnRyaW0oKTtcbn07XG5cbnZhciBSZXN1bHRMaXN0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBSZXN1bHRMaXN0KCkge1xuICAgIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fSxcbiAgICAgICAgX3JlZiRoYW5kbGVDbGljayA9IF9yZWYuaGFuZGxlQ2xpY2ssXG4gICAgICAgIGhhbmRsZUNsaWNrID0gX3JlZiRoYW5kbGVDbGljayA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKCkge30gOiBfcmVmJGhhbmRsZUNsaWNrLFxuICAgICAgICBfcmVmJGNsYXNzTmFtZXMgPSBfcmVmLmNsYXNzTmFtZXMsXG4gICAgICAgIGNsYXNzTmFtZXMgPSBfcmVmJGNsYXNzTmFtZXMgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiRjbGFzc05hbWVzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlc3VsdExpc3QpO1xuXG4gICAgX2luaXRpYWxpc2VQcm9wcy5jYWxsKHRoaXMpO1xuXG4gICAgdGhpcy5wcm9wcyA9IHsgaGFuZGxlQ2xpY2s6IGhhbmRsZUNsaWNrLCBjbGFzc05hbWVzOiBjbGFzc05hbWVzIH07XG4gICAgdGhpcy5zZWxlY3RlZCA9IC0xO1xuXG4gICAgdmFyIGNvbnRhaW5lciA9ICgwLCBfZG9tVXRpbHMuY3JlYXRlRWxlbWVudCkoJ2RpdicsIGN4KCdyZXN1bHRzJywgY2xhc3NOYW1lcy5jb250YWluZXIpKTtcbiAgICB2YXIgcmVzdWx0SXRlbSA9ICgwLCBfZG9tVXRpbHMuY3JlYXRlRWxlbWVudCkoJ2RpdicsIGN4KGNsYXNzTmFtZXMuaXRlbSkpO1xuXG4gICAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkNsaWNrLCB0cnVlKTtcbiAgICB0aGlzLmVsZW1lbnRzID0geyBjb250YWluZXI6IGNvbnRhaW5lciwgcmVzdWx0SXRlbTogcmVzdWx0SXRlbSB9O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlc3VsdExpc3QsIFt7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIHJlc3VsdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgICAgdmFyIF9lbGVtZW50cyA9IHRoaXMuZWxlbWVudHMsXG4gICAgICAgICAgY29udGFpbmVyID0gX2VsZW1lbnRzLmNvbnRhaW5lcixcbiAgICAgICAgICByZXN1bHRJdGVtID0gX2VsZW1lbnRzLnJlc3VsdEl0ZW07XG5cbiAgICAgIHRoaXMuY2xlYXIoKTtcblxuICAgICAgcmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQsIGlkeCkge1xuICAgICAgICB2YXIgY2hpbGQgPSByZXN1bHRJdGVtLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdkYXRhLWtleScsIGlkeCk7XG4gICAgICAgIGNoaWxkLmlubmVySFRNTCA9IHJlc3VsdC5sYWJlbDtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzdWx0cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICgwLCBfZG9tVXRpbHMuYWRkQ2xhc3NOYW1lKShjb250YWluZXIsICdhY3RpdmUnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZXN1bHRzID0gcmVzdWx0cztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZWxlY3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWxlY3QoaW5kZXgpIHtcbiAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLmVsZW1lbnRzLmNvbnRhaW5lcjtcblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbmZ1c2luZy1hcnJvd1xuXG4gICAgICBBcnJheS5mcm9tKGNvbnRhaW5lci5jaGlsZHJlbikuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQsIGlkeCkge1xuICAgICAgICByZXR1cm4gaWR4ID09PSBpbmRleCA/ICgwLCBfZG9tVXRpbHMuYWRkQ2xhc3NOYW1lKShjaGlsZCwgJ2FjdGl2ZScpIDogKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKGNoaWxkLCAnYWN0aXZlJyk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5zZWxlY3RlZCA9IGluZGV4O1xuICAgICAgcmV0dXJuIHRoaXMucmVzdWx0c1tpbmRleF07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY291bnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb3VudCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlc3VsdHMgPyB0aGlzLnJlc3VsdHMubGVuZ3RoIDogMDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbGVhcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuZWxlbWVudHMuY29udGFpbmVyO1xuXG4gICAgICB0aGlzLnNlbGVjdGVkID0gLTE7XG5cbiAgICAgIHdoaWxlIChjb250YWluZXIubGFzdENoaWxkKSB7XG4gICAgICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIubGFzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgKDAsIF9kb21VdGlscy5yZW1vdmVDbGFzc05hbWUpKGNvbnRhaW5lciwgJ2FjdGl2ZScpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZXN1bHRMaXN0O1xufSgpO1xuXG52YXIgX2luaXRpYWxpc2VQcm9wcyA9IGZ1bmN0aW9uIF9pbml0aWFsaXNlUHJvcHMoKSB7XG4gIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgdGhpcy5vbkNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmMiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sXG4gICAgICAgIHRhcmdldCA9IF9yZWYyLnRhcmdldDtcblxuICAgIHZhciBoYW5kbGVDbGljayA9IF90aGlzLnByb3BzLmhhbmRsZUNsaWNrO1xuICAgIHZhciBjb250YWluZXIgPSBfdGhpcy5lbGVtZW50cy5jb250YWluZXI7XG5cblxuICAgIGlmICh0YXJnZXQucGFyZW50Tm9kZSAhPT0gY29udGFpbmVyIHx8ICF0YXJnZXQuaGFzQXR0cmlidXRlKCdkYXRhLWtleScpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGlkeCA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEta2V5Jyk7XG4gICAgdmFyIHJlc3VsdCA9IF90aGlzLnJlc3VsdHNbaWR4XTtcbiAgICBoYW5kbGVDbGljayh7IHJlc3VsdDogcmVzdWx0IH0pO1xuICB9O1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gUmVzdWx0TGlzdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nodentRuntime = __webpack_require__(3);\n\nvar _nodentRuntime2 = _interopRequireDefault(_nodentRuntime);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _provider = __webpack_require__(4);\n\nvar _provider2 = _interopRequireDefault(_provider);\n\nvar _domUtils = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Provider = function (_BaseProvider) {\n  _inherits(Provider, _BaseProvider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n  }\n\n  _createClass(Provider, [{\n    key: 'endpoint',\n    value: function endpoint() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          protocol = _ref.protocol,\n          jsonp = _ref.jsonp;\n\n      var params = this.options.params;\n\n\n      var paramString = this.getParamString(_extends({}, params, {\n        query: query,\n        jsonp: jsonp\n      }));\n\n      return protocol + '//dev.virtualearth.net/REST/v1/Locations?' + paramString;\n    }\n  }, {\n    key: 'parse',\n    value: function parse(_ref2) {\n      var data = _ref2.data;\n\n      if (data.resourceSets.length === 0) {\n        return [];\n      }\n\n      return data.resourceSets[0].resources.map(function (r) {\n        return {\n          x: r.point.coordinates[1],\n          y: r.point.coordinates[0],\n          label: r.address.formattedAddress,\n          bounds: [[r.bbox[0], r.bbox[1]], // s, w\n          [r.bbox[2], r.bbox[3]]],\n          raw: r\n        };\n      });\n    }\n  }, {\n    key: 'search',\n    value: function search(_ref3) {\n      return new Promise(function ($return, $error) {\n        var query, protocol, jsonp, url, json;\n        query = _ref3.query;\n\n        protocol = ~location.protocol.indexOf('http') ? location.protocol : 'https:';\n\n        jsonp = 'BING_JSONP_CB_' + Date.now();\n        url = this.endpoint({ query: query, protocol: protocol, jsonp: jsonp });\n\n        return (0, _domUtils.createScriptElement)(url, jsonp).then(function ($await_1) {\n          json = $await_1;\n          return $return(this.parse({ data: json }));\n        }.$asyncbind(this, $error), $error);\n      }.$asyncbind(this));\n    }\n  }]);\n\n  return Provider;\n}(_provider2.default);\n\nexports.default = Provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3Byb3ZpZGVycy9iaW5nUHJvdmlkZXIuanM/YmNmOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxxQkFBcUIsbUJBQU8sQ0FBQyxDQUFnQjs7QUFFN0M7O0FBRUEsbURBQW1ELGdCQUFnQixzQkFBc0IsT0FBTywyQkFBMkIsMEJBQTBCLHlEQUF5RCwyQkFBMkIsRUFBRSxFQUFFLEVBQUUsZUFBZTs7QUFFOVAsZ0NBQWdDLDJDQUEyQyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVELDJEQUEyRCxFQUFFLEVBQUUseURBQXlELHFFQUFxRSw2REFBNkQsb0JBQW9CLEdBQUcsRUFBRTs7QUFFampCLGdCQUFnQixtQkFBTyxDQUFDLENBQVk7O0FBRXBDOztBQUVBLGdCQUFnQixtQkFBTyxDQUFDLENBQWE7O0FBRXJDLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SixpREFBaUQsYUFBYSx1RkFBdUYsRUFBRSx1RkFBdUY7O0FBRTlPLDBDQUEwQywrREFBK0QscUdBQXFHLEVBQUUseUVBQXlFLGVBQWUseUVBQXlFLEVBQUUsRUFBRSx1SEFBdUg7O0FBRTVlO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVGQUF1RjtBQUN2RjtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSw2QkFBNkIsaURBQWlEOztBQUU5RTtBQUNBO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEIiwiZmlsZSI6IjI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX25vZGVudFJ1bnRpbWUgPSByZXF1aXJlKCdub2RlbnQtcnVudGltZScpO1xuXG52YXIgX25vZGVudFJ1bnRpbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbm9kZW50UnVudGltZSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcHJvdmlkZXIgPSByZXF1aXJlKCcuL3Byb3ZpZGVyJyk7XG5cbnZhciBfcHJvdmlkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvdmlkZXIpO1xuXG52YXIgX2RvbVV0aWxzID0gcmVxdWlyZSgnLi4vZG9tVXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0Jhc2VQcm92aWRlcikge1xuICBfaW5oZXJpdHMoUHJvdmlkZXIsIF9CYXNlUHJvdmlkZXIpO1xuXG4gIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm92aWRlcik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFByb3ZpZGVyLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUHJvdmlkZXIpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQcm92aWRlciwgW3tcbiAgICBrZXk6ICdlbmRwb2ludCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVuZHBvaW50KCkge1xuICAgICAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgICAgIHF1ZXJ5ID0gX3JlZi5xdWVyeSxcbiAgICAgICAgICBwcm90b2NvbCA9IF9yZWYucHJvdG9jb2wsXG4gICAgICAgICAganNvbnAgPSBfcmVmLmpzb25wO1xuXG4gICAgICB2YXIgcGFyYW1zID0gdGhpcy5vcHRpb25zLnBhcmFtcztcblxuXG4gICAgICB2YXIgcGFyYW1TdHJpbmcgPSB0aGlzLmdldFBhcmFtU3RyaW5nKF9leHRlbmRzKHt9LCBwYXJhbXMsIHtcbiAgICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgICBqc29ucDoganNvbnBcbiAgICAgIH0pKTtcblxuICAgICAgcmV0dXJuIHByb3RvY29sICsgJy8vZGV2LnZpcnR1YWxlYXJ0aC5uZXQvUkVTVC92MS9Mb2NhdGlvbnM/JyArIHBhcmFtU3RyaW5nO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3BhcnNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGFyc2UoX3JlZjIpIHtcbiAgICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YTtcblxuICAgICAgaWYgKGRhdGEucmVzb3VyY2VTZXRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkYXRhLnJlc291cmNlU2V0c1swXS5yZXNvdXJjZXMubWFwKGZ1bmN0aW9uIChyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgeDogci5wb2ludC5jb29yZGluYXRlc1sxXSxcbiAgICAgICAgICB5OiByLnBvaW50LmNvb3JkaW5hdGVzWzBdLFxuICAgICAgICAgIGxhYmVsOiByLmFkZHJlc3MuZm9ybWF0dGVkQWRkcmVzcyxcbiAgICAgICAgICBib3VuZHM6IFtbci5iYm94WzBdLCByLmJib3hbMV1dLCAvLyBzLCB3XG4gICAgICAgICAgW3IuYmJveFsyXSwgci5iYm94WzNdXV0sXG4gICAgICAgICAgcmF3OiByXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZWFyY2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWFyY2goX3JlZjMpIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoJHJldHVybiwgJGVycm9yKSB7XG4gICAgICAgIHZhciBxdWVyeSwgcHJvdG9jb2wsIGpzb25wLCB1cmwsIGpzb247XG4gICAgICAgIHF1ZXJ5ID0gX3JlZjMucXVlcnk7XG5cbiAgICAgICAgcHJvdG9jb2wgPSB+bG9jYXRpb24ucHJvdG9jb2wuaW5kZXhPZignaHR0cCcpID8gbG9jYXRpb24ucHJvdG9jb2wgOiAnaHR0cHM6JztcblxuICAgICAgICBqc29ucCA9ICdCSU5HX0pTT05QX0NCXycgKyBEYXRlLm5vdygpO1xuICAgICAgICB1cmwgPSB0aGlzLmVuZHBvaW50KHsgcXVlcnk6IHF1ZXJ5LCBwcm90b2NvbDogcHJvdG9jb2wsIGpzb25wOiBqc29ucCB9KTtcblxuICAgICAgICByZXR1cm4gKDAsIF9kb21VdGlscy5jcmVhdGVTY3JpcHRFbGVtZW50KSh1cmwsIGpzb25wKS50aGVuKGZ1bmN0aW9uICgkYXdhaXRfMSkge1xuICAgICAgICAgIGpzb24gPSAkYXdhaXRfMTtcbiAgICAgICAgICByZXR1cm4gJHJldHVybih0aGlzLnBhcnNlKHsgZGF0YToganNvbiB9KSk7XG4gICAgICAgIH0uJGFzeW5jYmluZCh0aGlzLCAkZXJyb3IpLCAkZXJyb3IpO1xuICAgICAgfS4kYXN5bmNiaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUHJvdmlkZXI7XG59KF9wcm92aWRlcjIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFByb3ZpZGVyOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _provider = __webpack_require__(4);\n\nvar _provider2 = _interopRequireDefault(_provider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Provider = function (_BaseProvider) {\n  _inherits(Provider, _BaseProvider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n  }\n\n  _createClass(Provider, [{\n    key: \'endpoint\',\n    value: function endpoint() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          protocol = _ref.protocol;\n\n      var params = this.options.params;\n\n\n      var paramString = this.getParamString(_extends({}, params, {\n        f: \'json\',\n        text: query\n      }));\n\n      return protocol + \'//geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/find?\' + paramString;\n    }\n  }, {\n    key: \'parse\',\n    value: function parse(_ref2) {\n      var data = _ref2.data;\n\n      return data.locations.map(function (r) {\n        return {\n          x: r.feature.geometry.x,\n          y: r.feature.geometry.y,\n          label: r.name,\n          bounds: [[r.extent.ymin, r.extent.xmin], // s, w\n          [r.extent.ymax, r.extent.xmax]],\n          raw: r\n        };\n      });\n    }\n  }]);\n\n  return Provider;\n}(_provider2.default);\n\nexports.default = Provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3Byb3ZpZGVycy9lc3JpUHJvdmlkZXIuanM/MDlkMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UCxnQ0FBZ0MsMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUUsRUFBRSx5REFBeUQscUVBQXFFLDZEQUE2RCxvQkFBb0IsR0FBRyxFQUFFOztBQUVqakIsZ0JBQWdCLG1CQUFPLENBQUMsQ0FBWTs7QUFFcEM7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGLGlEQUFpRCwwQ0FBMEMsMERBQTBELEVBQUU7O0FBRXZKLGlEQUFpRCxhQUFhLHVGQUF1RixFQUFFLHVGQUF1Rjs7QUFFOU8sMENBQTBDLCtEQUErRCxxR0FBcUcsRUFBRSx5RUFBeUUsZUFBZSx5RUFBeUUsRUFBRSxFQUFFLHVIQUF1SDs7QUFFNWU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsdUZBQXVGO0FBQ3ZGO0FBQ0E7O0FBRUE7OztBQUdBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9wcm92aWRlciA9IHJlcXVpcmUoJy4vcHJvdmlkZXInKTtcblxudmFyIF9wcm92aWRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm92aWRlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFByb3ZpZGVyID0gZnVuY3Rpb24gKF9CYXNlUHJvdmlkZXIpIHtcbiAgX2luaGVyaXRzKFByb3ZpZGVyLCBfQmFzZVByb3ZpZGVyKTtcblxuICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChQcm92aWRlci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFByb3ZpZGVyKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUHJvdmlkZXIsIFt7XG4gICAga2V5OiAnZW5kcG9pbnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbmRwb2ludCgpIHtcbiAgICAgIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fSxcbiAgICAgICAgICBxdWVyeSA9IF9yZWYucXVlcnksXG4gICAgICAgICAgcHJvdG9jb2wgPSBfcmVmLnByb3RvY29sO1xuXG4gICAgICB2YXIgcGFyYW1zID0gdGhpcy5vcHRpb25zLnBhcmFtcztcblxuXG4gICAgICB2YXIgcGFyYW1TdHJpbmcgPSB0aGlzLmdldFBhcmFtU3RyaW5nKF9leHRlbmRzKHt9LCBwYXJhbXMsIHtcbiAgICAgICAgZjogJ2pzb24nLFxuICAgICAgICB0ZXh0OiBxdWVyeVxuICAgICAgfSkpO1xuXG4gICAgICByZXR1cm4gcHJvdG9jb2wgKyAnLy9nZW9jb2RlLmFyY2dpcy5jb20vYXJjZ2lzL3Jlc3Qvc2VydmljZXMvV29ybGQvR2VvY29kZVNlcnZlci9maW5kPycgKyBwYXJhbVN0cmluZztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwYXJzZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKF9yZWYyKSB7XG4gICAgICB2YXIgZGF0YSA9IF9yZWYyLmRhdGE7XG5cbiAgICAgIHJldHVybiBkYXRhLmxvY2F0aW9ucy5tYXAoZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiByLmZlYXR1cmUuZ2VvbWV0cnkueCxcbiAgICAgICAgICB5OiByLmZlYXR1cmUuZ2VvbWV0cnkueSxcbiAgICAgICAgICBsYWJlbDogci5uYW1lLFxuICAgICAgICAgIGJvdW5kczogW1tyLmV4dGVudC55bWluLCByLmV4dGVudC54bWluXSwgLy8gcywgd1xuICAgICAgICAgIFtyLmV4dGVudC55bWF4LCByLmV4dGVudC54bWF4XV0sXG4gICAgICAgICAgcmF3OiByXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUHJvdmlkZXI7XG59KF9wcm92aWRlcjIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFByb3ZpZGVyOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _provider = __webpack_require__(4);\n\nvar _provider2 = _interopRequireDefault(_provider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Provider = function (_BaseProvider) {\n  _inherits(Provider, _BaseProvider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n  }\n\n  _createClass(Provider, [{\n    key: \'endpoint\',\n    value: function endpoint() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query,\n          protocol = _ref.protocol;\n\n      var params = this.options.params;\n\n\n      var paramString = this.getParamString(_extends({}, params, {\n        address: query\n      }));\n\n      // google requires a secure connection when using api keys\n      var proto = params && params.key ? \'https:\' : protocol;\n      return proto + \'//maps.googleapis.com/maps/api/geocode/json?\' + paramString;\n    }\n  }, {\n    key: \'parse\',\n    value: function parse(_ref2) {\n      var data = _ref2.data;\n\n      return data.results.map(function (r) {\n        return {\n          x: r.geometry.location.lng,\n          y: r.geometry.location.lat,\n          label: r.formatted_address,\n          bounds: [[r.geometry.viewport.southwest.lat, r.geometry.viewport.southwest.lng], // s, w\n          [r.geometry.viewport.northeast.lat, r.geometry.viewport.northeast.lng]],\n          raw: r\n        };\n      });\n    }\n  }]);\n\n  return Provider;\n}(_provider2.default);\n\nexports.default = Provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGVhZmxldC1nZW9zZWFyY2gvbGliL3Byb3ZpZGVycy9nb29nbGVQcm92aWRlci5qcz9mZWQ1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDOztBQUVELG1EQUFtRCxnQkFBZ0Isc0JBQXNCLE9BQU8sMkJBQTJCLDBCQUEwQix5REFBeUQsMkJBQTJCLEVBQUUsRUFBRSxFQUFFLGVBQWU7O0FBRTlQLGdDQUFnQywyQ0FBMkMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RCwyREFBMkQsRUFBRSxFQUFFLHlEQUF5RCxxRUFBcUUsNkRBQTZELG9CQUFvQixHQUFHLEVBQUU7O0FBRWpqQixnQkFBZ0IsbUJBQU8sQ0FBQyxDQUFZOztBQUVwQzs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0YsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosaURBQWlELGFBQWEsdUZBQXVGLEVBQUUsdUZBQXVGOztBQUU5TywwQ0FBMEMsK0RBQStELHFHQUFxRyxFQUFFLHlFQUF5RSxlQUFlLHlFQUF5RSxFQUFFLEVBQUUsdUhBQXVIOztBQUU1ZTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUY7QUFDdkY7QUFDQTs7QUFFQTs7O0FBR0EsdURBQXVEO0FBQ3ZEO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcHJvdmlkZXIgPSByZXF1aXJlKCcuL3Byb3ZpZGVyJyk7XG5cbnZhciBfcHJvdmlkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvdmlkZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBQcm92aWRlciA9IGZ1bmN0aW9uIChfQmFzZVByb3ZpZGVyKSB7XG4gIF9pbmhlcml0cyhQcm92aWRlciwgX0Jhc2VQcm92aWRlcik7XG5cbiAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByb3ZpZGVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoUHJvdmlkZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihQcm92aWRlcikpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFByb3ZpZGVyLCBbe1xuICAgIGtleTogJ2VuZHBvaW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW5kcG9pbnQoKSB7XG4gICAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge30sXG4gICAgICAgICAgcXVlcnkgPSBfcmVmLnF1ZXJ5LFxuICAgICAgICAgIHByb3RvY29sID0gX3JlZi5wcm90b2NvbDtcblxuICAgICAgdmFyIHBhcmFtcyA9IHRoaXMub3B0aW9ucy5wYXJhbXM7XG5cblxuICAgICAgdmFyIHBhcmFtU3RyaW5nID0gdGhpcy5nZXRQYXJhbVN0cmluZyhfZXh0ZW5kcyh7fSwgcGFyYW1zLCB7XG4gICAgICAgIGFkZHJlc3M6IHF1ZXJ5XG4gICAgICB9KSk7XG5cbiAgICAgIC8vIGdvb2dsZSByZXF1aXJlcyBhIHNlY3VyZSBjb25uZWN0aW9uIHdoZW4gdXNpbmcgYXBpIGtleXNcbiAgICAgIHZhciBwcm90byA9IHBhcmFtcyAmJiBwYXJhbXMua2V5ID8gJ2h0dHBzOicgOiBwcm90b2NvbDtcbiAgICAgIHJldHVybiBwcm90byArICcvL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvZ2VvY29kZS9qc29uPycgKyBwYXJhbVN0cmluZztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwYXJzZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKF9yZWYyKSB7XG4gICAgICB2YXIgZGF0YSA9IF9yZWYyLmRhdGE7XG5cbiAgICAgIHJldHVybiBkYXRhLnJlc3VsdHMubWFwKGZ1bmN0aW9uIChyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgeDogci5nZW9tZXRyeS5sb2NhdGlvbi5sbmcsXG4gICAgICAgICAgeTogci5nZW9tZXRyeS5sb2NhdGlvbi5sYXQsXG4gICAgICAgICAgbGFiZWw6IHIuZm9ybWF0dGVkX2FkZHJlc3MsXG4gICAgICAgICAgYm91bmRzOiBbW3IuZ2VvbWV0cnkudmlld3BvcnQuc291dGh3ZXN0LmxhdCwgci5nZW9tZXRyeS52aWV3cG9ydC5zb3V0aHdlc3QubG5nXSwgLy8gcywgd1xuICAgICAgICAgIFtyLmdlb21ldHJ5LnZpZXdwb3J0Lm5vcnRoZWFzdC5sYXQsIHIuZ2VvbWV0cnkudmlld3BvcnQubm9ydGhlYXN0LmxuZ11dLFxuICAgICAgICAgIHJhdzogclxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFByb3ZpZGVyO1xufShfcHJvdmlkZXIyLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBQcm92aWRlcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///28\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _nodentRuntime = __webpack_require__(3);\n\nvar _nodentRuntime2 = _interopRequireDefault(_nodentRuntime);\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _provider = __webpack_require__(4);\n\nvar _provider2 = _interopRequireDefault(_provider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Provider = function (_BaseProvider) {\n  _inherits(Provider, _BaseProvider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));\n  }\n\n  _createClass(Provider, [{\n    key: 'endpoint',\n    value: function endpoint() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          query = _ref.query;\n\n      var params = this.options.params;\n\n\n      var paramString = this.getParamString(_extends({}, params, {\n        format: 'json',\n        q: query\n      }));\n\n      return 'https://nominatim.openstreetmap.org/search?' + paramString;\n    }\n  }, {\n    key: 'endpointReverse',\n    value: function endpointReverse() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          data = _ref2.data;\n\n      var params = this.options.params;\n\n\n      var paramString = this.getParamString(_extends({}, params, {\n        format: 'json',\n        // eslint-disable-next-line camelcase\n        osm_id: data.raw.osm_id,\n        // eslint-disable-next-line camelcase\n        osm_type: this.translateOsmType(data.raw.osm_type)\n      }));\n\n      return 'https://nominatim.openstreetmap.org/reverse?' + paramString;\n    }\n  }, {\n    key: 'parse',\n    value: function parse(_ref3) {\n      var data = _ref3.data;\n\n      return data.map(function (r) {\n        return {\n          x: r.lon,\n          y: r.lat,\n          label: r.display_name,\n          bounds: [[parseFloat(r.boundingbox[0]), parseFloat(r.boundingbox[2])], // s, w\n          [parseFloat(r.boundingbox[1]), parseFloat(r.boundingbox[3])]],\n          raw: r\n        };\n      });\n    }\n  }, {\n    key: 'search',\n    value: function search(_ref4) {\n      return new Promise(function ($return, $error) {\n        var query, data, protocol, url, request, json;\n        query = _ref4.query, data = _ref4.data;\n\n        protocol = ~location.protocol.indexOf('http') ? location.protocol : 'https:';\n\n        url = data ? this.endpointReverse({ data: data, protocol: protocol }) : this.endpoint({ query: query, protocol: protocol });\n\n        return fetch(url).then(function ($await_1) {\n          request = $await_1;\n          return request.json().then(function ($await_2) {\n            json = $await_2;\n            return $return(this.parse({ data: data ? [json] : json }));\n          }.$asyncbind(this, $error), $error);\n        }.$asyncbind(this, $error), $error);\n      }.$asyncbind(this));\n    }\n  }, {\n    key: 'translateOsmType',\n    value: function translateOsmType(type) {\n      if (type === 'node') return 'N';\n      if (type === 'way') return 'W';\n      if (type === 'relation') return 'R';\n      return ''; // Unknown\n    }\n  }]);\n\n  return Provider;\n}(_provider2.default);\n\nexports.default = Provider;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.createMarker = createMarker;\nexports.getIcon = getIcon;\nfunction createMarker(lat, lng) {\n\treturn L.marker([lat, lng], { icon: graphIcon });\n}\n\nfunction getIcon(type) {\n\treturn type === 'hover' ? hoverIcon : graphIcon;\n}\n\nvar baseIcon = L.Icon.extend({});\n\nvar graphIcon = new baseIcon({\n\ticonUrl: 'imgs/blue_icon.png',\n\tshadowUrl: 'imgs/marker_shadow.png',\n\ticonSize: [25, 41],\n\ticonAnchor: [12, 41],\n\tpopupAnchor: [1, -34],\n\tshadowSize: [41, 41]\n});\n\nvar hoverIcon = new baseIcon({\n\ticonUrl: 'imgs/orange_icon.png',\n\tshadowUrl: 'imgs/marker_shadow.png',\n\ticonSize: [25, 41],\n\ticonAnchor: [12, 41],\n\tpopupAnchor: [1, -34],\n\tshadowSize: [41, 41]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9tYXJrZXIuanM/ZDM4OSJdLCJuYW1lcyI6WyJjcmVhdGVNYXJrZXIiLCJnZXRJY29uIiwibGF0IiwibG5nIiwiTCIsIm1hcmtlciIsImljb24iLCJncmFwaEljb24iLCJ0eXBlIiwiaG92ZXJJY29uIiwiYmFzZUljb24iLCJJY29uIiwiZXh0ZW5kIiwiaWNvblVybCIsInNoYWRvd1VybCIsImljb25TaXplIiwiaWNvbkFuY2hvciIsInBvcHVwQW5jaG9yIiwic2hhZG93U2l6ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFBZ0JBLFksR0FBQUEsWTtRQUlBQyxPLEdBQUFBLE87QUFKVCxTQUFTRCxZQUFULENBQXVCRSxHQUF2QixFQUE0QkMsR0FBNUIsRUFBaUM7QUFDdkMsUUFBT0MsRUFBRUMsTUFBRixDQUFTLENBQUNILEdBQUQsRUFBTUMsR0FBTixDQUFULEVBQXFCLEVBQUNHLE1BQU1DLFNBQVAsRUFBckIsQ0FBUDtBQUNBOztBQUVNLFNBQVNOLE9BQVQsQ0FBa0JPLElBQWxCLEVBQXdCO0FBQzlCLFFBQU9BLFNBQVMsT0FBVCxHQUFtQkMsU0FBbkIsR0FBK0JGLFNBQXRDO0FBQ0E7O0FBRUQsSUFBSUcsV0FBV04sRUFBRU8sSUFBRixDQUFPQyxNQUFQLENBQWMsRUFBZCxDQUFmOztBQUVBLElBQUlMLFlBQVksSUFBSUcsUUFBSixDQUFhO0FBQzVCRyxVQUFTLG9CQURtQjtBQUU1QkMsWUFBVyx3QkFGaUI7QUFHNUJDLFdBQVUsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUhrQjtBQUk1QkMsYUFBWSxDQUFDLEVBQUQsRUFBSyxFQUFMLENBSmdCO0FBSzVCQyxjQUFhLENBQUMsQ0FBRCxFQUFJLENBQUMsRUFBTCxDQUxlO0FBTTVCQyxhQUFZLENBQUMsRUFBRCxFQUFLLEVBQUw7QUFOZ0IsQ0FBYixDQUFoQjs7QUFTQSxJQUFJVCxZQUFZLElBQUlDLFFBQUosQ0FBYTtBQUM1QkcsVUFBUyxzQkFEbUI7QUFFNUJDLFlBQVcsd0JBRmlCO0FBRzVCQyxXQUFVLENBQUMsRUFBRCxFQUFLLEVBQUwsQ0FIa0I7QUFJNUJDLGFBQVksQ0FBQyxFQUFELEVBQUssRUFBTCxDQUpnQjtBQUs1QkMsY0FBYSxDQUFDLENBQUQsRUFBSSxDQUFDLEVBQUwsQ0FMZTtBQU01QkMsYUFBWSxDQUFDLEVBQUQsRUFBSyxFQUFMO0FBTmdCLENBQWIsQ0FBaEIiLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3JlYXRlTWFya2VyIChsYXQsIGxuZykge1xuXHRyZXR1cm4gTC5tYXJrZXIoW2xhdCwgbG5nXSwge2ljb246IGdyYXBoSWNvbn0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SWNvbiAodHlwZSkge1xuXHRyZXR1cm4gdHlwZSA9PT0gJ2hvdmVyJyA/IGhvdmVySWNvbiA6IGdyYXBoSWNvbjtcbn1cblxudmFyIGJhc2VJY29uID0gTC5JY29uLmV4dGVuZCh7fSk7XG5cbnZhciBncmFwaEljb24gPSBuZXcgYmFzZUljb24oe1xuXHRpY29uVXJsOiAnaW1ncy9ibHVlX2ljb24ucG5nJyxcblx0c2hhZG93VXJsOiAnaW1ncy9tYXJrZXJfc2hhZG93LnBuZycsXG5cdGljb25TaXplOiBbMjUsIDQxXSxcblx0aWNvbkFuY2hvcjogWzEyLCA0MV0sXG5cdHBvcHVwQW5jaG9yOiBbMSwgLTM0XSxcblx0c2hhZG93U2l6ZTogWzQxLCA0MV1cbn0pO1xuXG52YXIgaG92ZXJJY29uID0gbmV3IGJhc2VJY29uKHtcblx0aWNvblVybDogJ2ltZ3Mvb3JhbmdlX2ljb24ucG5nJyxcblx0c2hhZG93VXJsOiAnaW1ncy9tYXJrZXJfc2hhZG93LnBuZycsXG5cdGljb25TaXplOiBbMjUsIDQxXSxcblx0aWNvbkFuY2hvcjogWzEyLCA0MV0sXG5cdHBvcHVwQW5jaG9yOiBbMSwgLTM0XSxcblx0c2hhZG93U2l6ZTogWzQxLCA0MV1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///30\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.setOpacitySliderPosition = setOpacitySliderPosition;\nexports.makeOpacitySlider = makeOpacitySlider;\n\nvar _share = __webpack_require__(0);\n\nvar _layer = __webpack_require__(5);\n\n// set it manually for now\nvar OPACITY_RANGE_MAX = 90;\n\nvar opacityScale = d3.scaleLinear().domain([1, 0]).range([0, OPACITY_RANGE_MAX]).clamp(true);\n\nfunction setOpacitySliderPosition(layer, sliderHandle, opacity) {\n\topacity = opacity || layer.opacity;\n\tsliderHandle.style.top = '' + opacityScale(opacity) + 'px';\n}\n\nfunction makeOpacitySlider(layer) {\n\tvar layerOpacity = layer.opacity !== undefined ? layer.opacity : 1;\n\tvar wrapper = document.createElement('div');\n\tvar sliderTrackOverlay = makeSliderTrack(layer, layerOpacity);\n\tvar iconWrapperClosed = makeOpacityIconWrapper('closed', layer, sliderTrackOverlay);\n\n\twrapper.classList.add('opacity-slider-wrapper');\n\twrapper.appendChild(sliderTrackOverlay);\n\twrapper.appendChild(iconWrapperClosed);\n\treturn wrapper;\n}\n\nfunction makeOpacityIconWrapper(state, layer, sliderTrackOverlay) {\n\tvar wrapper = document.createElement('div');\n\tvar icon = document.createElement('img');\n\twrapper.classList.add('opacity-icon-wrapper');\n\ticon.classList.add('opacity-icon');\n\ticon.classList.add(state);\n\ticon.setAttribute('src', 'imgs/opacity-icon-' + state + '-64x64.png');\n\ticon.setAttribute('alt', 'Use this slider to adjust transparency for the ' + layer.name + ' layer');\n\ticon.setAttribute('title', 'Use this slider to adjust transparency for the ' + layer.name + ' layer');\n\twrapper.appendChild(icon);\n\twrapper.onclick = function (e) {\n\t\tvar sliderHandle = sliderTrackOverlay.getElementsByClassName('opacity-slider-handle')[0];\n\t\t(0, _layer.updateLayerOpacity)(layer, 0);\n\t\tsetOpacitySliderPosition(layer, sliderHandle, 0);\n\t};\n\treturn wrapper;\n}\n\nfunction makeSliderTrack(layer, layerOpacity) {\n\n\tvar overlay = document.createElement('div');\n\tvar track = document.createElement('div');\n\tvar sliderHandle = document.createElement('div');\n\n\toverlay.classList.add('opacity-slider-track-overlay');\n\ttrack.classList.add('opacity-slider-track');\n\tsliderHandle.classList.add('opacity-slider-handle');\n\n\toverlay.appendChild(track);\n\toverlay.appendChild(sliderHandle);\n\n\tif (layer.active) setOpacitySliderPosition(layer, sliderHandle);\n\tsetDragEventListener(overlay, layer, layerOpacity);\n\n\treturn overlay;\n}\n\nfunction setDragEventListener(overlay, layer, layerOpacity) {\n\td3.select(overlay).call(d3.drag().on('start drag', function () {\n\t\tvar sliderHandle = overlay.getElementsByClassName('opacity-slider-handle')[0];\n\t\tvar newOpacity = calcOpacityFromMousePos(overlay);\n\t\t(0, _layer.updateLayerOpacity)(layer, newOpacity);\n\t\tsetOpacitySliderPosition(layer, sliderHandle, newOpacity);\n\t}).on('end', function () {\n\n\t\tvar newOpacity = calcOpacityFromMousePos(overlay);\n\n\t\t//send google analytics opacity slider change\n\t\tga('send', 'event', {\n\t\t\teventCategory: 'opacity slider',\n\t\t\teventAction: 'change',\n\t\t\teventLabel: '{\"' + layer.name + '\": \"' + newOpacity + '\"}',\n\t\t\tnonInteraction: false\n\t\t});\n\n\t\t(0, _share.updateShareUrl)();\n\t}));\n}\n\nfunction calcOpacityFromMousePos(overlay) {\n\tvar yPos = d3.mouse(overlay)[1];\n\tvar newOpacity = opacityScale.invert(yPos);\n\treturn newOpacity;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9vcGFjaXR5U2xpZGVyLmpzPzRjNjMiXSwibmFtZXMiOlsic2V0T3BhY2l0eVNsaWRlclBvc2l0aW9uIiwibWFrZU9wYWNpdHlTbGlkZXIiLCJPUEFDSVRZX1JBTkdFX01BWCIsIm9wYWNpdHlTY2FsZSIsImQzIiwic2NhbGVMaW5lYXIiLCJkb21haW4iLCJyYW5nZSIsImNsYW1wIiwibGF5ZXIiLCJzbGlkZXJIYW5kbGUiLCJvcGFjaXR5Iiwic3R5bGUiLCJ0b3AiLCJsYXllck9wYWNpdHkiLCJ1bmRlZmluZWQiLCJ3cmFwcGVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2xpZGVyVHJhY2tPdmVybGF5IiwibWFrZVNsaWRlclRyYWNrIiwiaWNvbldyYXBwZXJDbG9zZWQiLCJtYWtlT3BhY2l0eUljb25XcmFwcGVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJzdGF0ZSIsImljb24iLCJzZXRBdHRyaWJ1dGUiLCJuYW1lIiwib25jbGljayIsImUiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwib3ZlcmxheSIsInRyYWNrIiwiYWN0aXZlIiwic2V0RHJhZ0V2ZW50TGlzdGVuZXIiLCJzZWxlY3QiLCJjYWxsIiwiZHJhZyIsIm9uIiwibmV3T3BhY2l0eSIsImNhbGNPcGFjaXR5RnJvbU1vdXNlUG9zIiwiZ2EiLCJldmVudENhdGVnb3J5IiwiZXZlbnRBY3Rpb24iLCJldmVudExhYmVsIiwibm9uSW50ZXJhY3Rpb24iLCJ5UG9zIiwibW91c2UiLCJpbnZlcnQiXSwibWFwcGluZ3MiOiI7Ozs7O1FBV2dCQSx3QixHQUFBQSx3QjtRQUtBQyxpQixHQUFBQSxpQjs7QUFoQmhCOztBQUNBOztBQUVBO0FBQ0EsSUFBTUMsb0JBQW9CLEVBQTFCOztBQUVBLElBQUlDLGVBQWVDLEdBQUdDLFdBQUgsR0FDakJDLE1BRGlCLENBQ1YsQ0FBQyxDQUFELEVBQUksQ0FBSixDQURVLEVBRWpCQyxLQUZpQixDQUVYLENBQUMsQ0FBRCxFQUFJTCxpQkFBSixDQUZXLEVBR2pCTSxLQUhpQixDQUdYLElBSFcsQ0FBbkI7O0FBS08sU0FBU1Isd0JBQVQsQ0FBbUNTLEtBQW5DLEVBQTBDQyxZQUExQyxFQUF3REMsT0FBeEQsRUFBaUU7QUFDdkVBLFdBQVVBLFdBQVdGLE1BQU1FLE9BQTNCO0FBQ0FELGNBQWFFLEtBQWIsQ0FBbUJDLEdBQW5CLEdBQXlCLEtBQUdWLGFBQWFRLE9BQWIsQ0FBSCxHQUF5QixJQUFsRDtBQUNBOztBQUVNLFNBQVNWLGlCQUFULENBQTRCUSxLQUE1QixFQUFtQztBQUN6QyxLQUFJSyxlQUFlTCxNQUFNRSxPQUFOLEtBQWtCSSxTQUFsQixHQUE4Qk4sTUFBTUUsT0FBcEMsR0FBOEMsQ0FBakU7QUFDQSxLQUFJSyxVQUFVQyxTQUFTQyxhQUFULENBQXVCLEtBQXZCLENBQWQ7QUFDQSxLQUFJQyxxQkFBcUJDLGdCQUFnQlgsS0FBaEIsRUFBdUJLLFlBQXZCLENBQXpCO0FBQ0EsS0FBSU8sb0JBQW9CQyx1QkFBdUIsUUFBdkIsRUFBaUNiLEtBQWpDLEVBQXdDVSxrQkFBeEMsQ0FBeEI7O0FBRUFILFNBQVFPLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLHdCQUF0QjtBQUNBUixTQUFRUyxXQUFSLENBQW9CTixrQkFBcEI7QUFDQUgsU0FBUVMsV0FBUixDQUFvQkosaUJBQXBCO0FBQ0EsUUFBT0wsT0FBUDtBQUNBOztBQUVELFNBQVNNLHNCQUFULENBQWdDSSxLQUFoQyxFQUF1Q2pCLEtBQXZDLEVBQThDVSxrQkFBOUMsRUFBa0U7QUFDakUsS0FBSUgsVUFBVUMsU0FBU0MsYUFBVCxDQUF1QixLQUF2QixDQUFkO0FBQ0EsS0FBSVMsT0FBT1YsU0FBU0MsYUFBVCxDQUF1QixLQUF2QixDQUFYO0FBQ0FGLFNBQVFPLFNBQVIsQ0FBa0JDLEdBQWxCLENBQXNCLHNCQUF0QjtBQUNBRyxNQUFLSixTQUFMLENBQWVDLEdBQWYsQ0FBbUIsY0FBbkI7QUFDQUcsTUFBS0osU0FBTCxDQUFlQyxHQUFmLENBQW1CRSxLQUFuQjtBQUNBQyxNQUFLQyxZQUFMLENBQWtCLEtBQWxCLEVBQXlCLHVCQUFxQkYsS0FBckIsR0FBMkIsWUFBcEQ7QUFDQUMsTUFBS0MsWUFBTCxDQUFrQixLQUFsQixFQUF5QixvREFBb0RuQixNQUFNb0IsSUFBMUQsR0FBaUUsUUFBMUY7QUFDQUYsTUFBS0MsWUFBTCxDQUFrQixPQUFsQixFQUEyQixvREFBb0RuQixNQUFNb0IsSUFBMUQsR0FBaUUsUUFBNUY7QUFDQWIsU0FBUVMsV0FBUixDQUFvQkUsSUFBcEI7QUFDQVgsU0FBUWMsT0FBUixHQUFrQixVQUFVQyxDQUFWLEVBQWE7QUFDOUIsTUFBSXJCLGVBQWVTLG1CQUFtQmEsc0JBQW5CLENBQTBDLHVCQUExQyxFQUFtRSxDQUFuRSxDQUFuQjtBQUNBLGlDQUFtQnZCLEtBQW5CLEVBQTBCLENBQTFCO0FBQ0FULDJCQUF5QlMsS0FBekIsRUFBZ0NDLFlBQWhDLEVBQThDLENBQTlDO0FBQ0EsRUFKRDtBQUtBLFFBQU9NLE9BQVA7QUFDQTs7QUFFRCxTQUFTSSxlQUFULENBQXlCWCxLQUF6QixFQUFnQ0ssWUFBaEMsRUFBOEM7O0FBRTdDLEtBQUltQixVQUFVaEIsU0FBU0MsYUFBVCxDQUF1QixLQUF2QixDQUFkO0FBQ0EsS0FBSWdCLFFBQVFqQixTQUFTQyxhQUFULENBQXVCLEtBQXZCLENBQVo7QUFDQSxLQUFJUixlQUFlTyxTQUFTQyxhQUFULENBQXVCLEtBQXZCLENBQW5COztBQUVBZSxTQUFRVixTQUFSLENBQWtCQyxHQUFsQixDQUFzQiw4QkFBdEI7QUFDQVUsT0FBTVgsU0FBTixDQUFnQkMsR0FBaEIsQ0FBb0Isc0JBQXBCO0FBQ0FkLGNBQWFhLFNBQWIsQ0FBdUJDLEdBQXZCLENBQTJCLHVCQUEzQjs7QUFFQVMsU0FBUVIsV0FBUixDQUFvQlMsS0FBcEI7QUFDQUQsU0FBUVIsV0FBUixDQUFvQmYsWUFBcEI7O0FBRUEsS0FBSUQsTUFBTTBCLE1BQVYsRUFBa0JuQyx5QkFBeUJTLEtBQXpCLEVBQWdDQyxZQUFoQztBQUNsQjBCLHNCQUFxQkgsT0FBckIsRUFBOEJ4QixLQUE5QixFQUFxQ0ssWUFBckM7O0FBRUEsUUFBT21CLE9BQVA7QUFDQTs7QUFFRCxTQUFTRyxvQkFBVCxDQUE4QkgsT0FBOUIsRUFBdUN4QixLQUF2QyxFQUE4Q0ssWUFBOUMsRUFBNEQ7QUFDM0RWLElBQUdpQyxNQUFILENBQVVKLE9BQVYsRUFBbUJLLElBQW5CLENBQXdCbEMsR0FBR21DLElBQUgsR0FDdEJDLEVBRHNCLENBQ25CLFlBRG1CLEVBQ0wsWUFBWTtBQUM3QixNQUFJOUIsZUFBZXVCLFFBQVFELHNCQUFSLENBQStCLHVCQUEvQixFQUF3RCxDQUF4RCxDQUFuQjtBQUNBLE1BQUlTLGFBQWFDLHdCQUF3QlQsT0FBeEIsQ0FBakI7QUFDQSxpQ0FBbUJ4QixLQUFuQixFQUEwQmdDLFVBQTFCO0FBQ0F6QywyQkFBeUJTLEtBQXpCLEVBQWdDQyxZQUFoQyxFQUE4QytCLFVBQTlDO0FBQ0EsRUFOc0IsRUFPdEJELEVBUHNCLENBT25CLEtBUG1CLEVBT1osWUFBWTs7QUFFckIsTUFBSUMsYUFBYUMsd0JBQXdCVCxPQUF4QixDQUFqQjs7QUFFQTtBQUNBVSxLQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ3JCQyxrQkFBZSxnQkFETTtBQUVyQkMsZ0JBQWEsUUFGUTtBQUdyQkMsZUFBWSxPQUFPckMsTUFBTW9CLElBQWIsR0FBb0IsTUFBcEIsR0FBNkJZLFVBQTdCLEdBQTBDLElBSGpDO0FBSXJCTSxtQkFBZ0I7QUFKSyxHQUFwQjs7QUFPRDtBQUNBLEVBcEJzQixDQUF4QjtBQXNCQTs7QUFFRCxTQUFTTCx1QkFBVCxDQUFpQ1QsT0FBakMsRUFBMEM7QUFDekMsS0FBSWUsT0FBTzVDLEdBQUc2QyxLQUFILENBQVNoQixPQUFULEVBQWtCLENBQWxCLENBQVg7QUFDQSxLQUFJUSxhQUFhdEMsYUFBYStDLE1BQWIsQ0FBb0JGLElBQXBCLENBQWpCO0FBQ0EsUUFBT1AsVUFBUDtBQUNBIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt1cGRhdGVTaGFyZVVybH0gZnJvbSAnLi9zaGFyZSdcbmltcG9ydCB7dXBkYXRlTGF5ZXJPcGFjaXR5fSBmcm9tIFwiLi9sYXllclwiO1xuXG4vLyBzZXQgaXQgbWFudWFsbHkgZm9yIG5vd1xuY29uc3QgT1BBQ0lUWV9SQU5HRV9NQVggPSA5MFxuXG52YXIgb3BhY2l0eVNjYWxlID0gZDMuc2NhbGVMaW5lYXIoKVxuXHQuZG9tYWluKFsxLCAwXSlcblx0LnJhbmdlKFswLCBPUEFDSVRZX1JBTkdFX01BWF0pXG5cdC5jbGFtcCh0cnVlKVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0T3BhY2l0eVNsaWRlclBvc2l0aW9uIChsYXllciwgc2xpZGVySGFuZGxlLCBvcGFjaXR5KSB7XG5cdG9wYWNpdHkgPSBvcGFjaXR5IHx8IGxheWVyLm9wYWNpdHlcblx0c2xpZGVySGFuZGxlLnN0eWxlLnRvcCA9ICcnK29wYWNpdHlTY2FsZShvcGFjaXR5KSsncHgnXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlT3BhY2l0eVNsaWRlciAobGF5ZXIpIHtcblx0dmFyIGxheWVyT3BhY2l0eSA9IGxheWVyLm9wYWNpdHkgIT09IHVuZGVmaW5lZCA/IGxheWVyLm9wYWNpdHkgOiAxXG5cdHZhciB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0dmFyIHNsaWRlclRyYWNrT3ZlcmxheSA9IG1ha2VTbGlkZXJUcmFjayhsYXllciwgbGF5ZXJPcGFjaXR5KVxuXHR2YXIgaWNvbldyYXBwZXJDbG9zZWQgPSBtYWtlT3BhY2l0eUljb25XcmFwcGVyKCdjbG9zZWQnLCBsYXllciwgc2xpZGVyVHJhY2tPdmVybGF5KVxuXG5cdHdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnb3BhY2l0eS1zbGlkZXItd3JhcHBlcicpXG5cdHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2xpZGVyVHJhY2tPdmVybGF5KVxuXHR3cmFwcGVyLmFwcGVuZENoaWxkKGljb25XcmFwcGVyQ2xvc2VkKVxuXHRyZXR1cm4gd3JhcHBlclxufVxuXG5mdW5jdGlvbiBtYWtlT3BhY2l0eUljb25XcmFwcGVyKHN0YXRlLCBsYXllciwgc2xpZGVyVHJhY2tPdmVybGF5KSB7XG5cdHZhciB3cmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0dmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKVxuXHR3cmFwcGVyLmNsYXNzTGlzdC5hZGQoJ29wYWNpdHktaWNvbi13cmFwcGVyJylcblx0aWNvbi5jbGFzc0xpc3QuYWRkKCdvcGFjaXR5LWljb24nKVxuXHRpY29uLmNsYXNzTGlzdC5hZGQoc3RhdGUpXG5cdGljb24uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1ncy9vcGFjaXR5LWljb24tJytzdGF0ZSsnLTY0eDY0LnBuZycpXG5cdGljb24uc2V0QXR0cmlidXRlKCdhbHQnLCAnVXNlIHRoaXMgc2xpZGVyIHRvIGFkanVzdCB0cmFuc3BhcmVuY3kgZm9yIHRoZSAnICsgbGF5ZXIubmFtZSArICcgbGF5ZXInKVxuXHRpY29uLnNldEF0dHJpYnV0ZSgndGl0bGUnLCAnVXNlIHRoaXMgc2xpZGVyIHRvIGFkanVzdCB0cmFuc3BhcmVuY3kgZm9yIHRoZSAnICsgbGF5ZXIubmFtZSArICcgbGF5ZXInKVxuXHR3cmFwcGVyLmFwcGVuZENoaWxkKGljb24pXG5cdHdyYXBwZXIub25jbGljayA9IGZ1bmN0aW9uIChlKSB7XG5cdFx0dmFyIHNsaWRlckhhbmRsZSA9IHNsaWRlclRyYWNrT3ZlcmxheS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdvcGFjaXR5LXNsaWRlci1oYW5kbGUnKVswXVxuXHRcdHVwZGF0ZUxheWVyT3BhY2l0eShsYXllciwgMClcblx0XHRzZXRPcGFjaXR5U2xpZGVyUG9zaXRpb24obGF5ZXIsIHNsaWRlckhhbmRsZSwgMClcblx0fVxuXHRyZXR1cm4gd3JhcHBlclxufVxuXG5mdW5jdGlvbiBtYWtlU2xpZGVyVHJhY2sobGF5ZXIsIGxheWVyT3BhY2l0eSkge1xuXG5cdHZhciBvdmVybGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0dmFyIHRyYWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0dmFyIHNsaWRlckhhbmRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG5cblx0b3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdvcGFjaXR5LXNsaWRlci10cmFjay1vdmVybGF5Jylcblx0dHJhY2suY2xhc3NMaXN0LmFkZCgnb3BhY2l0eS1zbGlkZXItdHJhY2snKVxuXHRzbGlkZXJIYW5kbGUuY2xhc3NMaXN0LmFkZCgnb3BhY2l0eS1zbGlkZXItaGFuZGxlJylcblxuXHRvdmVybGF5LmFwcGVuZENoaWxkKHRyYWNrKVxuXHRvdmVybGF5LmFwcGVuZENoaWxkKHNsaWRlckhhbmRsZSlcblxuXHRpZiAobGF5ZXIuYWN0aXZlKSBzZXRPcGFjaXR5U2xpZGVyUG9zaXRpb24obGF5ZXIsIHNsaWRlckhhbmRsZSlcblx0c2V0RHJhZ0V2ZW50TGlzdGVuZXIob3ZlcmxheSwgbGF5ZXIsIGxheWVyT3BhY2l0eSlcblxuXHRyZXR1cm4gb3ZlcmxheVxufVxuXG5mdW5jdGlvbiBzZXREcmFnRXZlbnRMaXN0ZW5lcihvdmVybGF5LCBsYXllciwgbGF5ZXJPcGFjaXR5KSB7XG5cdGQzLnNlbGVjdChvdmVybGF5KS5jYWxsKGQzLmRyYWcoKVxuXHRcdC5vbignc3RhcnQgZHJhZycsIGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzbGlkZXJIYW5kbGUgPSBvdmVybGF5LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ29wYWNpdHktc2xpZGVyLWhhbmRsZScpWzBdXG5cdFx0XHR2YXIgbmV3T3BhY2l0eSA9IGNhbGNPcGFjaXR5RnJvbU1vdXNlUG9zKG92ZXJsYXkpXG5cdFx0XHR1cGRhdGVMYXllck9wYWNpdHkobGF5ZXIsIG5ld09wYWNpdHkpXG5cdFx0XHRzZXRPcGFjaXR5U2xpZGVyUG9zaXRpb24obGF5ZXIsIHNsaWRlckhhbmRsZSwgbmV3T3BhY2l0eSlcblx0XHR9KVxuXHRcdC5vbignZW5kJywgZnVuY3Rpb24gKCkge1xuXG5cdFx0ICB2YXIgbmV3T3BhY2l0eSA9IGNhbGNPcGFjaXR5RnJvbU1vdXNlUG9zKG92ZXJsYXkpXG5cblx0XHQgIC8vc2VuZCBnb29nbGUgYW5hbHl0aWNzIG9wYWNpdHkgc2xpZGVyIGNoYW5nZVxuXHRcdCAgZ2EoJ3NlbmQnLCAnZXZlbnQnLCB7XG5cdFx0XHRldmVudENhdGVnb3J5OiAnb3BhY2l0eSBzbGlkZXInLFxuXHRcdFx0ZXZlbnRBY3Rpb246ICdjaGFuZ2UnLFxuXHRcdFx0ZXZlbnRMYWJlbDogJ3tcIicgKyBsYXllci5uYW1lICsgJ1wiOiBcIicgKyBuZXdPcGFjaXR5ICsgJ1wifScsXG5cdFx0XHRub25JbnRlcmFjdGlvbjogZmFsc2Vcblx0XHQgIH0pO1xuXG5cdFx0XHR1cGRhdGVTaGFyZVVybCgpXG5cdFx0fSlcblx0KVxufVxuXG5mdW5jdGlvbiBjYWxjT3BhY2l0eUZyb21Nb3VzZVBvcyhvdmVybGF5KSB7XG5cdHZhciB5UG9zID0gZDMubW91c2Uob3ZlcmxheSlbMV1cblx0dmFyIG5ld09wYWNpdHkgPSBvcGFjaXR5U2NhbGUuaW52ZXJ0KHlQb3MpXG5cdHJldHVybiBuZXdPcGFjaXR5XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///31\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n\tvalue: true\n});\nexports.default = CreateLogo;\n/*\n  "logo": {\n\t"image": "imgs/landat_logo_blue.png",\n\t"alt": "Logo for the LanDat project",\n\t"link": "https://landat-dev.nemac.org",\n\t"location": ["bottom", "right"]\n  },\n*/\n\nfunction CreateLogo(logodata) {\n\tif (!logodata.image) return;\n\n\tvar logoWrapper = createLogoWrapper();\n\tvar logoImage = createLogoImage(logodata);\n\tvar logoLink = logodata.link ? createLogoLink(logodata.link) : null;\n\n\tif (logoLink) {\n\t\tlogoLink.appendChild(logoImage);\n\t\tlogoWrapper.appendChild(logoLink);\n\t} else {\n\t\tlogoWrapper.appendChild(logoImage);\n\t}\n\n\tvar insertElement = document.getElementsByClassName(logodata.location)[0];\n\tvar existingChild = insertElement.firstChild;\n\tinsertElement.insertBefore(logoWrapper, existingChild);\n}\n\nfunction createLogoWrapper() {\n\tvar logoWrapper = document.createElement("div");\n\td3.select(logoWrapper).classed("project-logo", true);\n\treturn logoWrapper;\n}\n\nfunction createLogoImage(logodata) {\n\tvar logoImage = document.createElement("img");\n\tlogoImage.setAttribute("src", logodata.image);\n\tif (logodata.label) {\n\t\tlogoImage.setAttribute("alt", logodata.label);\n\t\tlogoImage.setAttribute("title", logodata.label);\n\t}\n\treturn logoImage;\n}\n\nfunction createLogoLink(link) {\n\tvar logoLink = document.createElement("a");\n\tlogoLink.setAttribute("href", link);\n\tlogoLink.setAttribute("target", "_blank");\n\n\tlogoLink.addEventListener(\'click\', function () {\n\n\t\t//send google analytics for clicking logo\n\t\tga(\'send\', \'event\', {\n\t\t\teventCategory: \'map\',\n\t\t\teventAction: \'click\',\n\t\t\teventLabel: \'landat logo\',\n\t\t\tnonInteraction: false\n\t\t});\n\t});\n\n\treturn logoLink;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9sb2dvLmpzPzdkNGQiXSwibmFtZXMiOlsiQ3JlYXRlTG9nbyIsImxvZ29kYXRhIiwiaW1hZ2UiLCJsb2dvV3JhcHBlciIsImNyZWF0ZUxvZ29XcmFwcGVyIiwibG9nb0ltYWdlIiwiY3JlYXRlTG9nb0ltYWdlIiwibG9nb0xpbmsiLCJsaW5rIiwiY3JlYXRlTG9nb0xpbmsiLCJhcHBlbmRDaGlsZCIsImluc2VydEVsZW1lbnQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJsb2NhdGlvbiIsImV4aXN0aW5nQ2hpbGQiLCJmaXJzdENoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiY3JlYXRlRWxlbWVudCIsImQzIiwic2VsZWN0IiwiY2xhc3NlZCIsInNldEF0dHJpYnV0ZSIsImxhYmVsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdhIiwiZXZlbnRDYXRlZ29yeSIsImV2ZW50QWN0aW9uIiwiZXZlbnRMYWJlbCIsIm5vbkludGVyYWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFTd0JBLFU7QUFUeEI7Ozs7Ozs7OztBQVNlLFNBQVNBLFVBQVQsQ0FBcUJDLFFBQXJCLEVBQStCO0FBQzdDLEtBQUksQ0FBQ0EsU0FBU0MsS0FBZCxFQUFxQjs7QUFFckIsS0FBSUMsY0FBY0MsbUJBQWxCO0FBQ0EsS0FBSUMsWUFBWUMsZ0JBQWdCTCxRQUFoQixDQUFoQjtBQUNBLEtBQUlNLFdBQVdOLFNBQVNPLElBQVQsR0FBZ0JDLGVBQWVSLFNBQVNPLElBQXhCLENBQWhCLEdBQWdELElBQS9EOztBQUVBLEtBQUlELFFBQUosRUFBYztBQUNiQSxXQUFTRyxXQUFULENBQXFCTCxTQUFyQjtBQUNBRixjQUFZTyxXQUFaLENBQXdCSCxRQUF4QjtBQUNBLEVBSEQsTUFHTztBQUNOSixjQUFZTyxXQUFaLENBQXdCTCxTQUF4QjtBQUNBOztBQUVELEtBQUlNLGdCQUFnQkMsU0FBU0Msc0JBQVQsQ0FBZ0NaLFNBQVNhLFFBQXpDLEVBQW1ELENBQW5ELENBQXBCO0FBQ0EsS0FBSUMsZ0JBQWdCSixjQUFjSyxVQUFsQztBQUNBTCxlQUFjTSxZQUFkLENBQTJCZCxXQUEzQixFQUF3Q1ksYUFBeEM7QUFDQTs7QUFFRCxTQUFTWCxpQkFBVCxHQUE4QjtBQUM3QixLQUFJRCxjQUFjUyxTQUFTTSxhQUFULENBQXVCLEtBQXZCLENBQWxCO0FBQ0FDLElBQUdDLE1BQUgsQ0FBVWpCLFdBQVYsRUFBdUJrQixPQUF2QixDQUErQixjQUEvQixFQUErQyxJQUEvQztBQUNBLFFBQU9sQixXQUFQO0FBQ0E7O0FBRUQsU0FBU0csZUFBVCxDQUEwQkwsUUFBMUIsRUFBb0M7QUFDbkMsS0FBSUksWUFBWU8sU0FBU00sYUFBVCxDQUF1QixLQUF2QixDQUFoQjtBQUNBYixXQUFVaUIsWUFBVixDQUF1QixLQUF2QixFQUE4QnJCLFNBQVNDLEtBQXZDO0FBQ0EsS0FBSUQsU0FBU3NCLEtBQWIsRUFBb0I7QUFDbkJsQixZQUFVaUIsWUFBVixDQUF1QixLQUF2QixFQUE4QnJCLFNBQVNzQixLQUF2QztBQUNBbEIsWUFBVWlCLFlBQVYsQ0FBdUIsT0FBdkIsRUFBZ0NyQixTQUFTc0IsS0FBekM7QUFDQTtBQUNELFFBQU9sQixTQUFQO0FBQ0E7O0FBRUQsU0FBU0ksY0FBVCxDQUF5QkQsSUFBekIsRUFBK0I7QUFDOUIsS0FBSUQsV0FBV0ssU0FBU00sYUFBVCxDQUF1QixHQUF2QixDQUFmO0FBQ0FYLFVBQVNlLFlBQVQsQ0FBc0IsTUFBdEIsRUFBOEJkLElBQTlCO0FBQ0FELFVBQVNlLFlBQVQsQ0FBc0IsUUFBdEIsRUFBZ0MsUUFBaEM7O0FBRUFmLFVBQVNpQixnQkFBVCxDQUEwQixPQUExQixFQUFtQyxZQUFZOztBQUU3QztBQUNBQyxLQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ3JCQyxrQkFBZSxLQURNO0FBRXJCQyxnQkFBYSxPQUZRO0FBR3JCQyxlQUFZLGFBSFM7QUFJckJDLG1CQUFnQjtBQUpLLEdBQXBCO0FBTUQsRUFURDs7QUFXQSxRQUFPdEIsUUFBUDtBQUNBIiwiZmlsZSI6IjMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgXCJsb2dvXCI6IHtcblx0XCJpbWFnZVwiOiBcImltZ3MvbGFuZGF0X2xvZ29fYmx1ZS5wbmdcIixcblx0XCJhbHRcIjogXCJMb2dvIGZvciB0aGUgTGFuRGF0IHByb2plY3RcIixcblx0XCJsaW5rXCI6IFwiaHR0cHM6Ly9sYW5kYXQtZGV2Lm5lbWFjLm9yZ1wiLFxuXHRcImxvY2F0aW9uXCI6IFtcImJvdHRvbVwiLCBcInJpZ2h0XCJdXG4gIH0sXG4qL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDcmVhdGVMb2dvIChsb2dvZGF0YSkge1xuXHRpZiAoIWxvZ29kYXRhLmltYWdlKSByZXR1cm47XG5cblx0dmFyIGxvZ29XcmFwcGVyID0gY3JlYXRlTG9nb1dyYXBwZXIoKTtcblx0dmFyIGxvZ29JbWFnZSA9IGNyZWF0ZUxvZ29JbWFnZShsb2dvZGF0YSk7XG5cdHZhciBsb2dvTGluayA9IGxvZ29kYXRhLmxpbmsgPyBjcmVhdGVMb2dvTGluayhsb2dvZGF0YS5saW5rKSA6IG51bGw7XG5cblx0aWYgKGxvZ29MaW5rKSB7XG5cdFx0bG9nb0xpbmsuYXBwZW5kQ2hpbGQobG9nb0ltYWdlKTtcblx0XHRsb2dvV3JhcHBlci5hcHBlbmRDaGlsZChsb2dvTGluayk7XG5cdH0gZWxzZSB7XG5cdFx0bG9nb1dyYXBwZXIuYXBwZW5kQ2hpbGQobG9nb0ltYWdlKTtcblx0fVxuXG5cdHZhciBpbnNlcnRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShsb2dvZGF0YS5sb2NhdGlvbilbMF07XG5cdHZhciBleGlzdGluZ0NoaWxkID0gaW5zZXJ0RWxlbWVudC5maXJzdENoaWxkO1xuXHRpbnNlcnRFbGVtZW50Lmluc2VydEJlZm9yZShsb2dvV3JhcHBlciwgZXhpc3RpbmdDaGlsZCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvZ29XcmFwcGVyICgpIHtcblx0dmFyIGxvZ29XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0ZDMuc2VsZWN0KGxvZ29XcmFwcGVyKS5jbGFzc2VkKFwicHJvamVjdC1sb2dvXCIsIHRydWUpO1xuXHRyZXR1cm4gbG9nb1dyYXBwZXI7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvZ29JbWFnZSAobG9nb2RhdGEpIHtcblx0dmFyIGxvZ29JbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG5cdGxvZ29JbWFnZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgbG9nb2RhdGEuaW1hZ2UpO1xuXHRpZiAobG9nb2RhdGEubGFiZWwpIHtcblx0XHRsb2dvSW1hZ2Uuc2V0QXR0cmlidXRlKFwiYWx0XCIsIGxvZ29kYXRhLmxhYmVsKTtcblx0XHRsb2dvSW1hZ2Uuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgbG9nb2RhdGEubGFiZWwpO1xuXHR9XG5cdHJldHVybiBsb2dvSW1hZ2U7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvZ29MaW5rIChsaW5rKSB7XG5cdHZhciBsb2dvTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuXHRsb2dvTGluay5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIGxpbmspO1xuXHRsb2dvTGluay5zZXRBdHRyaWJ1dGUoXCJ0YXJnZXRcIiwgXCJfYmxhbmtcIik7XG5cblx0bG9nb0xpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG5cblx0ICAvL3NlbmQgZ29vZ2xlIGFuYWx5dGljcyBmb3IgY2xpY2tpbmcgbG9nb1xuXHQgIGdhKCdzZW5kJywgJ2V2ZW50Jywge1xuXHRcdGV2ZW50Q2F0ZWdvcnk6ICdtYXAnLFxuXHRcdGV2ZW50QWN0aW9uOiAnY2xpY2snLFxuXHRcdGV2ZW50TGFiZWw6ICdsYW5kYXQgbG9nbycsXG5cdFx0bm9uSW50ZXJhY3Rpb246IGZhbHNlXG5cdCAgfSk7XG5cdH0pO1xuXG5cdHJldHVybiBsb2dvTGluaztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = BindMobileMenuEvents;\n\nvar _map = __webpack_require__(1);\n\nfunction BindMobileMenuEvents() {\n\td3.select(\"#mobile-toggle-panel-button\").on(\"click\", handleMobileTogglePanelBtnClick);\n\td3.selectAll(\"#mobile-clear-map-button\").on(\"click\", handleMobileClearMapBtnClick);\n}\n\nfunction handleMobileClearMapBtnClick() {\n\td3.event.stopPropagation();\n\t(0, _map.clearMap)();\n\tdispatchMobileClearMapBtnClickAnalytics();\n}\n\nfunction handleMobileTogglePanelBtnClick() {\n\td3.event.stopPropagation();\n\tvar wrapper = d3.select(\"#wrapper\");\n\tvar status = wrapper.classed(\"mobile-menu-hidden\");\n\twrapper.classed(\"mobile-menu-hidden\", !status);\n\tdispatchMobileTogglePanelBtnClickAnalytics(!status ? \"opening\" : \"closing\");\n}\n\nfunction dispatchMobileClearMapBtnClickAnalytics() {\n\tga('send', 'event', {\n\t\teventCategory: 'mobile clearmap',\n\t\teventAction: 'click',\n\t\teventLabel: 'Mobile Clear Map',\n\t\tnonInteraction: false\n\t});\n}\n\nfunction dispatchMobileTogglePanelBtnClickAnalytics(status) {\n\tga('send', 'event', {\n\t\teventCategory: 'mobile menu',\n\t\teventAction: 'click',\n\t\teventLabel: 'Mobile Panel Toggle' + status,\n\t\tnonInteraction: false\n\t});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9tb2JpbGUuanM/ODM3NSJdLCJuYW1lcyI6WyJCaW5kTW9iaWxlTWVudUV2ZW50cyIsImQzIiwic2VsZWN0Iiwib24iLCJoYW5kbGVNb2JpbGVUb2dnbGVQYW5lbEJ0bkNsaWNrIiwic2VsZWN0QWxsIiwiaGFuZGxlTW9iaWxlQ2xlYXJNYXBCdG5DbGljayIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwiZGlzcGF0Y2hNb2JpbGVDbGVhck1hcEJ0bkNsaWNrQW5hbHl0aWNzIiwid3JhcHBlciIsInN0YXR1cyIsImNsYXNzZWQiLCJkaXNwYXRjaE1vYmlsZVRvZ2dsZVBhbmVsQnRuQ2xpY2tBbmFseXRpY3MiLCJnYSIsImV2ZW50Q2F0ZWdvcnkiLCJldmVudEFjdGlvbiIsImV2ZW50TGFiZWwiLCJub25JbnRlcmFjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBRXdCQSxvQjs7QUFGeEI7O0FBRWUsU0FBU0Esb0JBQVQsR0FBaUM7QUFDL0NDLElBQUdDLE1BQUgsQ0FBVSw2QkFBVixFQUNFQyxFQURGLENBQ0ssT0FETCxFQUNjQywrQkFEZDtBQUVBSCxJQUFHSSxTQUFILENBQWEsMEJBQWIsRUFDRUYsRUFERixDQUNLLE9BREwsRUFDY0csNEJBRGQ7QUFFQTs7QUFFRCxTQUFTQSw0QkFBVCxHQUF3QztBQUN2Q0wsSUFBR00sS0FBSCxDQUFTQyxlQUFUO0FBQ0E7QUFDQUM7QUFDQTs7QUFFRCxTQUFTTCwrQkFBVCxHQUE0QztBQUMzQ0gsSUFBR00sS0FBSCxDQUFTQyxlQUFUO0FBQ0EsS0FBSUUsVUFBVVQsR0FBR0MsTUFBSCxDQUFVLFVBQVYsQ0FBZDtBQUNBLEtBQUlTLFNBQVNELFFBQVFFLE9BQVIsQ0FBZ0Isb0JBQWhCLENBQWI7QUFDQUYsU0FBUUUsT0FBUixDQUFnQixvQkFBaEIsRUFBc0MsQ0FBQ0QsTUFBdkM7QUFDQUUsNENBQTJDLENBQUNGLE1BQUQsR0FBVSxTQUFWLEdBQXNCLFNBQWpFO0FBQ0E7O0FBRUQsU0FBU0YsdUNBQVQsR0FBb0Q7QUFDbkRLLElBQUcsTUFBSCxFQUFXLE9BQVgsRUFBb0I7QUFDbkJDLGlCQUFlLGlCQURJO0FBRW5CQyxlQUFhLE9BRk07QUFHbkJDLGNBQVksa0JBSE87QUFJbkJDLGtCQUFnQjtBQUpHLEVBQXBCO0FBTUE7O0FBRUQsU0FBU0wsMENBQVQsQ0FBcURGLE1BQXJELEVBQTZEO0FBQzVERyxJQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ25CQyxpQkFBZSxhQURJO0FBRW5CQyxlQUFhLE9BRk07QUFHbkJDLGNBQVksd0JBQXdCTixNQUhqQjtBQUluQk8sa0JBQWdCO0FBSkcsRUFBcEI7QUFNQSIsImZpbGUiOiIzMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y2xlYXJNYXB9IGZyb20gJy4vbWFwJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCaW5kTW9iaWxlTWVudUV2ZW50cyAoKSB7XG5cdGQzLnNlbGVjdChcIiNtb2JpbGUtdG9nZ2xlLXBhbmVsLWJ1dHRvblwiKVxuXHRcdC5vbihcImNsaWNrXCIsIGhhbmRsZU1vYmlsZVRvZ2dsZVBhbmVsQnRuQ2xpY2spXG5cdGQzLnNlbGVjdEFsbChcIiNtb2JpbGUtY2xlYXItbWFwLWJ1dHRvblwiKVxuXHRcdC5vbihcImNsaWNrXCIsIGhhbmRsZU1vYmlsZUNsZWFyTWFwQnRuQ2xpY2spXG59XG5cbmZ1bmN0aW9uIGhhbmRsZU1vYmlsZUNsZWFyTWFwQnRuQ2xpY2soKSB7XG5cdGQzLmV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG5cdGNsZWFyTWFwKClcblx0ZGlzcGF0Y2hNb2JpbGVDbGVhck1hcEJ0bkNsaWNrQW5hbHl0aWNzKClcbn1cblxuZnVuY3Rpb24gaGFuZGxlTW9iaWxlVG9nZ2xlUGFuZWxCdG5DbGljayAoKSB7XG5cdGQzLmV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG5cdHZhciB3cmFwcGVyID0gZDMuc2VsZWN0KFwiI3dyYXBwZXJcIik7XG5cdHZhciBzdGF0dXMgPSB3cmFwcGVyLmNsYXNzZWQoXCJtb2JpbGUtbWVudS1oaWRkZW5cIik7XG5cdHdyYXBwZXIuY2xhc3NlZChcIm1vYmlsZS1tZW51LWhpZGRlblwiLCAhc3RhdHVzKTtcblx0ZGlzcGF0Y2hNb2JpbGVUb2dnbGVQYW5lbEJ0bkNsaWNrQW5hbHl0aWNzKCFzdGF0dXMgPyBcIm9wZW5pbmdcIiA6IFwiY2xvc2luZ1wiKTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hNb2JpbGVDbGVhck1hcEJ0bkNsaWNrQW5hbHl0aWNzICgpIHtcblx0Z2EoJ3NlbmQnLCAnZXZlbnQnLCB7XG5cdFx0ZXZlbnRDYXRlZ29yeTogJ21vYmlsZSBjbGVhcm1hcCcsXG5cdFx0ZXZlbnRBY3Rpb246ICdjbGljaycsXG5cdFx0ZXZlbnRMYWJlbDogJ01vYmlsZSBDbGVhciBNYXAnLFxuXHRcdG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHR9KVxufVxuXG5mdW5jdGlvbiBkaXNwYXRjaE1vYmlsZVRvZ2dsZVBhbmVsQnRuQ2xpY2tBbmFseXRpY3MgKHN0YXR1cykge1xuXHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0XHRldmVudENhdGVnb3J5OiAnbW9iaWxlIG1lbnUnLFxuXHRcdGV2ZW50QWN0aW9uOiAnY2xpY2snLFxuXHRcdGV2ZW50TGFiZWw6ICdNb2JpbGUgUGFuZWwgVG9nZ2xlJyArIHN0YXR1cyxcblx0XHRub25JbnRlcmFjdGlvbjogZmFsc2Vcblx0fSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///33\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = BindDesktopMenuEvents;\n\nvar _map = __webpack_require__(1);\n\nfunction BindDesktopMenuEvents() {\n\td3.select(\"#toggle-panel-button\").on(\"click\", handleDesktopTogglePanelBtnClick);\n\td3.selectAll(\"#clear-map-button\").on(\"click\", handleDesktopClearMapBtnClick);\n}\n\nfunction handleDesktopClearMapBtnClick(e) {\n\td3.event.stopPropagation();\n\t(0, _map.clearMap)();\n\t// Quick and dirty solution -- creates a new session for google analytics?\n\t//var url = window.location.href.split('?')[0]\n\t//window.location.href = url\n\tdispatchDesktopClearMapBtnClickAnalytics();\n}\n\nfunction handleDesktopTogglePanelBtnClick(e) {\n\td3.event.stopPropagation();\n\tvar wrapper = d3.select(\"#wrapper\");\n\tvar status = wrapper.classed(\"panel-active\");\n\twrapper.classed(\"panel-active\", !status);\n\twrapper.classed(\"panel-inactive\", status);\n\t(0, _map.GetMap)().invalidateSize({ pan: false });\n\tdispatchDesktopTogglePanelBtnClickAnalytics(!status ? \"Open\" : \"Close\");\n}\n\nfunction dispatchDesktopClearMapBtnClickAnalytics() {\n\tga('send', 'event', {\n\t\teventCategory: 'desktop',\n\t\teventAction: 'click',\n\t\teventLabel: 'Clear Map Btn',\n\t\tnonInteraction: false\n\t});\n}\n\nfunction dispatchDesktopTogglePanelBtnClickAnalytics(status) {\n\tga('send', 'event', {\n\t\teventCategory: 'desktop',\n\t\teventAction: 'click',\n\t\teventLabel: 'Panel Toggle ' + status,\n\t\tnonInteraction: false\n\t});\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9wYW5lbFRvZ2dsZS5qcz9mMjY2Il0sIm5hbWVzIjpbIkJpbmREZXNrdG9wTWVudUV2ZW50cyIsImQzIiwic2VsZWN0Iiwib24iLCJoYW5kbGVEZXNrdG9wVG9nZ2xlUGFuZWxCdG5DbGljayIsInNlbGVjdEFsbCIsImhhbmRsZURlc2t0b3BDbGVhck1hcEJ0bkNsaWNrIiwiZSIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwiZGlzcGF0Y2hEZXNrdG9wQ2xlYXJNYXBCdG5DbGlja0FuYWx5dGljcyIsIndyYXBwZXIiLCJzdGF0dXMiLCJjbGFzc2VkIiwiaW52YWxpZGF0ZVNpemUiLCJwYW4iLCJkaXNwYXRjaERlc2t0b3BUb2dnbGVQYW5lbEJ0bkNsaWNrQW5hbHl0aWNzIiwiZ2EiLCJldmVudENhdGVnb3J5IiwiZXZlbnRBY3Rpb24iLCJldmVudExhYmVsIiwibm9uSW50ZXJhY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUV3QkEscUI7O0FBRnhCOztBQUVlLFNBQVNBLHFCQUFULEdBQWtDO0FBQ2hEQyxJQUFHQyxNQUFILENBQVUsc0JBQVYsRUFDRUMsRUFERixDQUNLLE9BREwsRUFDY0MsZ0NBRGQ7QUFFQUgsSUFBR0ksU0FBSCxDQUFhLG1CQUFiLEVBQ0VGLEVBREYsQ0FDSyxPQURMLEVBQ2NHLDZCQURkO0FBRUE7O0FBRUQsU0FBU0EsNkJBQVQsQ0FBdUNDLENBQXZDLEVBQTBDO0FBQ3pDTixJQUFHTyxLQUFILENBQVNDLGVBQVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQztBQUNBOztBQUVELFNBQVNOLGdDQUFULENBQTJDRyxDQUEzQyxFQUE4QztBQUM3Q04sSUFBR08sS0FBSCxDQUFTQyxlQUFUO0FBQ0EsS0FBSUUsVUFBVVYsR0FBR0MsTUFBSCxDQUFVLFVBQVYsQ0FBZDtBQUNBLEtBQUlVLFNBQVNELFFBQVFFLE9BQVIsQ0FBZ0IsY0FBaEIsQ0FBYjtBQUNBRixTQUFRRSxPQUFSLENBQWdCLGNBQWhCLEVBQWdDLENBQUNELE1BQWpDO0FBQ0FELFNBQVFFLE9BQVIsQ0FBZ0IsZ0JBQWhCLEVBQWtDRCxNQUFsQztBQUNDLG1CQUFELENBQVdFLGNBQVgsQ0FBMEIsRUFBQ0MsS0FBSyxLQUFOLEVBQTFCO0FBQ0FDLDZDQUE0QyxDQUFDSixNQUFELEdBQVUsTUFBVixHQUFtQixPQUEvRDtBQUNBOztBQUVELFNBQVNGLHdDQUFULEdBQXFEO0FBQ3BETyxJQUFHLE1BQUgsRUFBVyxPQUFYLEVBQW9CO0FBQ25CQyxpQkFBZSxTQURJO0FBRW5CQyxlQUFhLE9BRk07QUFHbkJDLGNBQVksZUFITztBQUluQkMsa0JBQWdCO0FBSkcsRUFBcEI7QUFNQTs7QUFFRCxTQUFTTCwyQ0FBVCxDQUFzREosTUFBdEQsRUFBOEQ7QUFDN0RLLElBQUcsTUFBSCxFQUFXLE9BQVgsRUFBb0I7QUFDbkJDLGlCQUFlLFNBREk7QUFFbkJDLGVBQWEsT0FGTTtBQUduQkMsY0FBWSxrQkFBa0JSLE1BSFg7QUFJbkJTLGtCQUFnQjtBQUpHLEVBQXBCO0FBTUEiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0dldE1hcCwgY2xlYXJNYXB9IGZyb20gXCIuL21hcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCaW5kRGVza3RvcE1lbnVFdmVudHMgKCkge1xuXHRkMy5zZWxlY3QoXCIjdG9nZ2xlLXBhbmVsLWJ1dHRvblwiKVxuXHRcdC5vbihcImNsaWNrXCIsIGhhbmRsZURlc2t0b3BUb2dnbGVQYW5lbEJ0bkNsaWNrKVxuXHRkMy5zZWxlY3RBbGwoXCIjY2xlYXItbWFwLWJ1dHRvblwiKVxuXHRcdC5vbihcImNsaWNrXCIsIGhhbmRsZURlc2t0b3BDbGVhck1hcEJ0bkNsaWNrKVxufVxuXG5mdW5jdGlvbiBoYW5kbGVEZXNrdG9wQ2xlYXJNYXBCdG5DbGljayhlKSB7XG5cdGQzLmV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXG5cdGNsZWFyTWFwKClcblx0Ly8gUXVpY2sgYW5kIGRpcnR5IHNvbHV0aW9uIC0tIGNyZWF0ZXMgYSBuZXcgc2Vzc2lvbiBmb3IgZ29vZ2xlIGFuYWx5dGljcz9cblx0Ly92YXIgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoJz8nKVswXVxuXHQvL3dpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsXG5cdGRpc3BhdGNoRGVza3RvcENsZWFyTWFwQnRuQ2xpY2tBbmFseXRpY3MoKVxufVxuXG5mdW5jdGlvbiBoYW5kbGVEZXNrdG9wVG9nZ2xlUGFuZWxCdG5DbGljayAoZSkge1xuXHRkMy5ldmVudC5zdG9wUHJvcGFnYXRpb24oKVxuXHR2YXIgd3JhcHBlciA9IGQzLnNlbGVjdChcIiN3cmFwcGVyXCIpO1xuXHR2YXIgc3RhdHVzID0gd3JhcHBlci5jbGFzc2VkKFwicGFuZWwtYWN0aXZlXCIpO1xuXHR3cmFwcGVyLmNsYXNzZWQoXCJwYW5lbC1hY3RpdmVcIiwgIXN0YXR1cyk7XG5cdHdyYXBwZXIuY2xhc3NlZChcInBhbmVsLWluYWN0aXZlXCIsIHN0YXR1cyk7XG5cdChHZXRNYXAoKSkuaW52YWxpZGF0ZVNpemUoe3BhbjogZmFsc2V9KTtcblx0ZGlzcGF0Y2hEZXNrdG9wVG9nZ2xlUGFuZWxCdG5DbGlja0FuYWx5dGljcyghc3RhdHVzID8gXCJPcGVuXCIgOiBcIkNsb3NlXCIpO1xufVxuXG5mdW5jdGlvbiBkaXNwYXRjaERlc2t0b3BDbGVhck1hcEJ0bkNsaWNrQW5hbHl0aWNzICgpIHtcblx0Z2EoJ3NlbmQnLCAnZXZlbnQnLCB7XG5cdFx0ZXZlbnRDYXRlZ29yeTogJ2Rlc2t0b3AnLFxuXHRcdGV2ZW50QWN0aW9uOiAnY2xpY2snLFxuXHRcdGV2ZW50TGFiZWw6ICdDbGVhciBNYXAgQnRuJyxcblx0XHRub25JbnRlcmFjdGlvbjogZmFsc2Vcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRGVza3RvcFRvZ2dsZVBhbmVsQnRuQ2xpY2tBbmFseXRpY3MgKHN0YXR1cykge1xuXHRnYSgnc2VuZCcsICdldmVudCcsIHtcblx0XHRldmVudENhdGVnb3J5OiAnZGVza3RvcCcsXG5cdFx0ZXZlbnRBY3Rpb246ICdjbGljaycsXG5cdFx0ZXZlbnRMYWJlbDogJ1BhbmVsIFRvZ2dsZSAnICsgc3RhdHVzLFxuXHRcdG5vbkludGVyYWN0aW9uOiBmYWxzZVxuXHR9KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n")},function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(36);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(37)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jc3Mvc2Fzcy9sYW5kYXQuc2Nzcz9hNWYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxjQUFjLG1CQUFPLENBQUMsRUFBaU47O0FBRXZPLDRDQUE0QyxRQUFTOztBQUVyRDtBQUNBOzs7O0FBSUEsZUFBZTs7QUFFZjtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyxFQUFtRDs7QUFFeEU7O0FBRUEsR0FBRyxLQUFVLEVBQUUiLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9sYW5kYXQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9sYW5kYXQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbGFuZGF0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jc3Mvc2Fzcy9sYW5kYXQuc2Nzcz80ZWIzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n")},function(module,exports,__webpack_require__){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve "head" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }\n                // }\n                if (typeof target === \'function\') {\n                        return target();\n                }\n                if (typeof memo[target] === "undefined") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(38);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === "object" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = "head";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error("Couldn\'t find a style target. This probably means that the value for the \'insertInto\' parameter is invalid.");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === "top") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === "bottom") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === "object" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + " " + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error("[Style Loader]\\n\\n Invalid value for parameter \'insertAt\' (\'options.insertAt\') found.\\n Must be \'top\', \'bottom\', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement("style");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement("link");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = "text/css";\n\t}\n\toptions.attrs.rel = "stylesheet";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don\'t add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute("media", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn\'t defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n')},function(module,exports){eval('\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function "fixes" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== "undefined" && window.location;\n\n  if (!location) {\n    throw new Error("fixUrls requires window.location");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== "string") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + "//" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, "/");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word "url" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn\'t a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn\'t a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn\'t a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^"(.*)"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^\'(.*)\'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf("//") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf("/") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with \'/\'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, ""); // Strip leading \'./\'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn "url(" + JSON.stringify(newUrl) + ")";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzP2Y2ZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxXQUFXLEVBQUU7QUFDckQsd0NBQXdDLFdBQVcsRUFBRTs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzQ0FBc0M7QUFDdEMsR0FBRztBQUNIO0FBQ0EsOERBQThEO0FBQzlEOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQSIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///38\n')}]);